01.02, 23:36:17 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:36:17 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:36:17 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:36:17 => INF | warn: 01.02.2025 23:36:17.853 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:36:17 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:36:18 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:38:33 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:38:33 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:38:33 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:38:33 => INF | warn: 01.02.2025 23:38:33.663 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:38:33 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:38:34 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:39:21 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:39:21 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:39:21 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:39:21 => INF | warn: 01.02.2025 23:39:21.842 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:39:21 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:39:22 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:40:17 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:40:17 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:40:17 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:40:17 => INF | warn: 01.02.2025 23:40:17.381 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:40:17 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:40:17 => DBG | Creating DbConnection.
01.02, 23:40:17 => DBG | Created DbConnection. (46ms).
01.02, 23:40:17 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:18 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:18 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
01.02, 23:40:18 => DBG | Created DbCommand for 'ExecuteNonQuery' (3ms).
01.02, 23:40:18 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (8ms).
01.02, 23:40:18 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
01.02, 23:40:19 => INF | Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
01.02, 23:40:19 => INF | info: 01.02.2025 23:40:19.019 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
01.02, 23:40:19 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:19 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
01.02, 23:40:19 => DBG | Creating DbCommand for 'ExecuteScalar'.
01.02, 23:40:19 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
01.02, 23:40:19 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
01.02, 23:40:19 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:19 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:19 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
01.02, 23:40:19 => INF | Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
01.02, 23:40:19 => INF | info: 01.02.2025 23:40:19.047 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
01.02, 23:40:19 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:19 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
01.02, 23:40:19 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:40:19 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
01.02, 23:40:19 => DBG | Disposed connection to database '' on server '' (2ms).
01.02, 23:40:41 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:40:41 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:40:42 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:40:42 => INF | warn: 01.02.2025 23:40:42.153 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:40:42 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:40:42 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:41:41 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:41:41 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:41:41 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:41:41 => INF | warn: 01.02.2025 23:41:41.431 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:41:41 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:41:41 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:42:11 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:42:11 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:42:11 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
01.02, 23:42:11 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:42:11 => INF | warn: 01.02.2025 23:42:11.885 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:42:11 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:42:12 => DBG | 'CineVaultDbContext' disposed.
01.02, 23:42:50 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
01.02, 23:42:50 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
01.02, 23:42:51 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
01.02, 23:42:51 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
01.02, 23:42:51 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:42:51 => INF | warn: 01.02.2025 23:42:51.224 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
01.02, 23:42:51 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
01.02, 23:42:51 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:26:18 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:26:18 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:26:19 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:26:19 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:26:19 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:19 => INF | warn: 02.02.2025 00:26:19.663 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:19 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:26:19 => DBG | Creating DbConnection.
02.02, 00:26:19 => DBG | Created DbConnection. (31ms).
02.02, 00:26:19 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.070 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:21 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (6ms).
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 00:26:21 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:26:21 => INF | Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.159 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (61ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      
      IF EXISTS
          (SELECT *
           FROM [sys].[objects] o
           WHERE [o].[type] = 'U'
           AND [o].[is_ms_shipped] = 0
           AND NOT EXISTS (SELECT *
               FROM [sys].[extended_properties] AS [ep]
               WHERE [ep].[major_id] = [o].[object_id]
                   AND [ep].[minor_id] = 0
                   AND [ep].[class] = 1
                   AND [ep].[name] = N'microsoft_database_tools_support'
          )
      )
      SELECT 1 ELSE SELECT 0
02.02, 00:26:21 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:26:21 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.299 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:21 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:26:21 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.305 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:26:21 => INF | Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.319 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 00:26:21 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:26:21 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:26:21 => INF | Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.407 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 00:26:21 => DBG | Committing transaction.
02.02, 00:26:21 => DBG | Committed transaction.
02.02, 00:26:21 => DBG | Disposing transaction.
02.02, 00:26:21 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:26:21 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.425 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:21 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.430 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:26:21 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.439 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 00:26:21 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 00:26:21 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.453 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:26:21 => ERR | Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:26:21 => INF | fail: 02.02.2025 00:26:21.492 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 00:26:21 => DBG | Disposing transaction.
02.02, 00:26:21 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:21 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:21 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 00:26:21 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:26:21 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:26:21 => INF | info: 02.02.2025 00:26:21.504 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 00:26:21 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:26:21 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:26:21 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:21 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:26:45 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:26:45 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:26:46 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:26:46 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:26:46 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:46 => INF | warn: 02.02.2025 00:26:46.166 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:46 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:26:46 => DBG | Creating DbConnection.
02.02, 00:26:46 => DBG | Created DbConnection. (24ms).
02.02, 00:26:46 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:46 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:46 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 00:26:46 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:46 => INF | Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:46 => INF | info: 02.02.2025 00:26:46.511 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:46 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 00:26:46 => DBG | Creating DbConnection.
02.02, 00:26:46 => DBG | Created DbConnection. (1ms).
02.02, 00:26:46 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:46 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:46 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:46 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 00:26:46 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 00:26:46 => INF | info: 02.02.2025 00:26:46.559 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 00:26:46 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:46 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:46 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:46 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 00:26:46 => INF | Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 00:26:46 => INF | info: 02.02.2025 00:26:46.593 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 00:26:46 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:26:46 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:26:46 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:26:46 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:46 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:26:50 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:26:50 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:26:51 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:26:51 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:26:51 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:51 => INF | warn: 02.02.2025 00:26:51.213 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:26:51 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:26:51 => DBG | Creating DbConnection.
02.02, 00:26:51 => DBG | Created DbConnection. (33ms).
02.02, 00:26:51 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:51 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:51 => DBG | Creating DbConnection.
02.02, 00:26:51 => DBG | Created DbConnection. (1ms).
02.02, 00:26:51 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:51 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:51 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:51 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:26:51 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:26:51 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:26:52 => INF | Executed DbCommand (583ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.272 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (583ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:26:52 => INF | Executed DbCommand (91ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.371 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (91ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 00:26:52 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (5ms).
02.02, 00:26:52 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 00:26:52 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.406 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:52 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:26:52 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:26:52 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.518 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Actors] (
          [Id] int NOT NULL IDENTITY,
          [FullName] nvarchar(64) NOT NULL,
          [BirthDate] date NOT NULL,
          [Biography] nvarchar(512) NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ActorId] PRIMARY KEY ([Id])
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.526 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(64) NOT NULL,
          [Description] nvarchar(512) NULL,
          [Genre] nvarchar(64) NULL,
          [Director] nvarchar(64) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [MovieId] PRIMARY KEY ([Id])
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.533 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(64) NOT NULL,
          [Email] nvarchar(64) NOT NULL,
          [Password] nvarchar(64) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [UserId] PRIMARY KEY ([Id])
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:26:52 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.541 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [ActorMovie] (
          [ActorsId] int NOT NULL,
          [MoviesId] int NOT NULL,
          CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
          CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.549 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(512) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.556 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.562 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.566 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:26:52 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.571 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.576 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.582 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.587 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.592 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:26:52 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.597 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.602 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:26:52 => DBG | Committing transaction.
02.02, 00:26:52 => DBG | Committed transaction.
02.02, 00:26:52 => DBG | Disposing transaction.
02.02, 00:26:52 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:26:52 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.673 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:52 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:26:52 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.678 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:26:52 => INF | Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.702 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 00:26:52 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:26:52 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:26:52 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.726 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 00:26:52 => DBG | Committing transaction.
02.02, 00:26:52 => DBG | Committed transaction.
02.02, 00:26:52 => DBG | Disposing transaction.
02.02, 00:26:52 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:26:52 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.737 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:52 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.743 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:26:52 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.751 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 00:26:52 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 00:26:52 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.766 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => ERR | Failed executing DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:26:52 => INF | fail: 02.02.2025 00:26:52.796 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 00:26:52 => DBG | Disposing transaction.
02.02, 00:26:52 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:26:52 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:26:52 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:26:52 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:26:52 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:26:52 => INF | info: 02.02.2025 00:26:52.805 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 00:26:52 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:26:52 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:26:52 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:26:52 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:27:32 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:27:32 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:27:32 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:27:32 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:27:32 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:27:32 => INF | warn: 02.02.2025 00:27:32.521 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:27:32 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:27:32 => DBG | Creating DbConnection.
02.02, 00:27:32 => DBG | Created DbConnection. (24ms).
02.02, 00:27:32 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:32 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:27:32 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 00:27:32 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:32 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:32 => INF | info: 02.02.2025 00:27:32.967 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:27:32 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 00:27:32 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:32 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:27:32 => INF | info: 02.02.2025 00:27:32.980 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:27:32 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:32 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:32 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 00:27:32 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:27:32 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.001 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 00:27:33 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:27:33 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:27:33 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.059 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 00:27:33 => DBG | Committing transaction.
02.02, 00:27:33 => DBG | Committed transaction.
02.02, 00:27:33 => DBG | Disposing transaction.
02.02, 00:27:33 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:27:33 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:33 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.073 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:33 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.081 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:27:33 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.090 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 00:27:33 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:33 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:27:33 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.102 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:27:33 => ERR | Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:27:33 => INF | fail: 02.02.2025 00:27:33.129 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 00:27:33 => DBG | Disposing transaction.
02.02, 00:27:33 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:33 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:27:33 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:27:33 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:27:33 => INF | info: 02.02.2025 00:27:33.139 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 00:27:33 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:33 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:27:33 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:27:33 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:33 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:27:54 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:27:55 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:27:55 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:27:55 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:27:55 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:27:55 => INF | warn: 02.02.2025 00:27:55.545 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:27:55 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:27:55 => DBG | Creating DbConnection.
02.02, 00:27:55 => DBG | Created DbConnection. (32ms).
02.02, 00:27:55 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:55 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:55 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:55 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:27:55 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:27:55 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.022 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:27:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (6ms).
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:56 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:27:56 => INF | Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.075 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      
      IF EXISTS
          (SELECT *
           FROM [sys].[objects] o
           WHERE [o].[type] = 'U'
           AND [o].[is_ms_shipped] = 0
           AND NOT EXISTS (SELECT *
               FROM [sys].[extended_properties] AS [ep]
               WHERE [ep].[major_id] = [o].[object_id]
                   AND [ep].[minor_id] = 0
                   AND [ep].[class] = 1
                   AND [ep].[name] = N'microsoft_database_tools_support'
          )
      )
      SELECT 1 ELSE SELECT 0
02.02, 00:27:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:27:56 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.210 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:27:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:27:56 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.217 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:27:56 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.230 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 00:27:56 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:27:56 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:27:56 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.310 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 00:27:56 => DBG | Committing transaction.
02.02, 00:27:56 => DBG | Committed transaction.
02.02, 00:27:56 => DBG | Disposing transaction.
02.02, 00:27:56 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:27:56 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.330 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:56 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.335 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:27:56 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.343 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 00:27:56 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 00:27:56 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.358 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:27:56 => ERR | Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:27:56 => INF | fail: 02.02.2025 00:27:56.394 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 00:27:56 => DBG | Disposing transaction.
02.02, 00:27:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:27:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:27:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:27:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:27:56 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:27:56 => INF | info: 02.02.2025 00:27:56.402 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 00:27:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:27:56 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:27:56 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:27:56 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 00:28:51 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:28:51 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:28:51 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:28:51 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:28:51 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:28:51 => INF | warn: 02.02.2025 00:28:51.384 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:28:51 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:28:51 => DBG | Creating DbConnection.
02.02, 00:28:51 => DBG | Created DbConnection. (24ms).
02.02, 00:28:51 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:28:51 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:28:51 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 00:28:51 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:28:51 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:28:51 => INF | info: 02.02.2025 00:28:51.729 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:28:51 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (4ms).
02.02, 00:28:51 => DBG | Creating DbConnection.
02.02, 00:28:51 => DBG | Created DbConnection. (1ms).
02.02, 00:28:51 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:28:51 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:28:51 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:28:51 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 00:28:51 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 00:28:51 => INF | info: 02.02.2025 00:28:51.771 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 00:28:51 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:28:51 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:28:51 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:28:51 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 00:28:51 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 00:28:51 => INF | info: 02.02.2025 00:28:51.795 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 00:28:51 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:28:51 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:28:51 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:28:51 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:28:51 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 00:31:39 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:31:39 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:31:40 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:31:40 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:31:40 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:31:40 => INF | warn: 02.02.2025 00:31:40.395 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:31:40 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:31:40 => DBG | Creating DbConnection.
02.02, 00:31:40 => DBG | Created DbConnection. (31ms).
02.02, 00:31:40 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:40 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:40 => DBG | Creating DbConnection.
02.02, 00:31:40 => DBG | Created DbConnection. (1ms).
02.02, 00:31:40 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:40 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:40 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:40 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:31:40 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (11ms).
02.02, 00:31:40 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:31:41 => INF | Executed DbCommand (548ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.408 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (548ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:31:41 => INF | Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.485 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (70ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 00:31:41 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (5ms).
02.02, 00:31:41 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:31:41 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.601 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:31:41 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:31:41 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:31:41 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.705 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Actors] (
          [Id] int NOT NULL IDENTITY,
          [FullName] nvarchar(64) NOT NULL,
          [BirthDate] date NOT NULL,
          [Biography] nvarchar(512) NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ActorId] PRIMARY KEY ([Id])
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.715 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(64) NOT NULL,
          [Description] nvarchar(512) NULL,
          [Genre] nvarchar(64) NULL,
          [Director] nvarchar(64) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [MovieId] PRIMARY KEY ([Id])
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.721 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(64) NOT NULL,
          [Email] nvarchar(64) NOT NULL,
          [Password] nvarchar(64) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [UserId] PRIMARY KEY ([Id])
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:31:41 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.730 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [ActorMovie] (
          [ActorsId] int NOT NULL,
          [MoviesId] int NOT NULL,
          CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
          CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:31:41 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.737 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(512) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:31:41 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.744 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.749 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.755 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.761 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.766 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.772 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.779 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.784 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.789 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.796 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:31:41 => DBG | Committing transaction.
02.02, 00:31:41 => DBG | Committed transaction.
02.02, 00:31:41 => DBG | Disposing transaction.
02.02, 00:31:41 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:31:41 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.863 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:31:41 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:31:41 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.868 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:31:41 => INF | Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.892 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 00:31:41 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:31:41 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.912 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 00:31:41 => DBG | Committing transaction.
02.02, 00:31:41 => DBG | Committed transaction.
02.02, 00:31:41 => DBG | Disposing transaction.
02.02, 00:31:41 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:31:41 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.922 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:31:41 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.927 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:31:41 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.935 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 00:31:41 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 00:31:41 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.948 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => ERR | Failed executing DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 00:31:41 => INF | fail: 02.02.2025 00:31:41.978 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 00:31:41 => DBG | Disposing transaction.
02.02, 00:31:41 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:31:41 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:31:41 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:31:41 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:31:41 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 00:31:41 => INF | info: 02.02.2025 00:31:41.987 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 00:31:41 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:31:41 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:31:41 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:31:41 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:33:04 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:33:04 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:33:05 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:33:05 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:33:05 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:33:05 => INF | warn: 02.02.2025 00:33:05.432 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:33:05 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:33:05 => DBG | Creating DbConnection.
02.02, 00:33:05 => DBG | Created DbConnection. (33ms).
02.02, 00:33:05 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:05 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:05 => DBG | Creating DbConnection.
02.02, 00:33:05 => DBG | Created DbConnection. (1ms).
02.02, 00:33:05 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:05 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:05 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:05 => DBG | Created DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:33:05 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:33:05 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:33:06 => INF | Executed DbCommand (511ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.415 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (511ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:33:06 => INF | Executed DbCommand (89ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.512 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (89ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 00:33:06 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (7ms).
02.02, 00:33:06 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 00:33:06 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:33:06 => INF | Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.551 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:33:06 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:33:06 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 00:33:06 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ActorId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.663 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Actors] (
          [Id] int NOT NULL IDENTITY,
          [FullName] nvarchar(64) NOT NULL,
          [BirthDate] date NOT NULL,
          [Biography] nvarchar(512) NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ActorId] PRIMARY KEY ([Id])
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(64) NOT NULL,
    [Description] nvarchar(512) NULL,
    [Genre] nvarchar(64) NULL,
    [Director] nvarchar(64) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [MovieId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.674 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(64) NOT NULL,
          [Description] nvarchar(512) NULL,
          [Genre] nvarchar(64) NULL,
          [Director] nvarchar(64) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [MovieId] PRIMARY KEY ([Id])
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(64) NOT NULL,
    [Email] nvarchar(64) NOT NULL,
    [Password] nvarchar(64) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [UserId] PRIMARY KEY ([Id])
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.682 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(64) NOT NULL,
          [Email] nvarchar(64) NOT NULL,
          [Password] nvarchar(64) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [UserId] PRIMARY KEY ([Id])
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:33:06 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.691 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [ActorMovie] (
          [ActorsId] int NOT NULL,
          [MoviesId] int NOT NULL,
          CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
          CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:33:06 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(512) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.699 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(512) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReviewId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:33:06 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.706 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [ReactionId] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:33:06 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.715 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.724 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.730 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.736 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.742 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.749 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.755 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.760 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 00:33:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:33:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 00:33:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 00:33:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:33:06 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:33:06 => INF | info: 02.02.2025 00:33:06.766 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 00:33:06 => DBG | Committing transaction.
02.02, 00:33:06 => DBG | Committed transaction.
02.02, 00:33:06 => DBG | Disposing transaction.
02.02, 00:33:06 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:33:06 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:33:06 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:33:06 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:33:06 => DBG | Registered model binder providers, in the following order: ["Asp.Versioning.ApiVersionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
02.02, 00:33:06 => DBG | Hosting starting
02.02, 00:33:06 => DBG | Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
02.02, 00:33:06 => DBG | Wildcard detected, all requests with hosts will be allowed.
02.02, 00:33:06 => INF | Now listening on: https://localhost:7171
02.02, 00:33:06 => INF | Now listening on: http://localhost:5140
02.02, 00:33:06 => DBG | Loaded hosting startup assembly CineVault.API
02.02, 00:33:06 => INF | Application started. Press Ctrl+C to shut down.
02.02, 00:33:06 => INF | Hosting environment: Development
02.02, 00:33:06 => INF | Content root path: C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API
02.02, 00:33:06 => DBG | Hosting started
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILCV" received FIN.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILCV" accepted.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILCV" started.
02.02, 00:33:07 => DBG | Failed to authenticate HTTPS connection.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILCV" stopped.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILCV" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" accepted.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" started.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD1" accepted.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD1" started.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" received FIN.
02.02, 00:33:07 => DBG | Connection 0HNA321J6ILD1 established using the following protocol: "Tls12"
02.02, 00:33:07 => DBG | Connection 0HNA321J6ILD0 established using the following protocol: "Tls12"
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" is closed. The last processed stream ID was 0.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:33:07 => DBG | The connection queue processing loop for 0HNA321J6ILD0 completed.
02.02, 00:33:07 => DBG | Connection id "0HNA321J6ILD0" stopped.
02.02, 00:33:07 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html - null null
02.02, 00:33:07 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:33:07 => DBG | Request did not match any endpoints
02.02, 00:33:07 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html - 200 null text/html;charset=utf-8 145.842ms
02.02, 00:33:07 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.js - null null
02.02, 00:33:07 => DBG | No candidates found for the request path '/swagger/index.js'
02.02, 00:33:07 => DBG | Request did not match any endpoints
02.02, 00:33:07 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.js - 200 null application/javascript;charset=utf-8 6.8973ms
02.02, 00:33:07 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - null null
02.02, 00:33:07 => DBG | No candidates found for the request path '/swagger/v1/swagger.json'
02.02, 00:33:07 => DBG | Request did not match any endpoints
02.02, 00:33:07 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/favicon-32x32.png - null null
02.02, 00:33:07 => DBG | No candidates found for the request path '/swagger/favicon-32x32.png'
02.02, 00:33:07 => DBG | Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:33:07 => DBG | Request did not match any endpoints
02.02, 00:33:07 => DBG | Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:33:07 => INF | Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
02.02, 00:33:07 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/favicon-32x32.png - 200 628 image/png 20.5433ms
02.02, 00:33:07 => DBG | Executing API description provider 'VersionedApiDescriptionProvider' from assembly Asp.Versioning.Mvc.ApiExplorer v8.1.0.0.
02.02, 00:33:07 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 168.6509ms
02.02, 00:33:09 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html - null null
02.02, 00:33:09 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:33:09 => DBG | Request did not match any endpoints
02.02, 00:33:09 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html - 200 null text/html;charset=utf-8 4.5028ms
02.02, 00:33:09 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.js - null null
02.02, 00:33:09 => DBG | No candidates found for the request path '/swagger/index.js'
02.02, 00:33:09 => DBG | Request did not match any endpoints
02.02, 00:33:09 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.js - 200 null application/javascript;charset=utf-8 6.2739ms
02.02, 00:33:10 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - null null
02.02, 00:33:10 => DBG | No candidates found for the request path '/swagger/v1/swagger.json'
02.02, 00:33:10 => DBG | Request did not match any endpoints
02.02, 00:33:10 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 12.2622ms
02.02, 00:35:22 => DBG | Connection id "0HNA321J6ILD1" is closing.
02.02, 00:35:22 => DBG | Connection id "0HNA321J6ILD1" is closed. The last processed stream ID was 13.
02.02, 00:35:22 => DBG | Connection id "0HNA321J6ILD1" received FIN.
02.02, 00:35:22 => DBG | The connection queue processing loop for 0HNA321J6ILD1 completed.
02.02, 00:35:22 => DBG | Connection id "0HNA321J6ILD1" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:35:22 => DBG | Connection id "0HNA321J6ILD1" stopped.
02.02, 00:38:26 => DBG | Connection id "0HNA321J6ILD2" accepted.
02.02, 00:38:26 => DBG | Connection id "0HNA321J6ILD2" started.
02.02, 00:38:26 => DBG | Connection 0HNA321J6ILD2 established using the following protocol: "Tls12"
02.02, 00:38:26 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - null null
02.02, 00:38:26 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:38:26 => DBG | Request did not match any endpoints
02.02, 00:38:26 => ERR | An unhandled exception has occurred while executing the request.
02.02, 00:38:26 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - 500 null text/plain; charset=utf-8 26.8041ms
02.02, 00:39:17 => INF | Application is shutting down...
02.02, 00:39:17 => DBG | Hosting stopping
02.02, 00:39:17 => DBG | Connection id "0HNA321J6ILD2" is closing.
02.02, 00:39:17 => DBG | Connection id "0HNA321J6ILD2" is closed. The last processed stream ID was 1.
02.02, 00:39:17 => DBG | The connection queue processing loop for 0HNA321J6ILD2 completed.
02.02, 00:39:17 => DBG | Connection id "0HNA321J6ILD2" received FIN.
02.02, 00:39:17 => DBG | Connection id "0HNA321J6ILD2" stopped.
02.02, 00:39:17 => DBG | Connection id "0HNA321J6ILD2" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:39:17 => DBG | Hosting stopped
02.02, 00:39:21 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:39:21 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:39:22 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:39:22 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:39:22 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:39:22 => INF | warn: 02.02.2025 00:39:22.292 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:39:22 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:39:22 => DBG | Creating DbConnection.
02.02, 00:39:22 => DBG | Created DbConnection. (31ms).
02.02, 00:39:22 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:39:22 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:39:22 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (11ms).
02.02, 00:39:22 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:39:22 => INF | Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:39:22 => INF | info: 02.02.2025 00:39:22.764 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:39:22 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (6ms).
02.02, 00:39:22 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:39:22 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:39:22 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:39:22 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:39:22 => INF | Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:39:22 => INF | info: 02.02.2025 00:39:22.820 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      
      IF EXISTS
          (SELECT *
           FROM [sys].[objects] o
           WHERE [o].[type] = 'U'
           AND [o].[is_ms_shipped] = 0
           AND NOT EXISTS (SELECT *
               FROM [sys].[extended_properties] AS [ep]
               WHERE [ep].[major_id] = [o].[object_id]
                   AND [ep].[minor_id] = 0
                   AND [ep].[class] = 1
                   AND [ep].[name] = N'microsoft_database_tools_support'
          )
      )
      SELECT 1 ELSE SELECT 0
02.02, 00:39:22 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:39:22 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:39:22 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:39:22 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:39:22 => DBG | Registered model binder providers, in the following order: ["Asp.Versioning.ApiVersionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
02.02, 00:39:22 => DBG | Hosting starting
02.02, 00:39:22 => DBG | Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
02.02, 00:39:22 => DBG | Wildcard detected, all requests with hosts will be allowed.
02.02, 00:39:22 => INF | Now listening on: https://localhost:7171
02.02, 00:39:22 => INF | Now listening on: http://localhost:5140
02.02, 00:39:22 => DBG | Loaded hosting startup assembly CineVault.API
02.02, 00:39:22 => INF | Application started. Press Ctrl+C to shut down.
02.02, 00:39:22 => INF | Hosting environment: Development
02.02, 00:39:22 => INF | Content root path: C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API
02.02, 00:39:22 => DBG | Hosting started
02.02, 00:39:23 => DBG | Connection id "0HNA32537985I" received FIN.
02.02, 00:39:23 => DBG | Connection id "0HNA32537985I" accepted.
02.02, 00:39:23 => DBG | Connection id "0HNA32537985I" started.
02.02, 00:39:23 => DBG | Failed to authenticate HTTPS connection.
02.02, 00:39:23 => DBG | Connection id "0HNA32537985I" stopped.
02.02, 00:39:23 => DBG | Connection id "0HNA32537985I" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:39:23 => DBG | Connection id "0HNA32537985J" accepted.
02.02, 00:39:23 => DBG | Connection id "0HNA32537985J" started.
02.02, 00:39:23 => DBG | Connection 0HNA32537985J established using the following protocol: "Tls12"
02.02, 00:39:23 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html - null null
02.02, 00:39:23 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:39:23 => DBG | Request did not match any endpoints
02.02, 00:39:23 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html - 200 null text/html;charset=utf-8 137.4224ms
02.02, 00:39:23 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.js - null null
02.02, 00:39:23 => DBG | No candidates found for the request path '/swagger/index.js'
02.02, 00:39:23 => DBG | Request did not match any endpoints
02.02, 00:39:23 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.js - 200 null application/javascript;charset=utf-8 6.4221ms
02.02, 00:39:23 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - null null
02.02, 00:39:23 => DBG | No candidates found for the request path '/swagger/v1/swagger.json'
02.02, 00:39:23 => DBG | Request did not match any endpoints
02.02, 00:39:23 => DBG | Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:39:23 => DBG | Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:39:23 => DBG | Executing API description provider 'VersionedApiDescriptionProvider' from assembly Asp.Versioning.Mvc.ApiExplorer v8.1.0.0.
02.02, 00:39:23 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 163.8749ms
02.02, 00:39:25 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - null null
02.02, 00:39:25 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:39:25 => DBG | Request did not match any endpoints
02.02, 00:39:25 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - 200 null application/json;charset=utf-8 44.4764ms
02.02, 00:41:37 => DBG | Connection id "0HNA32537985J" is closing.
02.02, 00:41:37 => DBG | Connection id "0HNA32537985J" is closed. The last processed stream ID was 7.
02.02, 00:41:37 => DBG | Connection id "0HNA32537985J" received FIN.
02.02, 00:41:37 => DBG | The connection queue processing loop for 0HNA32537985J completed.
02.02, 00:41:37 => DBG | Connection id "0HNA32537985J" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:41:37 => DBG | Connection id "0HNA32537985J" stopped.
02.02, 00:50:09 => INF | Application is shutting down...
02.02, 00:50:09 => DBG | Hosting stopping
02.02, 00:50:09 => DBG | Hosting stopped
02.02, 00:50:13 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:50:13 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:50:13 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:50:13 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:50:13 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:50:13 => INF | warn: 02.02.2025 00:50:13.899 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:50:14 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:50:14 => DBG | Creating DbConnection.
02.02, 00:50:14 => DBG | Created DbConnection. (31ms).
02.02, 00:50:14 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:50:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:50:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:50:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:50:14 => INF | Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:50:14 => INF | info: 02.02.2025 00:50:14.365 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:50:14 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (6ms).
02.02, 00:50:14 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:50:14 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:50:14 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:50:14 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:50:14 => INF | Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:50:14 => INF | info: 02.02.2025 00:50:14.421 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      
      IF EXISTS
          (SELECT *
           FROM [sys].[objects] o
           WHERE [o].[type] = 'U'
           AND [o].[is_ms_shipped] = 0
           AND NOT EXISTS (SELECT *
               FROM [sys].[extended_properties] AS [ep]
               WHERE [ep].[major_id] = [o].[object_id]
                   AND [ep].[minor_id] = 0
                   AND [ep].[class] = 1
                   AND [ep].[name] = N'microsoft_database_tools_support'
          )
      )
      SELECT 1 ELSE SELECT 0
02.02, 00:50:14 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:50:14 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:50:14 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:14 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:50:14 => DBG | Registered model binder providers, in the following order: ["Asp.Versioning.ApiVersionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
02.02, 00:50:14 => DBG | Hosting starting
02.02, 00:50:14 => DBG | Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
02.02, 00:50:14 => DBG | Wildcard detected, all requests with hosts will be allowed.
02.02, 00:50:14 => INF | Now listening on: https://localhost:7171
02.02, 00:50:14 => INF | Now listening on: http://localhost:5140
02.02, 00:50:14 => DBG | Loaded hosting startup assembly CineVault.API
02.02, 00:50:14 => INF | Application started. Press Ctrl+C to shut down.
02.02, 00:50:14 => INF | Hosting environment: Development
02.02, 00:50:14 => INF | Content root path: C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API
02.02, 00:50:14 => DBG | Hosting started
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SA" received FIN.
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SA" accepted.
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SA" started.
02.02, 00:50:14 => DBG | Failed to authenticate HTTPS connection.
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SA" stopped.
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SA" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SB" accepted.
02.02, 00:50:14 => DBG | Connection id "0HNA32B5DN6SB" started.
02.02, 00:50:14 => DBG | Connection 0HNA32B5DN6SB established using the following protocol: "Tls12"
02.02, 00:50:14 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html - null null
02.02, 00:50:15 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:50:15 => DBG | Request did not match any endpoints
02.02, 00:50:15 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html - 200 null text/html;charset=utf-8 138.5049ms
02.02, 00:50:15 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.js - null null
02.02, 00:50:15 => DBG | No candidates found for the request path '/swagger/index.js'
02.02, 00:50:15 => DBG | Request did not match any endpoints
02.02, 00:50:15 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.js - 200 null application/javascript;charset=utf-8 10.3953ms
02.02, 00:50:15 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - null null
02.02, 00:50:15 => DBG | No candidates found for the request path '/swagger/v1/swagger.json'
02.02, 00:50:15 => DBG | Request did not match any endpoints
02.02, 00:50:15 => DBG | Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:50:15 => DBG | Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:50:15 => DBG | Executing API description provider 'VersionedApiDescriptionProvider' from assembly Asp.Versioning.Mvc.ApiExplorer v8.1.0.0.
02.02, 00:50:15 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 155.0775ms
02.02, 00:50:17 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - null null
02.02, 00:50:17 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:50:17 => DBG | Request did not match any endpoints
02.02, 00:50:17 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - 200 null application/json;charset=utf-8 43.9973ms
02.02, 00:50:48 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors - application/json 325
02.02, 00:50:48 => DBG | 1 candidate(s) found for the request path '/api/v2/actors'
02.02, 00:50:48 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors' is valid for the request path '/api/v2/actors'
02.02, 00:50:48 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:50:48 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:50:48 => INF | Serilog | Handling request: /api/v2/actors for controller Actors with method CreateActorV2
02.02, 00:50:48 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:50:48 => INF | Route matched with {action = "CreateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateActorV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:50:48 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:50:48 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:50:48 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:50:48 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:50:48 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:50:48 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:50:48 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:50:48 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:50:48 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:50:48 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:50:48 => DBG | Connection id "0HNA32B5DN6SB", Request id "0HNA32B5DN6SB:00000009": started reading request body.
02.02, 00:50:48 => DBG | Connection id "0HNA32B5DN6SB", Request id "0HNA32B5DN6SB:00000009": done reading request body.
02.02, 00:50:48 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:50:48 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:50:48 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:50:48 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:50:48 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:50:48 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:50:48 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:50:48 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .Any(a => a.FullName == __request_Data_FullName_0)'
02.02, 00:50:48 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && (a.FullName == @__request_Data_FullName_0))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && (a.FullName == @__request_Data_FullName_0)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:50:49 => DBG | Creating DbConnection.
02.02, 00:50:49 => DBG | Created DbConnection. (1ms).
02.02, 00:50:49 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:49 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:49 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:50:49 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:50:49 => DBG | Initialized DbCommand for 'ExecuteReader' (6ms).
02.02, 00:50:49 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:50:49 => INF | Executed DbCommand (33ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:50:49 => INF | info: 02.02.2025 00:50:49.106 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (33ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:50:49 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:49 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 16ms reading results.
02.02, 00:50:49 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:49 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (2ms).
02.02, 00:50:49 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) in 606.0782ms
02.02, 00:50:49 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:50:49 => ERR | Serilog | Something went wrong! Exception: Mapster.CompileException: Error while compiling
source=CineVault.API.Controllers.Actors.ActorRequest
destination=CineVault.API.Entities.Actor
type=Map
 ---> System.InvalidOperationException: No default constructor for type 'Actor', please use 'ConstructUsing' or 'MapWith'
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.ClassAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.ClassAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateDynamicMapExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<GetDynamicMapFunction>b__67_0[TDestination](TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetDynamicMapFunction[TDestination](Type sourceType)
   at MapsterMapper.Mapper.Map[TDestination](Object source)
   at CineVault.API.Controllers.Actors.ActorsController.CreateActorV2(BaseRequest`1 request) in C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API\Controllers\Actors\ActorsController.cs:line 67
   at lambda_method15(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at CineVault.API.Middlewares.SerilogMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API\Middlewares\SerilogMiddleware.cs:line 29
02.02, 00:50:49 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:50:49 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:50:49 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:50:49 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors - 200 0 null 690.9106ms
02.02, 00:51:52 => INF | Application is shutting down...
02.02, 00:51:52 => DBG | Hosting stopping
02.02, 00:51:52 => DBG | Connection id "0HNA32B5DN6SB" is closing.
02.02, 00:51:52 => DBG | Connection id "0HNA32B5DN6SB" is closed. The last processed stream ID was 9.
02.02, 00:51:52 => DBG | Connection id "0HNA32B5DN6SB" received FIN.
02.02, 00:51:52 => DBG | The connection queue processing loop for 0HNA32B5DN6SB completed.
02.02, 00:51:52 => DBG | Connection id "0HNA32B5DN6SB" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:51:52 => DBG | Connection id "0HNA32B5DN6SB" stopped.
02.02, 00:51:52 => DBG | Hosting stopped
02.02, 00:51:58 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 00:51:58 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 00:51:59 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 00:51:59 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 00:51:59 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:51:59 => INF | warn: 02.02.2025 00:51:59.117 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 00:51:59 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:51:59 => DBG | Creating DbConnection.
02.02, 00:51:59 => DBG | Created DbConnection. (30ms).
02.02, 00:51:59 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 00:51:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 00:51:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (10ms).
02.02, 00:51:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:51:59 => INF | Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 00:51:59 => INF | info: 02.02.2025 00:51:59.587 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 00:51:59 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (6ms).
02.02, 00:51:59 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 00:51:59 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 00:51:59 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 00:51:59 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:51:59 => INF | Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
02.02, 00:51:59 => INF | info: 02.02.2025 00:51:59.641 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      
      IF EXISTS
          (SELECT *
           FROM [sys].[objects] o
           WHERE [o].[type] = 'U'
           AND [o].[is_ms_shipped] = 0
           AND NOT EXISTS (SELECT *
               FROM [sys].[extended_properties] AS [ep]
               WHERE [ep].[major_id] = [o].[object_id]
                   AND [ep].[minor_id] = 0
                   AND [ep].[class] = 1
                   AND [ep].[name] = N'microsoft_database_tools_support'
          )
      )
      SELECT 1 ELSE SELECT 0
02.02, 00:51:59 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:51:59 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:51:59 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:51:59 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:51:59 => DBG | Registered model binder providers, in the following order: ["Asp.Versioning.ApiVersionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
02.02, 00:51:59 => DBG | Hosting starting
02.02, 00:51:59 => DBG | Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
02.02, 00:51:59 => DBG | Wildcard detected, all requests with hosts will be allowed.
02.02, 00:51:59 => INF | Now listening on: https://localhost:7171
02.02, 00:51:59 => INF | Now listening on: http://localhost:5140
02.02, 00:51:59 => DBG | Loaded hosting startup assembly CineVault.API
02.02, 00:51:59 => INF | Application started. Press Ctrl+C to shut down.
02.02, 00:51:59 => INF | Hosting environment: Development
02.02, 00:51:59 => INF | Content root path: C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API
02.02, 00:51:59 => DBG | Hosting started
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6A" received FIN.
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6A" accepted.
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6A" started.
02.02, 00:52:00 => DBG | Failed to authenticate HTTPS connection.
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6A" stopped.
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6A" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6B" accepted.
02.02, 00:52:00 => DBG | Connection id "0HNA32C4OUG6B" started.
02.02, 00:52:00 => DBG | Connection 0HNA32C4OUG6B established using the following protocol: "Tls12"
02.02, 00:52:00 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html - null null
02.02, 00:52:00 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:52:00 => DBG | Request did not match any endpoints
02.02, 00:52:00 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html - 200 null text/html;charset=utf-8 138.3785ms
02.02, 00:52:00 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.js - null null
02.02, 00:52:00 => DBG | No candidates found for the request path '/swagger/index.js'
02.02, 00:52:00 => DBG | Request did not match any endpoints
02.02, 00:52:00 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.js - 200 null application/javascript;charset=utf-8 7.8086ms
02.02, 00:52:00 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - null null
02.02, 00:52:00 => DBG | No candidates found for the request path '/swagger/v1/swagger.json'
02.02, 00:52:00 => DBG | Request did not match any endpoints
02.02, 00:52:00 => DBG | Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:52:00 => DBG | Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
02.02, 00:52:00 => DBG | Executing API description provider 'VersionedApiDescriptionProvider' from assembly Asp.Versioning.Mvc.ApiExplorer v8.1.0.0.
02.02, 00:52:00 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 158.9956ms
02.02, 00:52:01 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - null null
02.02, 00:52:01 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:52:01 => DBG | Request did not match any endpoints
02.02, 00:52:01 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json - 200 null application/json;charset=utf-8 44.0741ms
02.02, 00:52:21 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors - application/json 325
02.02, 00:52:21 => DBG | 1 candidate(s) found for the request path '/api/v2/actors'
02.02, 00:52:21 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors' is valid for the request path '/api/v2/actors'
02.02, 00:52:22 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:22 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:52:22 => INF | Serilog | Handling request: /api/v2/actors for controller Actors with method CreateActorV2
02.02, 00:52:22 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:22 => INF | Route matched with {action = "CreateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateActorV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:52:22 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:52:22 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:52:22 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:22 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:52:22 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:22 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:22 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:22 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:52:22 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:52:22 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:52:22 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000009": started reading request body.
02.02, 00:52:22 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000009": done reading request body.
02.02, 00:52:22 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:52:22 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:22 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:22 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:52:22 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:22 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:52:22 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:52:22 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .Any(a => a.FullName == __request_Data_FullName_0)'
02.02, 00:52:22 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && (a.FullName == @__request_Data_FullName_0))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && (a.FullName == @__request_Data_FullName_0)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:52:22 => DBG | Creating DbConnection.
02.02, 00:52:22 => DBG | Created DbConnection. (1ms).
02.02, 00:52:22 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:22 => DBG | Created DbCommand for 'ExecuteReader' (1ms).
02.02, 00:52:22 => DBG | Initialized DbCommand for 'ExecuteReader' (6ms).
02.02, 00:52:22 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:52:22 => INF | Executed DbCommand (33ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:52:22 => INF | info: 02.02.2025 00:52:22.572 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (33ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:52:22 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 15ms reading results.
02.02, 00:52:22 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:52:22 => DBG | 'CineVaultDbContext' generated temporary value '-2147482647' for the property 'Actor.Id'.
02.02, 00:52:22 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482647}'.
02.02, 00:52:22 => INF | Serilog | Creating actor...
02.02, 00:52:22 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:52:22 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:52:22 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:52:22 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:22 => DBG | Created DbCommand for 'ExecuteReader' (1ms).
02.02, 00:52:22 => DBG | Initialized DbCommand for 'ExecuteReader' (2ms).
02.02, 00:52:22 => DBG | Executing DbCommand [Parameters=[@p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date), @p2='Benedict Cumberbatch' (Nullable = false) (Size = 64), @p3='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Actors] ([Biography], [BirthDate], [FullName], [IsDeleted])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
02.02, 00:52:22 => INF | Executed DbCommand (5ms) [Parameters=[@p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date), @p2='Benedict Cumberbatch' (Nullable = false) (Size = 64), @p3='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Actors] ([Biography], [BirthDate], [FullName], [IsDeleted])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
02.02, 00:52:22 => INF | info: 02.02.2025 00:52:22.830 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[@p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date), @p2='Benedict Cumberbatch' (Nullable = false) (Size = 64), @p3='False'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Actors] ([Biography], [BirthDate], [FullName], [IsDeleted])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3);
02.02, 00:52:22 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482647' to '1' for entity with key '{Id: 1}'.
02.02, 00:52:22 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 20ms reading results.
02.02, 00:52:22 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:52:22 => DBG | The 'Actor' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:22 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:52:22 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 753.7119ms.
02.02, 00:52:22 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:52:22 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:52:22 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:52:22 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:52:22 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:52:22 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:52:22 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:52:22 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) in 874.9137ms
02.02, 00:52:22 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:22 => INF | Serilog | Handled request: /api/v2/actors, for 905 milliseconds
02.02, 00:52:22 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:52:22 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:22 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:52:22 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors - 200 null application/json; charset=utf-8 951.9055ms
02.02, 00:52:26 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors - application/json 325
02.02, 00:52:26 => DBG | 1 candidate(s) found for the request path '/api/v2/actors'
02.02, 00:52:26 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors' is valid for the request path '/api/v2/actors'
02.02, 00:52:26 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:26 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:52:26 => INF | Serilog | Handling request: /api/v2/actors for controller Actors with method CreateActorV2
02.02, 00:52:26 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:26 => INF | Route matched with {action = "CreateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateActorV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:52:26 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:52:26 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:52:26 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:26 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:52:26 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:26 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:26 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:26 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:52:26 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:52:26 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:52:26 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000B": started reading request body.
02.02, 00:52:26 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000B": done reading request body.
02.02, 00:52:26 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:52:26 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:26 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:26 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:52:26 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:52:26 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:52:26 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:52:26 => DBG | Creating DbConnection.
02.02, 00:52:26 => DBG | Created DbConnection. (0ms).
02.02, 00:52:26 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:26 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:26 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:26 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:52:26 => DBG | Initialized DbCommand for 'ExecuteReader' (2ms).
02.02, 00:52:26 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:52:26 => INF | Executed DbCommand (2ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:52:26 => INF | info: 02.02.2025 00:52:26.182 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:52:26 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:26 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:52:26 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:26 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:52:26 => WRN | Serilog | Actor with FullName 'Benedict Cumberbatch' already exists
02.02, 00:52:26 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 71.9618ms.
02.02, 00:52:26 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:52:26 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:52:26 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:52:26 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:52:26 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:52:26 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:52:26 => INF | Executing BadRequestObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:52:26 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API) in 93.0122ms
02.02, 00:52:26 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorV2 (CineVault.API)'
02.02, 00:52:26 => INF | Serilog | Handled request: /api/v2/actors, for 101 milliseconds
02.02, 00:52:26 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:52:26 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:26 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:52:26 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors - 400 null application/json; charset=utf-8 112.2438ms
02.02, 00:52:40 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/several - application/json 3655
02.02, 00:52:40 => DBG | 2 candidate(s) found for the request path '/api/v2/actors/several'
02.02, 00:52:40 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/several' is valid for the request path '/api/v2/actors/several'
02.02, 00:52:40 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/several'
02.02, 00:52:40 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API)'
02.02, 00:52:40 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:52:40 => INF | Serilog | Handling request: /api/v2/actors/several for controller Actors with method CreateActorsV2
02.02, 00:52:40 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API)'
02.02, 00:52:40 => INF | Route matched with {action = "CreateActorsV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[System.Int32]]]] CreateActorsV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:52:40 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:52:40 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:52:40 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:40 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:52:40 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:40 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:40 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:40 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]' ...
02.02, 00:52:40 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]' using the name '' in request data ...
02.02, 00:52:40 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:52:40 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000D": started reading request body.
02.02, 00:52:40 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000D": done reading request body.
02.02, 00:52:40 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[System.Collections.Generic.ICollection`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
02.02, 00:52:40 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]'.
02.02, 00:52:40 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]'.
02.02, 00:52:40 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]' ...
02.02, 00:52:40 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorRequest]]'.
02.02, 00:52:40 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:52:40 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:52:40 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .AsNoTracking()
    .Where(a => __requestedFullNames_0.Contains(a.FullName))
    .Select(a => a.FullName)'
02.02, 00:52:40 => DBG | Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a.FullName
        FROM Actors AS a
        WHERE Not(a.IsDeleted) && a.FullName IN (
            SELECT r.value
            FROM OPENJSON(@__requestedFullNames_0) WITH (value nvarchar(64) '') AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a.FullName
        FROM Actors AS a
        WHERE Not(a.IsDeleted) && a.FullName IN (
            SELECT r.value
            FROM OPENJSON(@__requestedFullNames_0) WITH (value nvarchar(64) '') AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.GetString(0);
        return value1;
    }, 
    contextType: CineVault.API.Entities.CineVaultDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
02.02, 00:52:40 => DBG | Creating DbConnection.
02.02, 00:52:40 => DBG | Created DbConnection. (0ms).
02.02, 00:52:40 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:40 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:52:40 => DBG | Initialized DbCommand for 'ExecuteReader' (5ms).
02.02, 00:52:40 => DBG | Executing DbCommand [Parameters=[@__requestedFullNames_0='["Leonardo DiCaprio","Robert Downey Jr.","Meryl Streep","Tom Hanks","Scarlett Johansson","Brad Pitt","Jennifer Lawrence","Christian Bale","Natalie Portman","Denzel Washington","Morgan Freeman","Emma Stone","Joaquin Phoenix","Keanu Reeves","Cate Blanchett","Hugh Jackman","Angelina Jolie","Ryan Gosling","Anne Hathaway","Jake Gyllenhaal"]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[FullName]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__requestedFullNames_0) WITH ([value] nvarchar(64) '$') AS [r]
)
02.02, 00:52:40 => INF | Executed DbCommand (8ms) [Parameters=[@__requestedFullNames_0='["Leonardo DiCaprio","Robert Downey Jr.","Meryl Streep","Tom Hanks","Scarlett Johansson","Brad Pitt","Jennifer Lawrence","Christian Bale","Natalie Portman","Denzel Washington","Morgan Freeman","Emma Stone","Joaquin Phoenix","Keanu Reeves","Cate Blanchett","Hugh Jackman","Angelina Jolie","Ryan Gosling","Anne Hathaway","Jake Gyllenhaal"]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[FullName]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__requestedFullNames_0) WITH ([value] nvarchar(64) '$') AS [r]
)
02.02, 00:52:40 => INF | info: 02.02.2025 00:52:40.459 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[@__requestedFullNames_0='["Leonardo DiCaprio","Robert Downey Jr.","Meryl Streep","Tom Hanks","Scarlett Johansson","Brad Pitt","Jennifer Lawrence","Christian Bale","Natalie Portman","Denzel Washington","Morgan Freeman","Emma Stone","Joaquin Phoenix","Keanu Reeves","Cate Blanchett","Hugh Jackman","Angelina Jolie","Ryan Gosling","Anne Hathaway","Jake Gyllenhaal"]' (Size = 4000)], CommandType='Text', CommandTimeout='30']
      SELECT [a].[FullName]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] IN (
          SELECT [r].[value]
          FROM OPENJSON(@__requestedFullNames_0) WITH ([value] nvarchar(64) '$') AS [r]
      )
02.02, 00:52:40 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 3ms reading results.
02.02, 00:52:40 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482646' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482646}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482645' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482645}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482644' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482644}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482643' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482643}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482642' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482642}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482641' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482641}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482640' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482640}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482639' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482639}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482638' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482638}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482637' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482637}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482636' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482636}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482635' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482635}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482634' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482634}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482633' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482633}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482632' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482632}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482631' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482631}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482630' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482630}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482629' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482629}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482628' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482628}'.
02.02, 00:52:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482627' for the property 'Actor.Id'.
02.02, 00:52:40 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: -2147482627}'.
02.02, 00:52:40 => INF | Serilog | Creating actors...
02.02, 00:52:40 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:52:40 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:52:40 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:52:40 => DBG | Executing 20 update commands as a batch.
02.02, 00:52:40 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:40 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:52:40 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:52:40 => DBG | Executing DbCommand [Parameters=[@p0='Academy Award-winning actor known for Titanic, Inception, and The Revenant.' (Nullable = false) (Size = 512), @p1='11/11/1974' (DbType = Date), @p2='Leonardo DiCaprio' (Nullable = false) (Size = 64), @p3='False', @p4='Renowned for his role as Iron Man in the Marvel Cinematic Universe.' (Nullable = false) (Size = 512), @p5='04/04/1965' (DbType = Date), @p6='Robert Downey Jr.' (Nullable = false) (Size = 64), @p7='False', @p8='One of the greatest actresses of all time, with multiple Academy Awards.' (Nullable = false) (Size = 512), @p9='06/22/1949' (DbType = Date), @p10='Meryl Streep' (Nullable = false) (Size = 64), @p11='False', @p12='Beloved actor known for Forrest Gump, Cast Away, and Saving Private Ryan.' (Nullable = false) (Size = 512), @p13='07/09/1956' (DbType = Date), @p14='Tom Hanks' (Nullable = false) (Size = 64), @p15='False', @p16='Famous for roles in Lost in Translation, Lucy, and as Black Widow.' (Nullable = false) (Size = 512), @p17='11/22/1984' (DbType = Date), @p18='Scarlett Johansson' (Nullable = false) (Size = 64), @p19='False', @p20='Award-winning actor known for Fight Club, Once Upon a Time in Hollywood, and Troy.' (Nullable = false) (Size = 512), @p21='12/18/1963' (DbType = Date), @p22='Brad Pitt' (Nullable = false) (Size = 64), @p23='False', @p24='Oscar-winning actress famous for The Hunger Games and Silver Linings Playbook.' (Nullable = false) (Size = 512), @p25='08/15/1990' (DbType = Date), @p26='Jennifer Lawrence' (Nullable = false) (Size = 64), @p27='False', @p28='Known for The Dark Knight trilogy, American Psycho, and Vice.' (Nullable = false) (Size = 512), @p29='01/30/1974' (DbType = Date), @p30='Christian Bale' (Nullable = false) (Size = 64), @p31='False', @p32='Academy Award-winning actress for Black Swan, also known for Star Wars.' (Nullable = false) (Size = 512), @p33='06/09/1981' (DbType = Date), @p34='Natalie Portman' (Nullable = false) (Size = 64), @p35='False', @p36='Two-time Academy Award winner known for Training Day and Malcolm X.' (Nullable = false) (Size = 512), @p37='12/28/1954' (DbType = Date), @p38='Denzel Washington' (Nullable = false) (Size = 64), @p39='False', @p40='Legendary actor with a distinctive voice, known for The Shawshank Redemption.' (Nullable = false) (Size = 512), @p41='06/01/1937' (DbType = Date), @p42='Morgan Freeman' (Nullable = false) (Size = 64), @p43='False', @p44='Oscar-winning actress famous for La La Land and The Amazing Spider-Man.' (Nullable = false) (Size = 512), @p45='11/06/1988' (DbType = Date), @p46='Emma Stone' (Nullable = false) (Size = 64), @p47='False', @p48='Acclaimed actor known for Joker, Gladiator, and Walk the Line.' (Nullable = false) (Size = 512), @p49='10/28/1974' (DbType = Date), @p50='Joaquin Phoenix' (Nullable = false) (Size = 64), @p51='False', @p52='Beloved for The Matrix, John Wick, and Bill & Ted’s Excellent Adventure.' (Nullable = false) (Size = 512), @p53='09/02/1964' (DbType = Date), @p54='Keanu Reeves' (Nullable = false) (Size = 64), @p55='False', @p56='Multi-award-winning actress known for Blue Jasmine, Carol, and The Lord of the Rings.' (Nullable = false) (Size = 512), @p57='05/14/1969' (DbType = Date), @p58='Cate Blanchett' (Nullable = false) (Size = 64), @p59='False', @p60='Famous for playing Wolverine in X-Men and starring in The Greatest Showman.' (Nullable = false) (Size = 512), @p61='10/12/1968' (DbType = Date), @p62='Hugh Jackman' (Nullable = false) (Size = 64), @p63='False', @p64='Oscar-winning actress and humanitarian known for Girl, Interrupted and Maleficent.' (Nullable = false) (Size = 512), @p65='06/04/1975' (DbType = Date), @p66='Angelina Jolie' (Nullable = false) (Size = 64), @p67='False', @p68='Known for La La Land, Drive, and The Notebook.' (Nullable = false) (Size = 512), @p69='11/12/1980' (DbType = Date), @p70='Ryan Gosling' (Nullable = false) (Size = 64), @p71='False', @p72='Oscar winner known for Les Misérables, The Devil Wears Prada, and Interstellar.' (Nullable = false) (Size = 512), @p73='11/12/1982' (DbType = Date), @p74='Anne Hathaway' (Nullable = false) (Size = 64), @p75='False', @p76='Acclaimed for his roles in Donnie Darko, Nightcrawler, and Brokeback Mountain.' (Nullable = false) (Size = 512), @p77='12/19/1980' (DbType = Date), @p78='Jake Gyllenhaal' (Nullable = false) (Size = 64), @p79='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Actors] USING (
VALUES (@p0, @p1, @p2, @p3, 0),
(@p4, @p5, @p6, @p7, 1),
(@p8, @p9, @p10, @p11, 2),
(@p12, @p13, @p14, @p15, 3),
(@p16, @p17, @p18, @p19, 4),
(@p20, @p21, @p22, @p23, 5),
(@p24, @p25, @p26, @p27, 6),
(@p28, @p29, @p30, @p31, 7),
(@p32, @p33, @p34, @p35, 8),
(@p36, @p37, @p38, @p39, 9),
(@p40, @p41, @p42, @p43, 10),
(@p44, @p45, @p46, @p47, 11),
(@p48, @p49, @p50, @p51, 12),
(@p52, @p53, @p54, @p55, 13),
(@p56, @p57, @p58, @p59, 14),
(@p60, @p61, @p62, @p63, 15),
(@p64, @p65, @p66, @p67, 16),
(@p68, @p69, @p70, @p71, 17),
(@p72, @p73, @p74, @p75, 18),
(@p76, @p77, @p78, @p79, 19)) AS i ([Biography], [BirthDate], [FullName], [IsDeleted], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Biography], [BirthDate], [FullName], [IsDeleted])
VALUES (i.[Biography], i.[BirthDate], i.[FullName], i.[IsDeleted])
OUTPUT INSERTED.[Id], i._Position;
02.02, 00:52:40 => INF | Executed DbCommand (7ms) [Parameters=[@p0='Academy Award-winning actor known for Titanic, Inception, and The Revenant.' (Nullable = false) (Size = 512), @p1='11/11/1974' (DbType = Date), @p2='Leonardo DiCaprio' (Nullable = false) (Size = 64), @p3='False', @p4='Renowned for his role as Iron Man in the Marvel Cinematic Universe.' (Nullable = false) (Size = 512), @p5='04/04/1965' (DbType = Date), @p6='Robert Downey Jr.' (Nullable = false) (Size = 64), @p7='False', @p8='One of the greatest actresses of all time, with multiple Academy Awards.' (Nullable = false) (Size = 512), @p9='06/22/1949' (DbType = Date), @p10='Meryl Streep' (Nullable = false) (Size = 64), @p11='False', @p12='Beloved actor known for Forrest Gump, Cast Away, and Saving Private Ryan.' (Nullable = false) (Size = 512), @p13='07/09/1956' (DbType = Date), @p14='Tom Hanks' (Nullable = false) (Size = 64), @p15='False', @p16='Famous for roles in Lost in Translation, Lucy, and as Black Widow.' (Nullable = false) (Size = 512), @p17='11/22/1984' (DbType = Date), @p18='Scarlett Johansson' (Nullable = false) (Size = 64), @p19='False', @p20='Award-winning actor known for Fight Club, Once Upon a Time in Hollywood, and Troy.' (Nullable = false) (Size = 512), @p21='12/18/1963' (DbType = Date), @p22='Brad Pitt' (Nullable = false) (Size = 64), @p23='False', @p24='Oscar-winning actress famous for The Hunger Games and Silver Linings Playbook.' (Nullable = false) (Size = 512), @p25='08/15/1990' (DbType = Date), @p26='Jennifer Lawrence' (Nullable = false) (Size = 64), @p27='False', @p28='Known for The Dark Knight trilogy, American Psycho, and Vice.' (Nullable = false) (Size = 512), @p29='01/30/1974' (DbType = Date), @p30='Christian Bale' (Nullable = false) (Size = 64), @p31='False', @p32='Academy Award-winning actress for Black Swan, also known for Star Wars.' (Nullable = false) (Size = 512), @p33='06/09/1981' (DbType = Date), @p34='Natalie Portman' (Nullable = false) (Size = 64), @p35='False', @p36='Two-time Academy Award winner known for Training Day and Malcolm X.' (Nullable = false) (Size = 512), @p37='12/28/1954' (DbType = Date), @p38='Denzel Washington' (Nullable = false) (Size = 64), @p39='False', @p40='Legendary actor with a distinctive voice, known for The Shawshank Redemption.' (Nullable = false) (Size = 512), @p41='06/01/1937' (DbType = Date), @p42='Morgan Freeman' (Nullable = false) (Size = 64), @p43='False', @p44='Oscar-winning actress famous for La La Land and The Amazing Spider-Man.' (Nullable = false) (Size = 512), @p45='11/06/1988' (DbType = Date), @p46='Emma Stone' (Nullable = false) (Size = 64), @p47='False', @p48='Acclaimed actor known for Joker, Gladiator, and Walk the Line.' (Nullable = false) (Size = 512), @p49='10/28/1974' (DbType = Date), @p50='Joaquin Phoenix' (Nullable = false) (Size = 64), @p51='False', @p52='Beloved for The Matrix, John Wick, and Bill & Ted’s Excellent Adventure.' (Nullable = false) (Size = 512), @p53='09/02/1964' (DbType = Date), @p54='Keanu Reeves' (Nullable = false) (Size = 64), @p55='False', @p56='Multi-award-winning actress known for Blue Jasmine, Carol, and The Lord of the Rings.' (Nullable = false) (Size = 512), @p57='05/14/1969' (DbType = Date), @p58='Cate Blanchett' (Nullable = false) (Size = 64), @p59='False', @p60='Famous for playing Wolverine in X-Men and starring in The Greatest Showman.' (Nullable = false) (Size = 512), @p61='10/12/1968' (DbType = Date), @p62='Hugh Jackman' (Nullable = false) (Size = 64), @p63='False', @p64='Oscar-winning actress and humanitarian known for Girl, Interrupted and Maleficent.' (Nullable = false) (Size = 512), @p65='06/04/1975' (DbType = Date), @p66='Angelina Jolie' (Nullable = false) (Size = 64), @p67='False', @p68='Known for La La Land, Drive, and The Notebook.' (Nullable = false) (Size = 512), @p69='11/12/1980' (DbType = Date), @p70='Ryan Gosling' (Nullable = false) (Size = 64), @p71='False', @p72='Oscar winner known for Les Misérables, The Devil Wears Prada, and Interstellar.' (Nullable = false) (Size = 512), @p73='11/12/1982' (DbType = Date), @p74='Anne Hathaway' (Nullable = false) (Size = 64), @p75='False', @p76='Acclaimed for his roles in Donnie Darko, Nightcrawler, and Brokeback Mountain.' (Nullable = false) (Size = 512), @p77='12/19/1980' (DbType = Date), @p78='Jake Gyllenhaal' (Nullable = false) (Size = 64), @p79='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Actors] USING (
VALUES (@p0, @p1, @p2, @p3, 0),
(@p4, @p5, @p6, @p7, 1),
(@p8, @p9, @p10, @p11, 2),
(@p12, @p13, @p14, @p15, 3),
(@p16, @p17, @p18, @p19, 4),
(@p20, @p21, @p22, @p23, 5),
(@p24, @p25, @p26, @p27, 6),
(@p28, @p29, @p30, @p31, 7),
(@p32, @p33, @p34, @p35, 8),
(@p36, @p37, @p38, @p39, 9),
(@p40, @p41, @p42, @p43, 10),
(@p44, @p45, @p46, @p47, 11),
(@p48, @p49, @p50, @p51, 12),
(@p52, @p53, @p54, @p55, 13),
(@p56, @p57, @p58, @p59, 14),
(@p60, @p61, @p62, @p63, 15),
(@p64, @p65, @p66, @p67, 16),
(@p68, @p69, @p70, @p71, 17),
(@p72, @p73, @p74, @p75, 18),
(@p76, @p77, @p78, @p79, 19)) AS i ([Biography], [BirthDate], [FullName], [IsDeleted], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Biography], [BirthDate], [FullName], [IsDeleted])
VALUES (i.[Biography], i.[BirthDate], i.[FullName], i.[IsDeleted])
OUTPUT INSERTED.[Id], i._Position;
02.02, 00:52:40 => INF | info: 02.02.2025 00:52:40.524 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[@p0='Academy Award-winning actor known for Titanic, Inception, and The Revenant.' (Nullable = false) (Size = 512), @p1='11/11/1974' (DbType = Date), @p2='Leonardo DiCaprio' (Nullable = false) (Size = 64), @p3='False', @p4='Renowned for his role as Iron Man in the Marvel Cinematic Universe.' (Nullable = false) (Size = 512), @p5='04/04/1965' (DbType = Date), @p6='Robert Downey Jr.' (Nullable = false) (Size = 64), @p7='False', @p8='One of the greatest actresses of all time, with multiple Academy Awards.' (Nullable = false) (Size = 512), @p9='06/22/1949' (DbType = Date), @p10='Meryl Streep' (Nullable = false) (Size = 64), @p11='False', @p12='Beloved actor known for Forrest Gump, Cast Away, and Saving Private Ryan.' (Nullable = false) (Size = 512), @p13='07/09/1956' (DbType = Date), @p14='Tom Hanks' (Nullable = false) (Size = 64), @p15='False', @p16='Famous for roles in Lost in Translation, Lucy, and as Black Widow.' (Nullable = false) (Size = 512), @p17='11/22/1984' (DbType = Date), @p18='Scarlett Johansson' (Nullable = false) (Size = 64), @p19='False', @p20='Award-winning actor known for Fight Club, Once Upon a Time in Hollywood, and Troy.' (Nullable = false) (Size = 512), @p21='12/18/1963' (DbType = Date), @p22='Brad Pitt' (Nullable = false) (Size = 64), @p23='False', @p24='Oscar-winning actress famous for The Hunger Games and Silver Linings Playbook.' (Nullable = false) (Size = 512), @p25='08/15/1990' (DbType = Date), @p26='Jennifer Lawrence' (Nullable = false) (Size = 64), @p27='False', @p28='Known for The Dark Knight trilogy, American Psycho, and Vice.' (Nullable = false) (Size = 512), @p29='01/30/1974' (DbType = Date), @p30='Christian Bale' (Nullable = false) (Size = 64), @p31='False', @p32='Academy Award-winning actress for Black Swan, also known for Star Wars.' (Nullable = false) (Size = 512), @p33='06/09/1981' (DbType = Date), @p34='Natalie Portman' (Nullable = false) (Size = 64), @p35='False', @p36='Two-time Academy Award winner known for Training Day and Malcolm X.' (Nullable = false) (Size = 512), @p37='12/28/1954' (DbType = Date), @p38='Denzel Washington' (Nullable = false) (Size = 64), @p39='False', @p40='Legendary actor with a distinctive voice, known for The Shawshank Redemption.' (Nullable = false) (Size = 512), @p41='06/01/1937' (DbType = Date), @p42='Morgan Freeman' (Nullable = false) (Size = 64), @p43='False', @p44='Oscar-winning actress famous for La La Land and The Amazing Spider-Man.' (Nullable = false) (Size = 512), @p45='11/06/1988' (DbType = Date), @p46='Emma Stone' (Nullable = false) (Size = 64), @p47='False', @p48='Acclaimed actor known for Joker, Gladiator, and Walk the Line.' (Nullable = false) (Size = 512), @p49='10/28/1974' (DbType = Date), @p50='Joaquin Phoenix' (Nullable = false) (Size = 64), @p51='False', @p52='Beloved for The Matrix, John Wick, and Bill & Ted’s Excellent Adventure.' (Nullable = false) (Size = 512), @p53='09/02/1964' (DbType = Date), @p54='Keanu Reeves' (Nullable = false) (Size = 64), @p55='False', @p56='Multi-award-winning actress known for Blue Jasmine, Carol, and The Lord of the Rings.' (Nullable = false) (Size = 512), @p57='05/14/1969' (DbType = Date), @p58='Cate Blanchett' (Nullable = false) (Size = 64), @p59='False', @p60='Famous for playing Wolverine in X-Men and starring in The Greatest Showman.' (Nullable = false) (Size = 512), @p61='10/12/1968' (DbType = Date), @p62='Hugh Jackman' (Nullable = false) (Size = 64), @p63='False', @p64='Oscar-winning actress and humanitarian known for Girl, Interrupted and Maleficent.' (Nullable = false) (Size = 512), @p65='06/04/1975' (DbType = Date), @p66='Angelina Jolie' (Nullable = false) (Size = 64), @p67='False', @p68='Known for La La Land, Drive, and The Notebook.' (Nullable = false) (Size = 512), @p69='11/12/1980' (DbType = Date), @p70='Ryan Gosling' (Nullable = false) (Size = 64), @p71='False', @p72='Oscar winner known for Les Misérables, The Devil Wears Prada, and Interstellar.' (Nullable = false) (Size = 512), @p73='11/12/1982' (DbType = Date), @p74='Anne Hathaway' (Nullable = false) (Size = 64), @p75='False', @p76='Acclaimed for his roles in Donnie Darko, Nightcrawler, and Brokeback Mountain.' (Nullable = false) (Size = 512), @p77='12/19/1980' (DbType = Date), @p78='Jake Gyllenhaal' (Nullable = false) (Size = 64), @p79='False'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      MERGE [Actors] USING (
      VALUES (@p0, @p1, @p2, @p3, 0),
      (@p4, @p5, @p6, @p7, 1),
      (@p8, @p9, @p10, @p11, 2),
      (@p12, @p13, @p14, @p15, 3),
      (@p16, @p17, @p18, @p19, 4),
      (@p20, @p21, @p22, @p23, 5),
      (@p24, @p25, @p26, @p27, 6),
      (@p28, @p29, @p30, @p31, 7),
      (@p32, @p33, @p34, @p35, 8),
      (@p36, @p37, @p38, @p39, 9),
      (@p40, @p41, @p42, @p43, 10),
      (@p44, @p45, @p46, @p47, 11),
      (@p48, @p49, @p50, @p51, 12),
      (@p52, @p53, @p54, @p55, 13),
      (@p56, @p57, @p58, @p59, 14),
      (@p60, @p61, @p62, @p63, 15),
      (@p64, @p65, @p66, @p67, 16),
      (@p68, @p69, @p70, @p71, 17),
      (@p72, @p73, @p74, @p75, 18),
      (@p76, @p77, @p78, @p79, 19)) AS i ([Biography], [BirthDate], [FullName], [IsDeleted], _Position) ON 1=0
      WHEN NOT MATCHED THEN
      INSERT ([Biography], [BirthDate], [FullName], [IsDeleted])
      VALUES (i.[Biography], i.[BirthDate], i.[FullName], i.[IsDeleted])
      OUTPUT INSERTED.[Id], i._Position;
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482646' to '2' for entity with key '{Id: 2}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482645' to '3' for entity with key '{Id: 3}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482644' to '4' for entity with key '{Id: 4}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482643' to '5' for entity with key '{Id: 5}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482642' to '6' for entity with key '{Id: 6}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482641' to '7' for entity with key '{Id: 7}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482640' to '8' for entity with key '{Id: 8}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482639' to '9' for entity with key '{Id: 9}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482638' to '10' for entity with key '{Id: 10}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482637' to '11' for entity with key '{Id: 11}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482636' to '12' for entity with key '{Id: 12}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482635' to '13' for entity with key '{Id: 13}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482634' to '14' for entity with key '{Id: 14}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482633' to '15' for entity with key '{Id: 15}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482632' to '16' for entity with key '{Id: 16}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482631' to '17' for entity with key '{Id: 17}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482630' to '18' for entity with key '{Id: 18}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482629' to '19' for entity with key '{Id: 19}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482628' to '20' for entity with key '{Id: 20}'.
02.02, 00:52:40 => DBG | The foreign key property 'Actor.Id' was detected as changed from '-2147482627' to '21' for entity with key '{Id: 21}'.
02.02, 00:52:40 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 21ms reading results.
02.02, 00:52:40 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 2}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 3}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 4}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 5}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 6}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 7}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 8}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 9}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 10}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 11}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 12}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 13}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 14}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 15}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 16}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 17}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 18}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 19}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 20}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | The 'Actor' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:52:40 => DBG | SaveChanges completed for 'CineVaultDbContext' with 20 entities written to the database.
02.02, 00:52:40 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 234.0315ms.
02.02, 00:52:40 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:52:40 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:52:40 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:52:40 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:52:40 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:52:40 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:52:40 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:52:40 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API) in 256.8452ms
02.02, 00:52:40 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.CreateActorsV2 (CineVault.API)'
02.02, 00:52:40 => INF | Serilog | Handled request: /api/v2/actors/several, for 268 milliseconds
02.02, 00:52:40 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:52:40 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:40 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:52:40 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/several - 200 null application/json; charset=utf-8 289.0988ms
02.02, 00:52:50 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/all - application/json 143
02.02, 00:52:50 => DBG | 2 candidate(s) found for the request path '/api/v2/actors/all'
02.02, 00:52:50 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/all' is valid for the request path '/api/v2/actors/all'
02.02, 00:52:50 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/all'
02.02, 00:52:50 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:52:50 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:52:50 => INF | Serilog | Handling request: /api/v2/actors/all for controller Actors with method GetActorsV2
02.02, 00:52:50 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:52:50 => INF | Route matched with {action = "GetActorsV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorResponse]]]] GetActorsV2(CineVault.API.Abstractions.Controllers.BaseRequest) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:52:50 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:52:50 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:52:50 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:50 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:52:50 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:52:50 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:50 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:52:50 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:52:50 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:52:50 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:52:50 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000F": started reading request body.
02.02, 00:52:50 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000000F": done reading request body.
02.02, 00:52:50 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:52:50 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:52:50 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:52:50 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:52:50 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:52:50 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:52:50 => INF | Serilog | Getting actors ...
02.02, 00:52:50 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:52:50 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .AsNoTracking()
    .Select(namelessParameter{0} => new ActorResponse{ 
        Id = namelessParameter{0}.Id, 
        FullName = namelessParameter{0}.FullName, 
        BirthDate = namelessParameter{0}.BirthDate, 
        Biography = namelessParameter{0}.Biography 
    }
    )'
02.02, 00:52:50 => DBG | Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ActorResponse>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            Id -> 0
            FullName -> 1
            BirthDate -> 2
            Biography -> 3
        SELECT a.Id, a.FullName, a.BirthDate, a.Biography
        FROM Actors AS a
        WHERE Not(a.IsDeleted)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            Id -> 0
            FullName -> 1
            BirthDate -> 2
            Biography -> 3
        SELECT a.Id, a.FullName, a.BirthDate, a.Biography
        FROM Actors AS a
        WHERE Not(a.IsDeleted), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        int? value1;
        string value2;
        DateOnly? value3;
        string value4;
        value1 = (int?)dataReader.GetInt32(0);
        value2 = dataReader.GetString(1);
        value3 = (DateOnly?)dataReader.GetFieldValue<DateOnly>(2);
        value4 = dataReader.GetString(3);
        return new ActorResponse{ 
            Id = (int)value1, 
            FullName = value2, 
            BirthDate = (DateOnly)value3, 
            Biography = value4 
        }
        ;
    }, 
    contextType: CineVault.API.Entities.CineVaultDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
02.02, 00:52:50 => DBG | Creating DbConnection.
02.02, 00:52:50 => DBG | Created DbConnection. (0ms).
02.02, 00:52:50 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:50 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:50 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:52:50 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:52:50 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:52:50 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:52:50 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:52:50 => INF | info: 02.02.2025 00:52:50.335 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:52:50 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:50 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 3ms reading results.
02.02, 00:52:50 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:50 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:52:50 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 62.498ms.
02.02, 00:52:50 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:52:50 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:52:50 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:52:50 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:52:50 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:52:50 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:52:50 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[CineVault.API.Controllers.Actors.ActorResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:52:50 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API) in 85.104ms
02.02, 00:52:50 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:52:50 => INF | Serilog | Handled request: /api/v2/actors/all, for 95 milliseconds
02.02, 00:52:50 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:52:50 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:52:50 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:52:50 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/all - 200 null application/json; charset=utf-8 107.154ms
02.02, 00:53:43 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/4 - application/json 121
02.02, 00:53:43 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/4'
02.02, 00:53:43 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/4'
02.02, 00:53:43 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:43 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:53:43 => INF | Serilog | Handling request: /api/v2/actors/4 for controller Actors with method GetActorByIdV2
02.02, 00:53:43 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:43 => INF | Route matched with {action = "GetActorByIdV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Actors.ActorResponse]]] GetActorByIdV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:53:43 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:53:43 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:53:43 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:53:43 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:53:43 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:53:43 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:53:43 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:53:43 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:53:43 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:53:43 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:53:43 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000011": started reading request body.
02.02, 00:53:43 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000011": done reading request body.
02.02, 00:53:43 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:53:43 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:43 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:43 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:53:43 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:43 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:53:43 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:53:43 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:53:43 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:53:43 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:53:43 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:53:43 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:53:43 => INF | Serilog | Getting actor with ID 4...
02.02, 00:53:43 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:53:43 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .AsNoTracking()
    .Select(namelessParameter{0} => new ActorResponse{ 
        Id = namelessParameter{0}.Id, 
        FullName = namelessParameter{0}.FullName, 
        BirthDate = namelessParameter{0}.BirthDate, 
        Biography = namelessParameter{0}.Biography 
    }
    )
    .FirstOrDefault(r => r.Id == __id_0)'
02.02, 00:53:43 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ActorResponse>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ActorResponse>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                Id -> 0
                FullName -> 1
                BirthDate -> 2
                Biography -> 3
            SELECT TOP(1) a.Id, a.FullName, a.BirthDate, a.Biography
            FROM Actors AS a
            WHERE Not(a.IsDeleted) && (a.Id == @__id_0)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                Id -> 0
                FullName -> 1
                BirthDate -> 2
                Biography -> 3
            SELECT TOP(1) a.Id, a.FullName, a.BirthDate, a.Biography
            FROM Actors AS a
            WHERE Not(a.IsDeleted) && (a.Id == @__id_0), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            int? value1;
            string value2;
            DateOnly? value3;
            string value4;
            value1 = (int?)dataReader.GetInt32(0);
            value2 = dataReader.GetString(1);
            value3 = (DateOnly?)dataReader.GetFieldValue<DateOnly>(2);
            value4 = dataReader.GetString(3);
            return new ActorResponse{ 
                Id = (int)value1, 
                FullName = value2, 
                BirthDate = (DateOnly)value3, 
                Biography = value4 
            }
            ;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:53:43 => DBG | Creating DbConnection.
02.02, 00:53:43 => DBG | Created DbConnection. (0ms).
02.02, 00:53:43 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:43 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:43 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:53:43 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:53:43 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:53:43 => DBG | Executing DbCommand [Parameters=[@__id_0='4'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:43 => INF | Executed DbCommand (3ms) [Parameters=[@__id_0='4'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:43 => INF | info: 02.02.2025 00:53:43.451 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@__id_0='4'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:43 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:43 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:53:43 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:43 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:53:43 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 32.1486ms.
02.02, 00:53:43 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:53:43 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:53:43 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:53:43 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:53:43 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:53:43 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:53:43 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[CineVault.API.Controllers.Actors.ActorResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
02.02, 00:53:43 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) in 50.6745ms
02.02, 00:53:43 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:43 => INF | Serilog | Handled request: /api/v2/actors/4, for 62 milliseconds
02.02, 00:53:43 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:53:43 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:43 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:53:43 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/4 - 200 null application/json; charset=utf-8 74.1902ms
02.02, 00:53:47 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/325325 - application/json 121
02.02, 00:53:47 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/325325'
02.02, 00:53:47 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/325325'
02.02, 00:53:47 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:47 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:53:47 => INF | Serilog | Handling request: /api/v2/actors/325325 for controller Actors with method GetActorByIdV2
02.02, 00:53:47 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:47 => INF | Route matched with {action = "GetActorByIdV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Actors.ActorResponse]]] GetActorByIdV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:53:47 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:53:47 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:53:47 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:53:47 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:53:47 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:53:47 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:53:47 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:53:47 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:53:47 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:53:47 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:53:47 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000013": started reading request body.
02.02, 00:53:47 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000013": done reading request body.
02.02, 00:53:47 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:53:47 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:47 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:47 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:53:47 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:53:47 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:53:47 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:53:47 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:53:47 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:53:47 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:53:47 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:53:47 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:53:47 => INF | Serilog | Getting actor with ID 325325...
02.02, 00:53:47 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:53:47 => DBG | Creating DbConnection.
02.02, 00:53:47 => DBG | Created DbConnection. (0ms).
02.02, 00:53:47 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:47 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:47 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:53:47 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:53:47 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:53:47 => DBG | Executing DbCommand [Parameters=[@__id_0='325325'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:47 => INF | Executed DbCommand (1ms) [Parameters=[@__id_0='325325'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:47 => INF | info: 02.02.2025 00:53:47.946 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__id_0='325325'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:53:47 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:47 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:53:47 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:47 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:53:47 => WRN | Serilog | Actor with ID 325325 not found
02.02, 00:53:47 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 14.2518ms.
02.02, 00:53:47 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:53:47 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:53:47 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:53:47 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:53:47 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:53:47 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:53:47 => INF | Executing NotFoundObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:53:47 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) in 34.2733ms
02.02, 00:53:47 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:53:47 => INF | Serilog | Handled request: /api/v2/actors/325325, for 41 milliseconds
02.02, 00:53:47 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:53:47 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:53:47 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:53:47 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/325325 - 404 null application/json; charset=utf-8 59.6294ms
02.02, 00:54:10 => INF | Request starting HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - application/json 257
02.02, 00:54:10 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/1'
02.02, 00:54:10 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/1'
02.02, 00:54:10 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:10 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:54:10 => INF | Serilog | Handling request: /api/v2/actors/1 for controller Actors with method UpdateActorV2
02.02, 00:54:10 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:10 => INF | Route matched with {action = "UpdateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse]] UpdateActorV2(Int32, CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:54:11 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:54:11 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:54:11 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:11 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:54:11 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:11 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:11 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:11 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:54:11 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:54:11 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:11 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:11 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:54:11 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:54:11 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:54:11 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:54:11 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:54:11 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000015": started reading request body.
02.02, 00:54:11 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000015": done reading request body.
02.02, 00:54:11 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:54:11 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:11 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:11 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:54:11 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:11 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:54:11 => INF | Serilog | Getting actor with ID 1...
02.02, 00:54:11 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:54:11 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
02.02, 00:54:11 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Actor>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Actor>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Actor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Actor.Biography (string) Required MaxLength(512), 1], [Property: Actor.BirthDate (DateOnly) Required, 2], [Property: Actor.FullName (string) Required Index MaxLength(64), 3], [Property: Actor.IsDeleted (bool) Required, 4] }
            SELECT TOP(1) a.Id, a.Biography, a.BirthDate, a.FullName, a.IsDeleted
            FROM Actors AS a
            WHERE Not(a.IsDeleted) && (a.Id == @__p_0)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Actor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Actor.Biography (string) Required MaxLength(512), 1], [Property: Actor.BirthDate (DateOnly) Required, 2], [Property: Actor.FullName (string) Required Index MaxLength(64), 3], [Property: Actor.IsDeleted (bool) Required, 4] }
            SELECT TOP(1) a.Id, a.Biography, a.BirthDate, a.FullName, a.IsDeleted
            FROM Actors AS a
            WHERE Not(a.IsDeleted) && (a.Id == @__p_0), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Actor entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Actor instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Actor);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Actor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CineVault.API.Entities.Actor").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Actor)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Actor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Actor")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Actor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Actor")]: 
                            {
                                return 
                                {
                                    Actor instance;
                                    instance = new Actor(
                                        dataReader.GetString(3), 
                                        dataReader.GetFieldValue<DateOnly>(2), 
                                        dataReader.GetString(1)
                                    );
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Actor | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Actor")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Actor)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:54:11 => DBG | Creating DbConnection.
02.02, 00:54:11 => DBG | Created DbConnection. (0ms).
02.02, 00:54:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:11 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:11 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:54:11 => DBG | Executing DbCommand [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:11 => INF | Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:11 => INF | info: 02.02.2025 00:54:11.080 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:11 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: 1}'.
02.02, 00:54:11 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 4ms reading results.
02.02, 00:54:11 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:54:11 => DBG | Compiling query expression: 
'DbSet<Actor>()
    .Any(a => a.FullName == __request_Data_FullName_0 && a.Id != __id_1)'
02.02, 00:54:11 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && ((a.FullName == @__request_Data_FullName_0) && (a.Id != @__id_1)))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Actors AS a
                WHERE Not(a.IsDeleted) && ((a.FullName == @__request_Data_FullName_0) && (a.Id != @__id_1))), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:54:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:11 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:11 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:54:11 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:54:11 => INF | Executed DbCommand (2ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:54:11 => INF | info: 02.02.2025 00:54:11.098 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:54:11 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:54:11 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:54:11 => INF | Serilog | Updating actor...
02.02, 00:54:11 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:54:11 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:54:11 => DBG | The unchanged property 'Actor.Biography' was detected as changed from 'Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' to 'string' and will be marked as modified for entity with key '{Id: 1}'.
02.02, 00:54:11 => DBG | The 'Actor' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Unchanged"' to '"Modified"'.
02.02, 00:54:11 => DBG | The unchanged property 'Actor.BirthDate' was detected as changed from '"1976-07-19"' to '"2025-02-01"' and will be marked as modified for entity with key '{Id: 1}'.
02.02, 00:54:11 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:54:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:11 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:11 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:54:11 => DBG | Executing DbCommand [Parameters=[@p2='1', @p0='string' (Nullable = false) (Size = 512), @p1='02/01/2025' (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
OUTPUT 1
WHERE [Id] = @p2;
02.02, 00:54:11 => INF | Executed DbCommand (4ms) [Parameters=[@p2='1', @p0='string' (Nullable = false) (Size = 512), @p1='02/01/2025' (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
OUTPUT 1
WHERE [Id] = @p2;
02.02, 00:54:11 => INF | info: 02.02.2025 00:54:11.122 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[@p2='1', @p0='string' (Nullable = false) (Size = 512), @p1='02/01/2025' (DbType = Date)], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
      OUTPUT 1
      WHERE [Id] = @p2;
02.02, 00:54:11 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 00:54:11 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:54:11 => DBG | The 'Actor' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Modified"' to '"Unchanged"'.
02.02, 00:54:11 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:54:11 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.8953ms.
02.02, 00:54:11 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:54:11 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:54:11 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:54:11 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:54:11 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:54:11 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:54:11 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:54:11 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) in 129.8775ms
02.02, 00:54:11 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:11 => INF | Serilog | Handled request: /api/v2/actors/1, for 140 milliseconds
02.02, 00:54:11 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:54:11 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:11 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:54:11 => INF | Request finished HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - 200 null application/json; charset=utf-8 156.9628ms
02.02, 00:54:22 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/1 - application/json 121
02.02, 00:54:22 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/1'
02.02, 00:54:22 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/1'
02.02, 00:54:22 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:54:22 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:54:22 => INF | Serilog | Handling request: /api/v2/actors/1 for controller Actors with method GetActorByIdV2
02.02, 00:54:22 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:54:22 => INF | Route matched with {action = "GetActorByIdV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Actors.ActorResponse]]] GetActorByIdV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:54:22 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:54:22 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:54:22 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:22 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:54:22 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:22 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:22 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:22 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:54:22 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:54:22 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:54:22 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000017": started reading request body.
02.02, 00:54:22 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000017": done reading request body.
02.02, 00:54:22 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:54:22 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:54:22 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:54:22 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:54:22 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:54:22 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:54:22 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:54:22 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:22 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:22 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:54:22 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:54:22 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:54:22 => INF | Serilog | Getting actor with ID 1...
02.02, 00:54:22 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:54:22 => DBG | Creating DbConnection.
02.02, 00:54:22 => DBG | Created DbConnection. (0ms).
02.02, 00:54:22 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:22 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:22 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:22 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:22 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:54:22 => DBG | Executing DbCommand [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:54:22 => INF | Executed DbCommand (1ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:54:22 => INF | info: 02.02.2025 00:54:22.252 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__id_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__id_0
02.02, 00:54:22 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:22 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:54:22 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:22 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:54:22 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12.6735ms.
02.02, 00:54:22 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:54:22 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:54:22 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:54:22 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:54:22 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:54:22 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:54:22 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[CineVault.API.Controllers.Actors.ActorResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
02.02, 00:54:22 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API) in 32.1433ms
02.02, 00:54:22 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)'
02.02, 00:54:22 => INF | Serilog | Handled request: /api/v2/actors/1, for 39 milliseconds
02.02, 00:54:22 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:54:22 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:22 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:54:22 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/1 - 200 null application/json; charset=utf-8 58.8624ms
02.02, 00:54:35 => INF | Request starting HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - application/json 254
02.02, 00:54:35 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/1'
02.02, 00:54:35 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/1'
02.02, 00:54:35 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:35 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:54:35 => INF | Serilog | Handling request: /api/v2/actors/1 for controller Actors with method UpdateActorV2
02.02, 00:54:35 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:35 => INF | Route matched with {action = "UpdateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse]] UpdateActorV2(Int32, CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:54:35 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:54:35 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:54:35 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:35 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:54:35 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:54:35 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:35 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:54:35 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:54:35 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:54:35 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:35 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:54:35 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:54:35 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:54:35 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:54:35 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:54:35 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:54:35 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000019": started reading request body.
02.02, 00:54:35 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000019": done reading request body.
02.02, 00:54:35 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:54:35 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:35 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:35 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:54:35 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:54:35 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:54:35 => INF | Serilog | Getting actor with ID 1...
02.02, 00:54:35 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:54:35 => DBG | Creating DbConnection.
02.02, 00:54:35 => DBG | Created DbConnection. (0ms).
02.02, 00:54:35 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:35 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:35 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:35 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:35 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:54:35 => DBG | Executing DbCommand [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:35 => INF | Executed DbCommand (1ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:35 => INF | info: 02.02.2025 00:54:35.994 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__p_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:54:35 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: 1}'.
02.02, 00:54:35 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:35 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:54:35 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:35 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:54:35 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:35 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:36 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:54:36 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:36 => DBG | Initialized DbCommand for 'ExecuteReader' (0ms).
02.02, 00:54:36 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Leonardo DiCaprio' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:54:36 => INF | Executed DbCommand (1ms) [Parameters=[@__request_Data_FullName_0='Leonardo DiCaprio' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:54:36 => INF | info: 02.02.2025 00:54:36.004 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__request_Data_FullName_0='Leonardo DiCaprio' (Size = 64), @__id_1='1'], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:54:36 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:36 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:54:36 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:36 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:54:36 => WRN | Serilog | Actor with FullName 'Leonardo DiCaprio' already exists
02.02, 00:54:36 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 24.7495ms.
02.02, 00:54:36 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:54:36 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:54:36 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:54:36 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:54:36 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:54:36 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:54:36 => INF | Executing BadRequestObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:54:36 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) in 46.0551ms
02.02, 00:54:36 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:54:36 => INF | Serilog | Handled request: /api/v2/actors/1, for 55 milliseconds
02.02, 00:54:36 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:54:36 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:54:36 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:54:36 => INF | Request finished HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - 400 null application/json; charset=utf-8 64.152ms
02.02, 00:55:19 => INF | Request starting HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - application/json 325
02.02, 00:55:19 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/1'
02.02, 00:55:19 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/1'
02.02, 00:55:19 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:55:19 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:55:19 => INF | Serilog | Handling request: /api/v2/actors/1 for controller Actors with method UpdateActorV2
02.02, 00:55:19 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:55:19 => INF | Route matched with {action = "UpdateActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse]] UpdateActorV2(Int32, CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:55:19 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:55:19 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:55:19 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:19 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:55:19 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:19 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:19 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:19 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:55:19 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:55:19 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:19 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:19 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:55:19 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:55:19 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:55:19 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' using the name '' in request data ...
02.02, 00:55:19 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:55:19 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001B": started reading request body.
02.02, 00:55:19 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001B": done reading request body.
02.02, 00:55:19 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Actors.ActorRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:55:19 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:55:19 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:55:19 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]' ...
02.02, 00:55:19 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Actors.ActorRequest]'.
02.02, 00:55:19 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:55:19 => INF | Serilog | Getting actor with ID 1...
02.02, 00:55:19 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:55:19 => DBG | Creating DbConnection.
02.02, 00:55:19 => DBG | Created DbConnection. (0ms).
02.02, 00:55:19 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:19 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:19 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:19 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:20 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:20 => DBG | Executing DbCommand [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:20 => INF | Executed DbCommand (1ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:20 => INF | info: 02.02.2025 00:55:20.002 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__p_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:20 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: 1}'.
02.02, 00:55:20 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:55:20 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:20 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:20 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:20 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:20 => DBG | Executing DbCommand [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:55:20 => INF | Executed DbCommand (1ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Actors] AS [a]
        WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:55:20 => INF | info: 02.02.2025 00:55:20.011 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__request_Data_FullName_0='Benedict Cumberbatch' (Size = 64), @__id_1='1'], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Actors] AS [a]
              WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[FullName] = @__request_Data_FullName_0 AND [a].[Id] <> @__id_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:55:20 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:55:20 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:20 => INF | Serilog | Updating actor...
02.02, 00:55:20 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:55:20 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:55:20 => DBG | The unchanged property 'Actor.Biography' was detected as changed from 'string' to 'Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' and will be marked as modified for entity with key '{Id: 1}'.
02.02, 00:55:20 => DBG | The 'Actor' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Unchanged"' to '"Modified"'.
02.02, 00:55:20 => DBG | The unchanged property 'Actor.BirthDate' was detected as changed from '"2025-02-01"' to '"1976-07-19"' and will be marked as modified for entity with key '{Id: 1}'.
02.02, 00:55:20 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:55:20 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:20 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:20 => DBG | Initialized DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:20 => DBG | Executing DbCommand [Parameters=[@p2='1', @p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
OUTPUT 1
WHERE [Id] = @p2;
02.02, 00:55:20 => INF | Executed DbCommand (2ms) [Parameters=[@p2='1', @p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
OUTPUT 1
WHERE [Id] = @p2;
02.02, 00:55:20 => INF | info: 02.02.2025 00:55:20.025 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@p2='1', @p0='Renowned British actor known for his roles in Sherlock, Doctor Strange, and The Imitation Game.' (Nullable = false) (Size = 512), @p1='07/19/1976' (DbType = Date)], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      UPDATE [Actors] SET [Biography] = @p0, [BirthDate] = @p1
      OUTPUT 1
      WHERE [Id] = @p2;
02.02, 00:55:20 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:55:20 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:20 => DBG | The 'Actor' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Modified"' to '"Unchanged"'.
02.02, 00:55:20 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:55:20 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 35.9419ms.
02.02, 00:55:20 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:55:20 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:55:20 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:55:20 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:55:20 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:55:20 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:55:20 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:55:20 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API) in 55.5581ms
02.02, 00:55:20 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.UpdateActorV2 (CineVault.API)'
02.02, 00:55:20 => INF | Serilog | Handled request: /api/v2/actors/1, for 62 milliseconds
02.02, 00:55:20 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:55:20 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:20 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:55:20 => INF | Request finished HTTP/2 PUT https://localhost:7171/api/v2/actors/1 - 200 null application/json; charset=utf-8 80.7533ms
02.02, 00:55:28 => INF | Request starting HTTP/2 DELETE https://localhost:7171/api/v2/actors/21 - application/json 143
02.02, 00:55:28 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/21'
02.02, 00:55:28 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/21'
02.02, 00:55:28 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:28 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:55:28 => INF | Serilog | Handling request: /api/v2/actors/21 for controller Actors with method DeleteActorV2
02.02, 00:55:28 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:28 => INF | Route matched with {action = "DeleteActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse]] DeleteActorV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:55:28 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:55:28 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:55:28 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:28 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:55:28 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:28 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:28 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:28 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:28 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:55:28 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:55:28 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001D": started reading request body.
02.02, 00:55:28 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001D": done reading request body.
02.02, 00:55:28 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:55:28 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:28 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:28 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:28 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:28 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:55:28 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:55:28 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:28 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:28 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:55:28 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:55:28 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:55:28 => INF | Serilog | Getting actor with ID 21...
02.02, 00:55:28 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:55:28 => DBG | Creating DbConnection.
02.02, 00:55:28 => DBG | Created DbConnection. (0ms).
02.02, 00:55:28 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:28 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:28 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:28 => DBG | Executing DbCommand [Parameters=[@__p_0='21'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:28 => INF | Executed DbCommand (1ms) [Parameters=[@__p_0='21'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:28 => INF | info: 02.02.2025 00:55:28.225 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__p_0='21'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:28 => DBG | Context 'CineVaultDbContext' started tracking 'Actor' entity with key '{Id: 21}'.
02.02, 00:55:28 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:55:28 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:28 => DBG | The 'Actor' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Unchanged"' to '"Deleted"'.
02.02, 00:55:28 => INF | Serilog | Deleting actor...
02.02, 00:55:28 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:55:28 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:55:28 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:55:28 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:28 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:28 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:28 => DBG | Executing DbCommand [Parameters=[@p0='21'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Actors]
OUTPUT 1
WHERE [Id] = @p0;
02.02, 00:55:28 => INF | Executed DbCommand (4ms) [Parameters=[@p0='21'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Actors]
OUTPUT 1
WHERE [Id] = @p0;
02.02, 00:55:28 => INF | info: 02.02.2025 00:55:28.255 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[@p0='21'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      DELETE FROM [Actors]
      OUTPUT 1
      WHERE [Id] = @p0;
02.02, 00:55:28 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:55:28 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:28 => DBG | The 'Actor' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Deleted"' to '"Detached"'.
02.02, 00:55:28 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:55:28 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 48.5302ms.
02.02, 00:55:28 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:55:28 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:55:28 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:55:28 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:55:28 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:55:28 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:55:28 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:55:28 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API) in 71.7246ms
02.02, 00:55:28 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:28 => INF | Serilog | Handled request: /api/v2/actors/21, for 82 milliseconds
02.02, 00:55:28 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:55:28 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:28 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:55:28 => INF | Request finished HTTP/2 DELETE https://localhost:7171/api/v2/actors/21 - 200 null application/json; charset=utf-8 92.8664ms
02.02, 00:55:29 => INF | Request starting HTTP/2 DELETE https://localhost:7171/api/v2/actors/21 - application/json 143
02.02, 00:55:29 => DBG | 1 candidate(s) found for the request path '/api/v2/actors/21'
02.02, 00:55:29 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/21'
02.02, 00:55:29 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:29 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:55:29 => INF | Serilog | Handling request: /api/v2/actors/21 for controller Actors with method DeleteActorV2
02.02, 00:55:29 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:29 => INF | Route matched with {action = "DeleteActorV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse]] DeleteActorV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:55:29 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:55:29 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:55:29 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:29 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:55:29 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:29 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:29 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:29 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:29 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:55:29 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:55:29 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001F": started reading request body.
02.02, 00:55:29 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000001F": done reading request body.
02.02, 00:55:29 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:55:29 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:29 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:29 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:29 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:29 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 00:55:29 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 00:55:29 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:29 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 00:55:29 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 00:55:29 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 00:55:29 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:55:29 => INF | Serilog | Getting actor with ID 21...
02.02, 00:55:29 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:55:29 => DBG | Creating DbConnection.
02.02, 00:55:29 => DBG | Created DbConnection. (0ms).
02.02, 00:55:29 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:29 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:29 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:29 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:29 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:29 => DBG | Executing DbCommand [Parameters=[@__p_0='21'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:29 => INF | Executed DbCommand (1ms) [Parameters=[@__p_0='21'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:29 => INF | info: 02.02.2025 00:55:29.961 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[@__p_0='21'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [a].[Id], [a].[Biography], [a].[BirthDate], [a].[FullName], [a].[IsDeleted]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit) AND [a].[Id] = @__p_0
02.02, 00:55:29 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:29 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:55:29 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:29 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:29 => WRN | Serilog | Actor with ID 21 not found
02.02, 00:55:29 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 13.4816ms.
02.02, 00:55:29 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:55:29 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:55:29 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:55:29 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:55:29 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:55:29 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:55:29 => INF | Executing NotFoundObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:55:29 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API) in 33.1318ms
02.02, 00:55:29 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.DeleteActorV2 (CineVault.API)'
02.02, 00:55:29 => INF | Serilog | Handled request: /api/v2/actors/21, for 40 milliseconds
02.02, 00:55:29 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:55:29 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:29 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:55:29 => INF | Request finished HTTP/2 DELETE https://localhost:7171/api/v2/actors/21 - 404 null application/json; charset=utf-8 49.3148ms
02.02, 00:55:33 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/actors/all - application/json 143
02.02, 00:55:33 => DBG | 2 candidate(s) found for the request path '/api/v2/actors/all'
02.02, 00:55:33 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/all' is valid for the request path '/api/v2/actors/all'
02.02, 00:55:33 => DBG | Endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Actors/{id}' is valid for the request path '/api/v2/actors/all'
02.02, 00:55:33 => DBG | Request matched endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:55:33 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:55:33 => INF | Serilog | Handling request: /api/v2/actors/all for controller Actors with method GetActorsV2
02.02, 00:55:33 => INF | Executing endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:55:33 => INF | Route matched with {action = "GetActorsV2", controller = "Actors"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Actors.ActorResponse]]]] GetActorsV2(CineVault.API.Abstractions.Controllers.BaseRequest) on controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API).
02.02, 00:55:33 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:55:33 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:55:33 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:33 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:55:33 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:55:33 => DBG | Executing controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:33 => DBG | Executed controller factory for controller CineVault.API.Controllers.Actors.ActorsController (CineVault.API)
02.02, 00:55:33 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:33 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 00:55:33 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:55:33 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000021": started reading request body.
02.02, 00:55:33 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000021": done reading request body.
02.02, 00:55:33 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 00:55:33 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:33 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:33 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 00:55:33 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 00:55:33 => INF | Executing action method CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:55:33 => INF | Serilog | Getting actors ...
02.02, 00:55:33 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:55:33 => DBG | Creating DbConnection.
02.02, 00:55:33 => DBG | Created DbConnection. (0ms).
02.02, 00:55:33 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:33 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:33 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:55:33 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:55:33 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:55:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:55:33 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
FROM [Actors] AS [a]
WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:55:33 => INF | info: 02.02.2025 00:55:33.617 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [a].[Id], [a].[FullName], [a].[BirthDate], [a].[Biography]
      FROM [Actors] AS [a]
      WHERE [a].[IsDeleted] = CAST(0 AS bit)
02.02, 00:55:33 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:33 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:55:33 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:33 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:55:33 => INF | Executed action method CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 13.7253ms.
02.02, 00:55:33 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:55:33 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:55:33 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:55:33 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:55:33 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:55:33 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:55:33 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[CineVault.API.Controllers.Actors.ActorResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:55:33 => INF | Executed action CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API) in 28.6319ms
02.02, 00:55:33 => INF | Executed endpoint 'CineVault.API.Controllers.Actors.ActorsController.GetActorsV2 (CineVault.API)'
02.02, 00:55:33 => INF | Serilog | Handled request: /api/v2/actors/all, for 35 milliseconds
02.02, 00:55:33 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:55:33 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:55:33 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:55:33 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/actors/all - 200 null application/json; charset=utf-8 46.8656ms
02.02, 00:56:25 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/index.html?urls.primaryName=CineVault+%27KitKat%27+API+V2 - null null
02.02, 00:56:25 => DBG | No candidates found for the request path '/swagger/index.html'
02.02, 00:56:25 => DBG | Request did not match any endpoints
02.02, 00:56:25 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/index.html?urls.primaryName=CineVault+%27KitKat%27+API+V2 - 200 null text/html;charset=utf-8 5.7586ms
02.02, 00:56:25 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json?urls.primaryName=CineVault+%27KitKat%27+API+V2 - null null
02.02, 00:56:25 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:56:25 => DBG | Request did not match any endpoints
02.02, 00:56:25 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json?urls.primaryName=CineVault+%27KitKat%27+API+V2 - 200 null application/json;charset=utf-8 37.5284ms
02.02, 00:56:34 => INF | Request starting HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json?urls.primaryName=CineVault+%27KitKat%27+API+V2 - null null
02.02, 00:56:34 => DBG | No candidates found for the request path '/swagger/v2/swagger.json'
02.02, 00:56:34 => DBG | Request did not match any endpoints
02.02, 00:56:34 => INF | Request finished HTTP/2 GET https://localhost:7171/swagger/v2/swagger.json?urls.primaryName=CineVault+%27KitKat%27+API+V2 - 200 null application/json;charset=utf-8 18.5612ms
02.02, 00:56:42 => INF | Request starting HTTP/2 GET https://localhost:7171/api/v2/appinfo/logging_test - null null
02.02, 00:56:42 => DBG | 1 candidate(s) found for the request path '/api/v2/appinfo/logging_test'
02.02, 00:56:42 => DBG | Endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)' with route pattern 'api/v{v:apiVersion}/AppInfo/logging_test' is valid for the request path '/api/v2/appinfo/logging_test'
02.02, 00:56:42 => DBG | Request matched endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:42 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:56:42 => INF | Serilog | Handling request: /api/v2/appinfo/logging_test for controller AppInfo with method LoggingTest
02.02, 00:56:42 => INF | Executing endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:42 => INF | Route matched with {action = "LoggingTest", controller = "AppInfo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] LoggingTest() on controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API).
02.02, 00:56:42 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:56:42 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:56:42 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:42 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:56:42 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:42 => DBG | Executing controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:42 => DBG | Executed controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:42 => INF | Executing action method CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API) - Validation state: "Valid"
02.02, 00:56:42 => DBG | Debug test
02.02, 00:56:42 => INF | Information test
02.02, 00:56:42 => WRN | Warning test
02.02, 00:56:42 => ERR | Error test
02.02, 00:56:42 => FTL | Fatal test
02.02, 00:56:42 => INF | Executed action method CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.6395ms.
02.02, 00:56:42 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:56:42 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:56:42 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
02.02, 00:56:42 => INF | Executing OkObjectResult, writing value of type 'System.String'.
02.02, 00:56:42 => INF | Executed action CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API) in 9.6739ms
02.02, 00:56:42 => INF | Executed endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:42 => INF | Serilog | Handled request: /api/v2/appinfo/logging_test, for 17 milliseconds
02.02, 00:56:42 => INF | Request finished HTTP/2 GET https://localhost:7171/api/v2/appinfo/logging_test - 200 null text/plain; charset=utf-8 25.1939ms
02.02, 00:56:44 => INF | Request starting HTTP/2 GET https://localhost:7171/api/v2/appinfo/logging_test - null null
02.02, 00:56:44 => DBG | 1 candidate(s) found for the request path '/api/v2/appinfo/logging_test'
02.02, 00:56:44 => DBG | Endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)' with route pattern 'api/v{v:apiVersion}/AppInfo/logging_test' is valid for the request path '/api/v2/appinfo/logging_test'
02.02, 00:56:44 => DBG | Request matched endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:44 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:56:44 => INF | Serilog | Handling request: /api/v2/appinfo/logging_test for controller AppInfo with method LoggingTest
02.02, 00:56:44 => INF | Executing endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:44 => INF | Route matched with {action = "LoggingTest", controller = "AppInfo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] LoggingTest() on controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API).
02.02, 00:56:44 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:56:44 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:56:44 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:44 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:56:44 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:44 => DBG | Executing controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:44 => DBG | Executed controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:44 => INF | Executing action method CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API) - Validation state: "Valid"
02.02, 00:56:44 => DBG | Debug test
02.02, 00:56:44 => INF | Information test
02.02, 00:56:44 => WRN | Warning test
02.02, 00:56:44 => ERR | Error test
02.02, 00:56:44 => FTL | Fatal test
02.02, 00:56:44 => INF | Executed action method CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.1987ms.
02.02, 00:56:44 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:56:44 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:56:44 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
02.02, 00:56:44 => INF | Executing OkObjectResult, writing value of type 'System.String'.
02.02, 00:56:44 => INF | Executed action CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API) in 8.3395ms
02.02, 00:56:44 => INF | Executed endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.LoggingTest (CineVault.API)'
02.02, 00:56:44 => INF | Serilog | Handled request: /api/v2/appinfo/logging_test, for 15 milliseconds
02.02, 00:56:44 => INF | Request finished HTTP/2 GET https://localhost:7171/api/v2/appinfo/logging_test - 200 null text/plain; charset=utf-8 22.2372ms
02.02, 00:56:53 => INF | Request starting HTTP/2 GET https://localhost:7171/api/v2/appinfo/exception - null null
02.02, 00:56:53 => DBG | 1 candidate(s) found for the request path '/api/v2/appinfo/exception'
02.02, 00:56:53 => DBG | Endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API)' with route pattern 'api/v{v:apiVersion}/AppInfo/exception' is valid for the request path '/api/v2/appinfo/exception'
02.02, 00:56:53 => DBG | Request matched endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API)'
02.02, 00:56:53 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:56:53 => INF | Serilog | Handling request: /api/v2/appinfo/exception for controller AppInfo with method Exception
02.02, 00:56:53 => INF | Executing endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API)'
02.02, 00:56:53 => INF | Route matched with {action = "Exception", controller = "AppInfo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Exception() on controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API).
02.02, 00:56:53 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:56:53 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:56:53 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:53 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:56:53 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:56:53 => DBG | Executing controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:53 => DBG | Executed controller factory for controller CineVault.API.Controllers.AppInfo.AppInfoController (CineVault.API)
02.02, 00:56:53 => INF | Executing action method CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API) - Validation state: "Valid"
02.02, 00:56:53 => INF | Executed action CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API) in 2.1291ms
02.02, 00:56:53 => INF | Executed endpoint 'CineVault.API.Controllers.AppInfo.AppInfoController.Exception (CineVault.API)'
02.02, 00:56:53 => ERR | Serilog | Something went wrong! Exception: System.NotImplementedException: Test exception for Developer Exception Page
   at CineVault.API.Controllers.AppInfo.AppInfoController.Exception() in C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API\Controllers\AppInfo\AppInfoController.cs:line 34
   at lambda_method168(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at CineVault.API.Middlewares.SerilogMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\Users\KievBall\RiderProjects\cine-vault-rep\src\CineVault.API\Middlewares\SerilogMiddleware.cs:line 29
02.02, 00:56:53 => INF | Request finished HTTP/2 GET https://localhost:7171/api/v2/appinfo/exception - 200 0 null 23.4215ms
02.02, 00:57:16 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies - application/json 408
02.02, 00:57:16 => DBG | 2 candidate(s) found for the request path '/api/v2/movies'
02.02, 00:57:16 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies' is valid for the request path '/api/v2/movies'
02.02, 00:57:16 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies' is valid for the request path '/api/v2/movies'
02.02, 00:57:16 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:57:16 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:57:16 => INF | Serilog | Handling request: /api/v2/movies for controller Movies with method CreateMovieV2
02.02, 00:57:16 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:57:16 => INF | Route matched with {action = "CreateMovieV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateMovieV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:57:16 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:57:16 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:57:16 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:57:16 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:57:16 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:57:16 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:57:16 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:57:16 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' ...
02.02, 00:57:16 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' using the name '' in request data ...
02.02, 00:57:16 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:57:16 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000002F": started reading request body.
02.02, 00:57:16 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000002F": done reading request body.
02.02, 00:57:16 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Movies.MovieRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:57:16 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:57:16 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:57:16 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' ...
02.02, 00:57:16 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:57:16 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:57:16 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:57:16 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .Any(m => m.Title == __request_Data_Title_0)'
02.02, 00:57:16 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Movies AS m
                WHERE Not(m.IsDeleted) && (m.Title == @__request_Data_Title_0))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Movies AS m
                WHERE Not(m.IsDeleted) && (m.Title == @__request_Data_Title_0)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 00:57:16 => DBG | Creating DbConnection.
02.02, 00:57:16 => DBG | Created DbConnection. (0ms).
02.02, 00:57:16 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:57:16 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:57:16 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:57:16 => DBG | Executing DbCommand [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:57:16 => INF | Executed DbCommand (3ms) [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:57:16 => INF | info: 02.02.2025 00:57:16.653 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Movies] AS [m]
              WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:57:16 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:57:16 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:57:16 => DBG | 'CineVaultDbContext' generated temporary value '-2147482647' for the property 'Movie.Id'.
02.02, 00:57:16 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482647}'.
02.02, 00:57:16 => INF | Serilog | Adding movie...
02.02, 00:57:16 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:57:16 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:57:16 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:57:16 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:57:16 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:57:16 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:57:16 => DBG | Executing DbCommand [Parameters=[@p0='Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.' (Size = 512), @p1='Frank Darabont' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='09/22/1994' (Nullable = true) (DbType = Date), @p5='The Shawshank Redemption' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 00:57:16 => INF | Executed DbCommand (3ms) [Parameters=[@p0='Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.' (Size = 512), @p1='Frank Darabont' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='09/22/1994' (Nullable = true) (DbType = Date), @p5='The Shawshank Redemption' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 00:57:16 => INF | info: 02.02.2025 00:57:16.701 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@p0='Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.' (Size = 512), @p1='Frank Darabont' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='09/22/1994' (Nullable = true) (DbType = Date), @p5='The Shawshank Redemption' (Nullable = false) (Size = 64)], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Movies] ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 00:57:16 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482647' to '1' for entity with key '{Id: 1}'.
02.02, 00:57:16 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 3ms reading results.
02.02, 00:57:16 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:57:16 => DBG | The 'Movie' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:57:16 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:57:16 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 73.537ms.
02.02, 00:57:16 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:57:16 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:57:16 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:57:16 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:57:16 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:57:16 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:57:16 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:57:16 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API) in 99.6848ms
02.02, 00:57:16 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:57:16 => INF | Serilog | Handled request: /api/v2/movies, for 109 milliseconds
02.02, 00:57:16 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:57:16 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:57:16 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:57:16 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies - 200 null application/json; charset=utf-8 128.7443ms
02.02, 00:58:44 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies - application/json 408
02.02, 00:58:44 => DBG | 2 candidate(s) found for the request path '/api/v2/movies'
02.02, 00:58:44 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies' is valid for the request path '/api/v2/movies'
02.02, 00:58:44 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies' is valid for the request path '/api/v2/movies'
02.02, 00:58:44 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:58:44 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:58:44 => INF | Serilog | Handling request: /api/v2/movies for controller Movies with method CreateMovieV2
02.02, 00:58:44 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:58:44 => INF | Route matched with {action = "CreateMovieV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateMovieV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:58:44 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:58:44 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:58:44 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:58:44 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:58:44 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:58:44 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:58:44 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:58:44 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' ...
02.02, 00:58:44 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' using the name '' in request data ...
02.02, 00:58:44 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:58:44 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000031": started reading request body.
02.02, 00:58:44 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000031": done reading request body.
02.02, 00:58:44 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Movies.MovieRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:58:44 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:58:44 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:58:44 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]' ...
02.02, 00:58:44 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.MovieRequest]'.
02.02, 00:58:44 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:58:44 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:58:44 => DBG | Creating DbConnection.
02.02, 00:58:44 => DBG | Created DbConnection. (0ms).
02.02, 00:58:44 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:44 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:44 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:58:44 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:58:44 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:58:44 => DBG | Executing DbCommand [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:58:44 => INF | Executed DbCommand (2ms) [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
02.02, 00:58:44 => INF | info: 02.02.2025 00:58:44.810 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@__request_Data_Title_0='The Shawshank Redemption' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Movies] AS [m]
              WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] = @__request_Data_Title_0) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END
02.02, 00:58:44 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:44 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:58:44 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:44 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:58:44 => WRN | Serilog | Movie with Title 'The Shawshank Redemption' already exists
02.02, 00:58:44 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 14.1836ms.
02.02, 00:58:44 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:58:44 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:58:44 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:58:44 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:58:44 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:58:44 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:58:44 => INF | Executing BadRequestObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse'.
02.02, 00:58:44 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API) in 28.6202ms
02.02, 00:58:44 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMovieV2 (CineVault.API)'
02.02, 00:58:44 => INF | Serilog | Handled request: /api/v2/movies, for 36 milliseconds
02.02, 00:58:44 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:58:44 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:44 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 00:58:44 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies - 400 null application/json; charset=utf-8 59.2909ms
02.02, 00:58:55 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies/several - application/json 6473
02.02, 00:58:55 => DBG | 2 candidate(s) found for the request path '/api/v2/movies/several'
02.02, 00:58:55 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/several' is valid for the request path '/api/v2/movies/several'
02.02, 00:58:55 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/{id}' is valid for the request path '/api/v2/movies/several'
02.02, 00:58:55 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API)'
02.02, 00:58:55 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:58:55 => INF | Serilog | Handling request: /api/v2/movies/several for controller Movies with method CreateMoviesV2
02.02, 00:58:55 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API)'
02.02, 00:58:55 => INF | Route matched with {action = "CreateMoviesV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[System.Int32]]]] CreateMoviesV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:58:55 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:58:55 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:58:55 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:58:55 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:58:55 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:58:55 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:58:55 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:58:55 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]' ...
02.02, 00:58:55 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]' using the name '' in request data ...
02.02, 00:58:55 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:58:55 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000033": started reading request body.
02.02, 00:58:55 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000033": done reading request body.
02.02, 00:58:55 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[System.Collections.Generic.ICollection`1[[CineVault.API.Controllers.Movies.MovieRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
02.02, 00:58:55 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]'.
02.02, 00:58:55 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]'.
02.02, 00:58:55 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]' ...
02.02, 00:58:55 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieRequest]]'.
02.02, 00:58:55 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:58:55 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:58:55 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .AsNoTracking()
    .Where(m => __requestedTitles_0.Contains(m.Title))
    .Select(m => m.Title)'
02.02, 00:58:55 => DBG | Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT m.Title
        FROM Movies AS m
        WHERE Not(m.IsDeleted) && m.Title IN (
            SELECT r.value
            FROM OPENJSON(@__requestedTitles_0) WITH (value nvarchar(64) '') AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT m.Title
        FROM Movies AS m
        WHERE Not(m.IsDeleted) && m.Title IN (
            SELECT r.value
            FROM OPENJSON(@__requestedTitles_0) WITH (value nvarchar(64) '') AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.GetString(0);
        return value1;
    }, 
    contextType: CineVault.API.Entities.CineVaultDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
02.02, 00:58:55 => DBG | Creating DbConnection.
02.02, 00:58:55 => DBG | Created DbConnection. (0ms).
02.02, 00:58:55 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:58:55 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:58:55 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:58:55 => DBG | Executing DbCommand [Parameters=[@__requestedTitles_0='["Echoes of Eternity","The Godfather","The Dark Knight","Schindler\u0027s List","Pulp Fiction","Forrest Gump","The Matrix","Inception","The Lord of the Rings: The Return of the King","Fight Club","Interstellar","The Silence of the Lambs","Se7en","The Green Mile","Gladiator","Braveheart","Titanic","Avatar","Saving Private Ryan","The Lion King"]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Title]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__requestedTitles_0) WITH ([value] nvarchar(64) '$') AS [r]
)
02.02, 00:58:55 => INF | Executed DbCommand (7ms) [Parameters=[@__requestedTitles_0='["Echoes of Eternity","The Godfather","The Dark Knight","Schindler\u0027s List","Pulp Fiction","Forrest Gump","The Matrix","Inception","The Lord of the Rings: The Return of the King","Fight Club","Interstellar","The Silence of the Lambs","Se7en","The Green Mile","Gladiator","Braveheart","Titanic","Avatar","Saving Private Ryan","The Lion King"]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Title]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__requestedTitles_0) WITH ([value] nvarchar(64) '$') AS [r]
)
02.02, 00:58:55 => INF | info: 02.02.2025 00:58:55.108 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[@__requestedTitles_0='["Echoes of Eternity","The Godfather","The Dark Knight","Schindler\u0027s List","Pulp Fiction","Forrest Gump","The Matrix","Inception","The Lord of the Rings: The Return of the King","Fight Club","Interstellar","The Silence of the Lambs","Se7en","The Green Mile","Gladiator","Braveheart","Titanic","Avatar","Saving Private Ryan","The Lion King"]' (Size = 4000)], CommandType='Text', CommandTimeout='30']
      SELECT [m].[Title]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Title] IN (
          SELECT [r].[value]
          FROM OPENJSON(@__requestedTitles_0) WITH ([value] nvarchar(64) '$') AS [r]
      )
02.02, 00:58:55 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:58:55 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482646' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482646}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482645' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482645}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482644' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482644}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482643' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482643}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482642' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482642}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482641' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482641}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482640' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482640}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482639' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482639}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482638' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482638}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482637' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482637}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482636' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482636}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482635' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482635}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482634' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482634}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482633' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482633}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482632' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482632}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482631' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482631}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482630' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482630}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482629' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482629}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482628' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482628}'.
02.02, 00:58:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482627' for the property 'Movie.Id'.
02.02, 00:58:55 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: -2147482627}'.
02.02, 00:58:55 => INF | Serilog | Adding movies...
02.02, 00:58:55 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:58:55 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:58:55 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:58:55 => DBG | Executing 20 update commands as a batch.
02.02, 00:58:55 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:58:55 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:58:55 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:58:55 => DBG | Executing DbCommand [Parameters=[@p0='In a futuristic world, two outcasts find unexpected friendship and uncover a mystery that could change the course of history.' (Size = 512), @p1='Lucas Mercer' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='06/15/2007' (Nullable = true) (DbType = Date), @p5='Echoes of Eternity' (Nullable = false) (Size = 64), @p6='The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.' (Size = 512), @p7='Francis Ford Coppola' (Size = 64), @p8='Crime, Drama' (Size = 64), @p9='False', @p10='03/24/1972' (Nullable = true) (DbType = Date), @p11='The Godfather' (Nullable = false) (Size = 64), @p12='When the menace known as the Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.' (Size = 512), @p13='Christopher Nolan' (Size = 64), @p14='Action, Crime, Drama' (Size = 64), @p15='False', @p16='07/18/2008' (Nullable = true) (DbType = Date), @p17='The Dark Knight' (Nullable = false) (Size = 64), @p18='In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.' (Size = 512), @p19='Steven Spielberg' (Size = 64), @p20='Biography, Drama, History' (Size = 64), @p21='False', @p22='12/15/1993' (Nullable = true) (DbType = Date), @p23='Schindler's List' (Nullable = false) (Size = 64), @p24='The lives of two mob hitmen, a boxer, a gangster's wife, and a pair of diner bandits intertwine in four tales of violence and redemption.' (Size = 512), @p25='Quentin Tarantino' (Size = 64), @p26='Crime, Drama' (Size = 64), @p27='False', @p28='10/14/1994' (Nullable = true) (DbType = Date), @p29='Pulp Fiction' (Nullable = false) (Size = 64), @p30='The presidencies of Kennedy and Johnson, the Vietnam War, the Watergate scandal and other historical events unfold from the perspective of an Alabama man with an IQ of 75.' (Size = 512), @p31='Robert Zemeckis' (Size = 64), @p32='Drama, Romance' (Size = 64), @p33='False', @p34='07/06/1994' (Nullable = true) (DbType = Date), @p35='Forrest Gump' (Nullable = false) (Size = 64), @p36='When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth about the reality of his world.' (Size = 512), @p37='Lana Wachowski, Lilly Wachowski' (Size = 64), @p38='Action, Sci-Fi' (Size = 64), @p39='False', @p40='03/31/1999' (Nullable = true) (DbType = Date), @p41='The Matrix' (Nullable = false) (Size = 64), @p42='A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.' (Size = 512), @p43='Christopher Nolan' (Size = 64), @p44='Action, Adventure, Sci-Fi' (Size = 64), @p45='False', @p46='07/16/2010' (Nullable = true) (DbType = Date), @p47='Inception' (Nullable = false) (Size = 64), @p48='Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.' (Size = 512), @p49='Peter Jackson' (Size = 64), @p50='Action, Adventure, Drama' (Size = 64), @p51='False', @p52='12/17/2003' (Nullable = true) (DbType = Date), @p53='The Lord of the Rings: The Return of the King' (Nullable = false) (Size = 64), @p54='An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into something much, much more.' (Size = 512), @p55='David Fincher' (Size = 64), @p56='Drama' (Size = 64), @p57='False', @p58='10/15/1999' (Nullable = true) (DbType = Date), @p59='Fight Club' (Nullable = false) (Size = 64), @p60='A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.' (Size = 512), @p61='Christopher Nolan' (Size = 64), @p62='Adventure, Drama, Sci-Fi' (Size = 64), @p63='False', @p64='11/07/2014' (Nullable = true) (DbType = Date), @p65='Interstellar' (Nullable = false) (Size = 64), @p66='A young F.B.I. cadet must receive the help of an incarcerated and manipulative cannibal killer to catch another serial killer, a madman who skins his victims.' (Size = 512), @p67='Jonathan Demme' (Size = 64), @p68='Crime, Drama, Thriller' (Size = 64), @p69='False', @p70='02/14/1991' (Nullable = true) (DbType = Date), @p71='The Silence of the Lambs' (Nullable = false) (Size = 64), @p72='Two detectives, a rookie and a veteran, hunt a serial killer who uses the seven deadly sins as his motives.' (Size = 512), @p73='David Fincher' (Size = 64), @p74='Crime, Drama, Mystery' (Size = 64), @p75='False', @p76='09/22/1995' (Nullable = true) (DbType = Date), @p77='Se7en' (Nullable = false) (Size = 64), @p78='The lives of guards on Death Row are affected by one of their charges: a black man accused of child murder and rape, yet who has a mysterious gift.' (Size = 512), @p79='Frank Darabont' (Size = 64), @p80='Crime, Drama, Fantasy' (Size = 64), @p81='False', @p82='12/10/1999' (Nullable = true) (DbType = Date), @p83='The Green Mile' (Nullable = false) (Size = 64), @p84='A former Roman General sets out to exact vengeance against the corrupt emperor who murdered his family and sent him into slavery.' (Size = 512), @p85='Ridley Scott' (Size = 64), @p86='Action, Adventure, Drama' (Size = 64), @p87='False', @p88='05/05/2000' (Nullable = true) (DbType = Date), @p89='Gladiator' (Nullable = false) (Size = 64), @p90='Scottish warrior William Wallace leads his countrymen in a rebellion to free his homeland from the tyranny of King Edward I of England.' (Size = 512), @p91='Mel Gibson' (Size = 64), @p92='Biography, Drama, History' (Size = 64), @p93='False', @p94='05/24/1995' (Nullable = true) (DbType = Date), @p95='Braveheart' (Nullable = false) (Size = 64), @p96='A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.' (Size = 512), @p97='James Cameron' (Size = 64), @p98='Drama, Romance' (Size = 64), @p99='False', @p100='12/19/1997' (Nullable = true) (DbType = Date), @p101='Titanic' (Nullable = false) (Size = 64), @p102='A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.' (Size = 512), @p103='James Cameron' (Size = 64), @p104='Action, Adventure, Fantasy' (Size = 64), @p105='False', @p106='12/18/2009' (Nullable = true) (DbType = Date), @p107='Avatar' (Nullable = false) (Size = 64), @p108='Following the Normandy Landings, a group of U.S. soldiers go behind enemy lines to retrieve a paratrooper whose brothers have been killed in action.' (Size = 512), @p109='Steven Spielberg' (Size = 64), @p110='Drama, War' (Size = 64), @p111='False', @p112='07/24/1998' (Nullable = true) (DbType = Date), @p113='Saving Private Ryan' (Nullable = false) (Size = 64), @p114='Lion prince Simba and his father are targeted by his bitter uncle, who wants to ascend the throne himself.' (Size = 512), @p115='Roger Allers, Rob Minkoff' (Size = 64), @p116='Animation, Adventure, Drama' (Size = 64), @p117='False', @p118='06/24/1994' (Nullable = true) (DbType = Date), @p119='The Lion King' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Movies] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, 0),
(@p6, @p7, @p8, @p9, @p10, @p11, 1),
(@p12, @p13, @p14, @p15, @p16, @p17, 2),
(@p18, @p19, @p20, @p21, @p22, @p23, 3),
(@p24, @p25, @p26, @p27, @p28, @p29, 4),
(@p30, @p31, @p32, @p33, @p34, @p35, 5),
(@p36, @p37, @p38, @p39, @p40, @p41, 6),
(@p42, @p43, @p44, @p45, @p46, @p47, 7),
(@p48, @p49, @p50, @p51, @p52, @p53, 8),
(@p54, @p55, @p56, @p57, @p58, @p59, 9),
(@p60, @p61, @p62, @p63, @p64, @p65, 10),
(@p66, @p67, @p68, @p69, @p70, @p71, 11),
(@p72, @p73, @p74, @p75, @p76, @p77, 12),
(@p78, @p79, @p80, @p81, @p82, @p83, 13),
(@p84, @p85, @p86, @p87, @p88, @p89, 14),
(@p90, @p91, @p92, @p93, @p94, @p95, 15),
(@p96, @p97, @p98, @p99, @p100, @p101, 16),
(@p102, @p103, @p104, @p105, @p106, @p107, 17),
(@p108, @p109, @p110, @p111, @p112, @p113, 18),
(@p114, @p115, @p116, @p117, @p118, @p119, 19)) AS i ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
VALUES (i.[Description], i.[Director], i.[Genre], i.[IsDeleted], i.[ReleaseDate], i.[Title])
OUTPUT INSERTED.[Id], i._Position;
02.02, 00:58:55 => INF | Executed DbCommand (8ms) [Parameters=[@p0='In a futuristic world, two outcasts find unexpected friendship and uncover a mystery that could change the course of history.' (Size = 512), @p1='Lucas Mercer' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='06/15/2007' (Nullable = true) (DbType = Date), @p5='Echoes of Eternity' (Nullable = false) (Size = 64), @p6='The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.' (Size = 512), @p7='Francis Ford Coppola' (Size = 64), @p8='Crime, Drama' (Size = 64), @p9='False', @p10='03/24/1972' (Nullable = true) (DbType = Date), @p11='The Godfather' (Nullable = false) (Size = 64), @p12='When the menace known as the Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.' (Size = 512), @p13='Christopher Nolan' (Size = 64), @p14='Action, Crime, Drama' (Size = 64), @p15='False', @p16='07/18/2008' (Nullable = true) (DbType = Date), @p17='The Dark Knight' (Nullable = false) (Size = 64), @p18='In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.' (Size = 512), @p19='Steven Spielberg' (Size = 64), @p20='Biography, Drama, History' (Size = 64), @p21='False', @p22='12/15/1993' (Nullable = true) (DbType = Date), @p23='Schindler's List' (Nullable = false) (Size = 64), @p24='The lives of two mob hitmen, a boxer, a gangster's wife, and a pair of diner bandits intertwine in four tales of violence and redemption.' (Size = 512), @p25='Quentin Tarantino' (Size = 64), @p26='Crime, Drama' (Size = 64), @p27='False', @p28='10/14/1994' (Nullable = true) (DbType = Date), @p29='Pulp Fiction' (Nullable = false) (Size = 64), @p30='The presidencies of Kennedy and Johnson, the Vietnam War, the Watergate scandal and other historical events unfold from the perspective of an Alabama man with an IQ of 75.' (Size = 512), @p31='Robert Zemeckis' (Size = 64), @p32='Drama, Romance' (Size = 64), @p33='False', @p34='07/06/1994' (Nullable = true) (DbType = Date), @p35='Forrest Gump' (Nullable = false) (Size = 64), @p36='When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth about the reality of his world.' (Size = 512), @p37='Lana Wachowski, Lilly Wachowski' (Size = 64), @p38='Action, Sci-Fi' (Size = 64), @p39='False', @p40='03/31/1999' (Nullable = true) (DbType = Date), @p41='The Matrix' (Nullable = false) (Size = 64), @p42='A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.' (Size = 512), @p43='Christopher Nolan' (Size = 64), @p44='Action, Adventure, Sci-Fi' (Size = 64), @p45='False', @p46='07/16/2010' (Nullable = true) (DbType = Date), @p47='Inception' (Nullable = false) (Size = 64), @p48='Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.' (Size = 512), @p49='Peter Jackson' (Size = 64), @p50='Action, Adventure, Drama' (Size = 64), @p51='False', @p52='12/17/2003' (Nullable = true) (DbType = Date), @p53='The Lord of the Rings: The Return of the King' (Nullable = false) (Size = 64), @p54='An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into something much, much more.' (Size = 512), @p55='David Fincher' (Size = 64), @p56='Drama' (Size = 64), @p57='False', @p58='10/15/1999' (Nullable = true) (DbType = Date), @p59='Fight Club' (Nullable = false) (Size = 64), @p60='A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.' (Size = 512), @p61='Christopher Nolan' (Size = 64), @p62='Adventure, Drama, Sci-Fi' (Size = 64), @p63='False', @p64='11/07/2014' (Nullable = true) (DbType = Date), @p65='Interstellar' (Nullable = false) (Size = 64), @p66='A young F.B.I. cadet must receive the help of an incarcerated and manipulative cannibal killer to catch another serial killer, a madman who skins his victims.' (Size = 512), @p67='Jonathan Demme' (Size = 64), @p68='Crime, Drama, Thriller' (Size = 64), @p69='False', @p70='02/14/1991' (Nullable = true) (DbType = Date), @p71='The Silence of the Lambs' (Nullable = false) (Size = 64), @p72='Two detectives, a rookie and a veteran, hunt a serial killer who uses the seven deadly sins as his motives.' (Size = 512), @p73='David Fincher' (Size = 64), @p74='Crime, Drama, Mystery' (Size = 64), @p75='False', @p76='09/22/1995' (Nullable = true) (DbType = Date), @p77='Se7en' (Nullable = false) (Size = 64), @p78='The lives of guards on Death Row are affected by one of their charges: a black man accused of child murder and rape, yet who has a mysterious gift.' (Size = 512), @p79='Frank Darabont' (Size = 64), @p80='Crime, Drama, Fantasy' (Size = 64), @p81='False', @p82='12/10/1999' (Nullable = true) (DbType = Date), @p83='The Green Mile' (Nullable = false) (Size = 64), @p84='A former Roman General sets out to exact vengeance against the corrupt emperor who murdered his family and sent him into slavery.' (Size = 512), @p85='Ridley Scott' (Size = 64), @p86='Action, Adventure, Drama' (Size = 64), @p87='False', @p88='05/05/2000' (Nullable = true) (DbType = Date), @p89='Gladiator' (Nullable = false) (Size = 64), @p90='Scottish warrior William Wallace leads his countrymen in a rebellion to free his homeland from the tyranny of King Edward I of England.' (Size = 512), @p91='Mel Gibson' (Size = 64), @p92='Biography, Drama, History' (Size = 64), @p93='False', @p94='05/24/1995' (Nullable = true) (DbType = Date), @p95='Braveheart' (Nullable = false) (Size = 64), @p96='A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.' (Size = 512), @p97='James Cameron' (Size = 64), @p98='Drama, Romance' (Size = 64), @p99='False', @p100='12/19/1997' (Nullable = true) (DbType = Date), @p101='Titanic' (Nullable = false) (Size = 64), @p102='A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.' (Size = 512), @p103='James Cameron' (Size = 64), @p104='Action, Adventure, Fantasy' (Size = 64), @p105='False', @p106='12/18/2009' (Nullable = true) (DbType = Date), @p107='Avatar' (Nullable = false) (Size = 64), @p108='Following the Normandy Landings, a group of U.S. soldiers go behind enemy lines to retrieve a paratrooper whose brothers have been killed in action.' (Size = 512), @p109='Steven Spielberg' (Size = 64), @p110='Drama, War' (Size = 64), @p111='False', @p112='07/24/1998' (Nullable = true) (DbType = Date), @p113='Saving Private Ryan' (Nullable = false) (Size = 64), @p114='Lion prince Simba and his father are targeted by his bitter uncle, who wants to ascend the throne himself.' (Size = 512), @p115='Roger Allers, Rob Minkoff' (Size = 64), @p116='Animation, Adventure, Drama' (Size = 64), @p117='False', @p118='06/24/1994' (Nullable = true) (DbType = Date), @p119='The Lion King' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Movies] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, 0),
(@p6, @p7, @p8, @p9, @p10, @p11, 1),
(@p12, @p13, @p14, @p15, @p16, @p17, 2),
(@p18, @p19, @p20, @p21, @p22, @p23, 3),
(@p24, @p25, @p26, @p27, @p28, @p29, 4),
(@p30, @p31, @p32, @p33, @p34, @p35, 5),
(@p36, @p37, @p38, @p39, @p40, @p41, 6),
(@p42, @p43, @p44, @p45, @p46, @p47, 7),
(@p48, @p49, @p50, @p51, @p52, @p53, 8),
(@p54, @p55, @p56, @p57, @p58, @p59, 9),
(@p60, @p61, @p62, @p63, @p64, @p65, 10),
(@p66, @p67, @p68, @p69, @p70, @p71, 11),
(@p72, @p73, @p74, @p75, @p76, @p77, 12),
(@p78, @p79, @p80, @p81, @p82, @p83, 13),
(@p84, @p85, @p86, @p87, @p88, @p89, 14),
(@p90, @p91, @p92, @p93, @p94, @p95, 15),
(@p96, @p97, @p98, @p99, @p100, @p101, 16),
(@p102, @p103, @p104, @p105, @p106, @p107, 17),
(@p108, @p109, @p110, @p111, @p112, @p113, 18),
(@p114, @p115, @p116, @p117, @p118, @p119, 19)) AS i ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
VALUES (i.[Description], i.[Director], i.[Genre], i.[IsDeleted], i.[ReleaseDate], i.[Title])
OUTPUT INSERTED.[Id], i._Position;
02.02, 00:58:55 => INF | info: 02.02.2025 00:58:55.163 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[@p0='In a futuristic world, two outcasts find unexpected friendship and uncover a mystery that could change the course of history.' (Size = 512), @p1='Lucas Mercer' (Size = 64), @p2='Drama' (Size = 64), @p3='False', @p4='06/15/2007' (Nullable = true) (DbType = Date), @p5='Echoes of Eternity' (Nullable = false) (Size = 64), @p6='The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.' (Size = 512), @p7='Francis Ford Coppola' (Size = 64), @p8='Crime, Drama' (Size = 64), @p9='False', @p10='03/24/1972' (Nullable = true) (DbType = Date), @p11='The Godfather' (Nullable = false) (Size = 64), @p12='When the menace known as the Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.' (Size = 512), @p13='Christopher Nolan' (Size = 64), @p14='Action, Crime, Drama' (Size = 64), @p15='False', @p16='07/18/2008' (Nullable = true) (DbType = Date), @p17='The Dark Knight' (Nullable = false) (Size = 64), @p18='In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.' (Size = 512), @p19='Steven Spielberg' (Size = 64), @p20='Biography, Drama, History' (Size = 64), @p21='False', @p22='12/15/1993' (Nullable = true) (DbType = Date), @p23='Schindler's List' (Nullable = false) (Size = 64), @p24='The lives of two mob hitmen, a boxer, a gangster's wife, and a pair of diner bandits intertwine in four tales of violence and redemption.' (Size = 512), @p25='Quentin Tarantino' (Size = 64), @p26='Crime, Drama' (Size = 64), @p27='False', @p28='10/14/1994' (Nullable = true) (DbType = Date), @p29='Pulp Fiction' (Nullable = false) (Size = 64), @p30='The presidencies of Kennedy and Johnson, the Vietnam War, the Watergate scandal and other historical events unfold from the perspective of an Alabama man with an IQ of 75.' (Size = 512), @p31='Robert Zemeckis' (Size = 64), @p32='Drama, Romance' (Size = 64), @p33='False', @p34='07/06/1994' (Nullable = true) (DbType = Date), @p35='Forrest Gump' (Nullable = false) (Size = 64), @p36='When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth about the reality of his world.' (Size = 512), @p37='Lana Wachowski, Lilly Wachowski' (Size = 64), @p38='Action, Sci-Fi' (Size = 64), @p39='False', @p40='03/31/1999' (Nullable = true) (DbType = Date), @p41='The Matrix' (Nullable = false) (Size = 64), @p42='A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.' (Size = 512), @p43='Christopher Nolan' (Size = 64), @p44='Action, Adventure, Sci-Fi' (Size = 64), @p45='False', @p46='07/16/2010' (Nullable = true) (DbType = Date), @p47='Inception' (Nullable = false) (Size = 64), @p48='Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.' (Size = 512), @p49='Peter Jackson' (Size = 64), @p50='Action, Adventure, Drama' (Size = 64), @p51='False', @p52='12/17/2003' (Nullable = true) (DbType = Date), @p53='The Lord of the Rings: The Return of the King' (Nullable = false) (Size = 64), @p54='An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into something much, much more.' (Size = 512), @p55='David Fincher' (Size = 64), @p56='Drama' (Size = 64), @p57='False', @p58='10/15/1999' (Nullable = true) (DbType = Date), @p59='Fight Club' (Nullable = false) (Size = 64), @p60='A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.' (Size = 512), @p61='Christopher Nolan' (Size = 64), @p62='Adventure, Drama, Sci-Fi' (Size = 64), @p63='False', @p64='11/07/2014' (Nullable = true) (DbType = Date), @p65='Interstellar' (Nullable = false) (Size = 64), @p66='A young F.B.I. cadet must receive the help of an incarcerated and manipulative cannibal killer to catch another serial killer, a madman who skins his victims.' (Size = 512), @p67='Jonathan Demme' (Size = 64), @p68='Crime, Drama, Thriller' (Size = 64), @p69='False', @p70='02/14/1991' (Nullable = true) (DbType = Date), @p71='The Silence of the Lambs' (Nullable = false) (Size = 64), @p72='Two detectives, a rookie and a veteran, hunt a serial killer who uses the seven deadly sins as his motives.' (Size = 512), @p73='David Fincher' (Size = 64), @p74='Crime, Drama, Mystery' (Size = 64), @p75='False', @p76='09/22/1995' (Nullable = true) (DbType = Date), @p77='Se7en' (Nullable = false) (Size = 64), @p78='The lives of guards on Death Row are affected by one of their charges: a black man accused of child murder and rape, yet who has a mysterious gift.' (Size = 512), @p79='Frank Darabont' (Size = 64), @p80='Crime, Drama, Fantasy' (Size = 64), @p81='False', @p82='12/10/1999' (Nullable = true) (DbType = Date), @p83='The Green Mile' (Nullable = false) (Size = 64), @p84='A former Roman General sets out to exact vengeance against the corrupt emperor who murdered his family and sent him into slavery.' (Size = 512), @p85='Ridley Scott' (Size = 64), @p86='Action, Adventure, Drama' (Size = 64), @p87='False', @p88='05/05/2000' (Nullable = true) (DbType = Date), @p89='Gladiator' (Nullable = false) (Size = 64), @p90='Scottish warrior William Wallace leads his countrymen in a rebellion to free his homeland from the tyranny of King Edward I of England.' (Size = 512), @p91='Mel Gibson' (Size = 64), @p92='Biography, Drama, History' (Size = 64), @p93='False', @p94='05/24/1995' (Nullable = true) (DbType = Date), @p95='Braveheart' (Nullable = false) (Size = 64), @p96='A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.' (Size = 512), @p97='James Cameron' (Size = 64), @p98='Drama, Romance' (Size = 64), @p99='False', @p100='12/19/1997' (Nullable = true) (DbType = Date), @p101='Titanic' (Nullable = false) (Size = 64), @p102='A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.' (Size = 512), @p103='James Cameron' (Size = 64), @p104='Action, Adventure, Fantasy' (Size = 64), @p105='False', @p106='12/18/2009' (Nullable = true) (DbType = Date), @p107='Avatar' (Nullable = false) (Size = 64), @p108='Following the Normandy Landings, a group of U.S. soldiers go behind enemy lines to retrieve a paratrooper whose brothers have been killed in action.' (Size = 512), @p109='Steven Spielberg' (Size = 64), @p110='Drama, War' (Size = 64), @p111='False', @p112='07/24/1998' (Nullable = true) (DbType = Date), @p113='Saving Private Ryan' (Nullable = false) (Size = 64), @p114='Lion prince Simba and his father are targeted by his bitter uncle, who wants to ascend the throne himself.' (Size = 512), @p115='Roger Allers, Rob Minkoff' (Size = 64), @p116='Animation, Adventure, Drama' (Size = 64), @p117='False', @p118='06/24/1994' (Nullable = true) (DbType = Date), @p119='The Lion King' (Nullable = false) (Size = 64)], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      MERGE [Movies] USING (
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5, 0),
      (@p6, @p7, @p8, @p9, @p10, @p11, 1),
      (@p12, @p13, @p14, @p15, @p16, @p17, 2),
      (@p18, @p19, @p20, @p21, @p22, @p23, 3),
      (@p24, @p25, @p26, @p27, @p28, @p29, 4),
      (@p30, @p31, @p32, @p33, @p34, @p35, 5),
      (@p36, @p37, @p38, @p39, @p40, @p41, 6),
      (@p42, @p43, @p44, @p45, @p46, @p47, 7),
      (@p48, @p49, @p50, @p51, @p52, @p53, 8),
      (@p54, @p55, @p56, @p57, @p58, @p59, 9),
      (@p60, @p61, @p62, @p63, @p64, @p65, 10),
      (@p66, @p67, @p68, @p69, @p70, @p71, 11),
      (@p72, @p73, @p74, @p75, @p76, @p77, 12),
      (@p78, @p79, @p80, @p81, @p82, @p83, 13),
      (@p84, @p85, @p86, @p87, @p88, @p89, 14),
      (@p90, @p91, @p92, @p93, @p94, @p95, 15),
      (@p96, @p97, @p98, @p99, @p100, @p101, 16),
      (@p102, @p103, @p104, @p105, @p106, @p107, 17),
      (@p108, @p109, @p110, @p111, @p112, @p113, 18),
      (@p114, @p115, @p116, @p117, @p118, @p119, 19)) AS i ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title], _Position) ON 1=0
      WHEN NOT MATCHED THEN
      INSERT ([Description], [Director], [Genre], [IsDeleted], [ReleaseDate], [Title])
      VALUES (i.[Description], i.[Director], i.[Genre], i.[IsDeleted], i.[ReleaseDate], i.[Title])
      OUTPUT INSERTED.[Id], i._Position;
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482646' to '2' for entity with key '{Id: 2}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482645' to '3' for entity with key '{Id: 3}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482644' to '4' for entity with key '{Id: 4}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482643' to '5' for entity with key '{Id: 5}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482642' to '6' for entity with key '{Id: 6}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482641' to '7' for entity with key '{Id: 7}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482640' to '8' for entity with key '{Id: 8}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482639' to '9' for entity with key '{Id: 9}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482638' to '10' for entity with key '{Id: 10}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482637' to '11' for entity with key '{Id: 11}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482636' to '12' for entity with key '{Id: 12}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482635' to '13' for entity with key '{Id: 13}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482634' to '14' for entity with key '{Id: 14}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482633' to '15' for entity with key '{Id: 15}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482632' to '16' for entity with key '{Id: 16}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482631' to '17' for entity with key '{Id: 17}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482630' to '18' for entity with key '{Id: 18}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482629' to '19' for entity with key '{Id: 19}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482628' to '20' for entity with key '{Id: 20}'.
02.02, 00:58:55 => DBG | The foreign key property 'Movie.Id' was detected as changed from '-2147482627' to '21' for entity with key '{Id: 21}'.
02.02, 00:58:55 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 19ms reading results.
02.02, 00:58:55 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 2}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 3}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 4}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 5}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 6}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 7}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 8}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 9}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 10}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 11}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 12}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 13}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 14}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 15}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 16}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 17}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 18}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 19}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 20}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | The 'Movie' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 00:58:55 => DBG | SaveChanges completed for 'CineVaultDbContext' with 20 entities written to the database.
02.02, 00:58:55 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 118.247ms.
02.02, 00:58:55 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:58:55 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:58:55 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:58:55 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:58:55 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:58:55 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:58:55 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:58:55 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API) in 135.7482ms
02.02, 00:58:55 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.CreateMoviesV2 (CineVault.API)'
02.02, 00:58:55 => INF | Serilog | Handled request: /api/v2/movies/several, for 145 milliseconds
02.02, 00:58:55 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:58:55 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:58:55 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:58:55 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies/several - 200 null application/json; charset=utf-8 155.3937ms
02.02, 00:59:03 => INF | Request starting HTTP/2 DELETE https://localhost:7171/api/v2/movies - application/json 167
02.02, 00:59:03 => DBG | 1 candidate(s) found for the request path '/api/v2/movies'
02.02, 00:59:03 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies' is valid for the request path '/api/v2/movies'
02.02, 00:59:03 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API)'
02.02, 00:59:03 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:59:03 => INF | Serilog | Handling request: /api/v2/movies for controller Movies with method DeleteMoviesV2
02.02, 00:59:03 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API)'
02.02, 00:59:03 => INF | Route matched with {action = "DeleteMoviesV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.String]]] DeleteMoviesV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:59:03 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:59:03 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:59:03 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:03 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:59:03 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:03 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:03 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:03 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]' ...
02.02, 00:59:03 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]' using the name '' in request data ...
02.02, 00:59:03 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:59:03 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000035": started reading request body.
02.02, 00:59:03 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000035": done reading request body.
02.02, 00:59:03 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[System.Collections.Generic.ICollection`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
02.02, 00:59:03 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]'.
02.02, 00:59:03 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]'.
02.02, 00:59:03 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]' ...
02.02, 00:59:03 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[System.Collections.Generic.ICollection`1[System.Int32]]'.
02.02, 00:59:03 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:59:03 => INF | Serilog | Getting movies with specified IDs [21]...
02.02, 00:59:03 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:59:03 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .Where(m => __request_Data_0.Contains(m.Id))
    .Select(m => new { 
        Movie = m, 
        HasReview = m.Reviews
            .Any()
     })'
02.02, 00:59:03 => DBG | Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<<>f__AnonymousType1<Movie, bool>>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            Movie -> Dictionary<IProperty, int> { [Property: Movie.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Movie.Description (string) MaxLength(512), 1], [Property: Movie.Director (string) MaxLength(64), 2], [Property: Movie.Genre (string) MaxLength(64), 3], [Property: Movie.IsDeleted (bool) Required, 4], [Property: Movie.ReleaseDate (DateOnly?), 5], [Property: Movie.Title (string) Required Index MaxLength(64), 6] }
            HasReview -> 7
        SELECT m.Id, m.Description, m.Director, m.Genre, m.IsDeleted, m.ReleaseDate, m.Title, EXISTS (
            SELECT 1
            FROM Reviews AS r0
            WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId))) AS HasReview
        FROM Movies AS m
        WHERE Not(m.IsDeleted) && m.Id IN (
            SELECT r.value
            FROM OPENJSON(@__request_Data_0) WITH (value int '') AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            Movie -> Dictionary<IProperty, int> { [Property: Movie.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Movie.Description (string) MaxLength(512), 1], [Property: Movie.Director (string) MaxLength(64), 2], [Property: Movie.Genre (string) MaxLength(64), 3], [Property: Movie.IsDeleted (bool) Required, 4], [Property: Movie.ReleaseDate (DateOnly?), 5], [Property: Movie.Title (string) Required Index MaxLength(64), 6] }
            HasReview -> 7
        SELECT m.Id, m.Description, m.Director, m.Genre, m.IsDeleted, m.ReleaseDate, m.Title, EXISTS (
            SELECT 1
            FROM Reviews AS r0
            WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId))) AS HasReview
        FROM Movies AS m
        WHERE Not(m.IsDeleted) && m.Id IN (
            SELECT r.value
            FROM OPENJSON(@__request_Data_0) WITH (value int '') AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Movie entity;
        bool? value2;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Movie instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Movie);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Movie.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Movie)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Movie | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Movie | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie")]: 
                        {
                            return 
                            {
                                Movie instance;
                                instance = new Movie(
                                    dataReader.GetString(6), 
                                    dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1), 
                                    dataReader.IsDBNull(5) ? default(DateOnly?) : (DateOnly?)dataReader.GetFieldValue<DateOnly>(5), 
                                    dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3), 
                                    dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2)
                                );
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Movie | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Movie)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        value2 = dataReader.IsDBNull(7) ? default(bool?) : (bool?)dataReader.GetBoolean(7);
        return new { 
            Movie = entity, 
            HasReview = (bool)value2
         };
    }, 
    contextType: CineVault.API.Entities.CineVaultDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
02.02, 00:59:03 => DBG | Creating DbConnection.
02.02, 00:59:03 => DBG | Created DbConnection. (0ms).
02.02, 00:59:03 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:59:03 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:59:03 => DBG | Initialized DbCommand for 'ExecuteReader' (2ms).
02.02, 00:59:03 => DBG | Executing DbCommand [Parameters=[@__request_Data_0='[21]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Description], [m].[Director], [m].[Genre], [m].[IsDeleted], [m].[ReleaseDate], [m].[Title], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [HasReview]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__request_Data_0) WITH ([value] int '$') AS [r]
)
02.02, 00:59:03 => INF | Executed DbCommand (6ms) [Parameters=[@__request_Data_0='[21]' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Description], [m].[Director], [m].[Genre], [m].[IsDeleted], [m].[ReleaseDate], [m].[Title], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [HasReview]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] IN (
    SELECT [r].[value]
    FROM OPENJSON(@__request_Data_0) WITH ([value] int '$') AS [r]
)
02.02, 00:59:03 => INF | info: 02.02.2025 00:59:03.912 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (6ms) [Parameters=[@__request_Data_0='[21]' (Size = 4000)], CommandType='Text', CommandTimeout='30']
      SELECT [m].[Id], [m].[Description], [m].[Director], [m].[Genre], [m].[IsDeleted], [m].[ReleaseDate], [m].[Title], CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Reviews] AS [r0]
              WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId]) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [HasReview]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] IN (
          SELECT [r].[value]
          FROM OPENJSON(@__request_Data_0) WITH ([value] int '$') AS [r]
      )
02.02, 00:59:03 => DBG | Context 'CineVaultDbContext' started tracking 'Movie' entity with key '{Id: 21}'.
02.02, 00:59:03 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:59:03 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:59:03 => DBG | The 'Movie' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Unchanged"' to '"Deleted"'.
02.02, 00:59:03 => INF | Serilog | Deleting movies...
02.02, 00:59:03 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 00:59:03 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 00:59:03 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 00:59:03 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:59:03 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:59:03 => DBG | Initialized DbCommand for 'ExecuteReader' (0ms).
02.02, 00:59:03 => DBG | Executing DbCommand [Parameters=[@p0='21'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Movies]
OUTPUT 1
WHERE [Id] = @p0;
02.02, 00:59:03 => INF | Executed DbCommand (5ms) [Parameters=[@p0='21'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Movies]
OUTPUT 1
WHERE [Id] = @p0;
02.02, 00:59:03 => INF | info: 02.02.2025 00:59:03.931 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[@p0='21'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      DELETE FROM [Movies]
      OUTPUT 1
      WHERE [Id] = @p0;
02.02, 00:59:03 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 00:59:03 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:59:03 => DBG | The 'Movie' entity with key '{Id: 21}' tracked by 'CineVaultDbContext' changed state from '"Deleted"' to '"Detached"'.
02.02, 00:59:03 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 00:59:03 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 83.4649ms.
02.02, 00:59:03 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:59:03 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:59:03 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:59:03 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:59:03 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:59:03 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:59:03 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:59:03 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API) in 104.2614ms
02.02, 00:59:03 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.DeleteMoviesV2 (CineVault.API)'
02.02, 00:59:03 => INF | Serilog | Handled request: /api/v2/movies, for 114 milliseconds
02.02, 00:59:03 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:59:03 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:03 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:59:03 => INF | Request finished HTTP/2 DELETE https://localhost:7171/api/v2/movies - 200 null application/json; charset=utf-8 125.2758ms
02.02, 00:59:47 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies/search-movies - application/json 308
02.02, 00:59:47 => DBG | 2 candidate(s) found for the request path '/api/v2/movies/search-movies'
02.02, 00:59:47 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/search-movies' is valid for the request path '/api/v2/movies/search-movies'
02.02, 00:59:47 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/{id}' is valid for the request path '/api/v2/movies/search-movies'
02.02, 00:59:47 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:47 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:59:47 => INF | Serilog | Handling request: /api/v2/movies/search-movies for controller Movies with method SearchMoviesV2
02.02, 00:59:47 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:47 => INF | Route matched with {action = "SearchMoviesV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieResponse]]]] SearchMoviesV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:59:47 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:59:47 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:59:47 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:47 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:59:47 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:47 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:47 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:47 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' ...
02.02, 00:59:47 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' using the name '' in request data ...
02.02, 00:59:47 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:59:47 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000037": started reading request body.
02.02, 00:59:47 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000037": done reading request body.
02.02, 00:59:47 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Movies.SearchMoviesRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:59:47 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:47 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:47 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' ...
02.02, 00:59:47 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:47 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:59:47 => INF | Serilog | Getting movies...
02.02, 00:59:47 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:59:47 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .AsNoTracking()
    .Where(m => False || m.Title.ToLower().Contains(__searchText_0) || m.Description != null && m.Description.ToLower().Contains(__searchText_0) || m.Director != null && m.Director.ToLower().Contains(__searchText_0))
    .Where(m => True)
    .Where(m => True)
    .Where(m => False || m.ReleaseDate >= __request_Data_MinReleaseDate_1)
    .Where(m => False || m.ReleaseDate <= __request_Data_MaxReleaseDate_2)
    .Select(namelessParameter{0} => new MovieResponse{ 
        Id = namelessParameter{0}.Id, 
        Title = namelessParameter{0}.Title, 
        Description = namelessParameter{0}.Description, 
        ReleaseDate = namelessParameter{0}.ReleaseDate, 
        Genre = namelessParameter{0}.Genre, 
        Director = namelessParameter{0}.Director, 
        AverageRating = namelessParameter{0}.Reviews.Count != 0 ? namelessParameter{0}.Reviews
            .Average(r => r.Rating) : 0, 
        ReviewCount = ((ICollection<Review>)namelessParameter{0}.Reviews).Count, 
        Reviews = namelessParameter{0}.Reviews
            .Select(namelessParameter{1} => new ReviewResponse{ 
                Id = namelessParameter{1}.Id, 
                MovieId = namelessParameter{1}.MovieId, 
                MovieTitle = namelessParameter{1}.Movie.Title, 
                UserId = namelessParameter{1}.UserId, 
                Username = namelessParameter{1}.User.Username, 
                Rating = namelessParameter{1}.Rating, 
                Comment = namelessParameter{1}.Comment, 
                CreatedAt = namelessParameter{1}.CreatedAt, 
                Reactions = namelessParameter{1}.Reactions
                    .Select(namelessParameter{2} => new ReactionResponse{ 
                        Id = namelessParameter{2}.Id, 
                        IsLike = namelessParameter{2}.IsLike, 
                        ReviewId = namelessParameter{2}.ReviewId, 
                        UserId = namelessParameter{2}.UserId 
                    }
                    )
                    .ToList(), 
                Likes = namelessParameter{1}.Reactions
                    .Count(r2 => r2.IsLike), 
                Dislikes = namelessParameter{1}.Reactions
                    .Count(r2 => !(r2.IsLike)) 
            }
            )
            .ToList() 
    }
    )'
02.02, 00:59:47 => WRN | Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 00:59:47 => INF | warn: 02.02.2025 00:59:47.177 RelationalEventId.MultipleCollectionIncludeWarning[20504] (Microsoft.EntityFrameworkCore.Query) 
      Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 00:59:47 => DBG | Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__searchText_0_contains", 
        value: (object)Invoke(queryContext => SqlServerSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__searchText_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<MovieResponse>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> 4
                5 -> 5
                6 -> 6
                7 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Review.Comment (string) MaxLength(512), 8], [Property: Review.CreatedAt (DateTime) Required, 9], [Property: Review.IsDeleted (bool) Required, 10], [Property: Review.MovieId (int) Required FK Index, 11], [Property: Review.Rating (int) Required, 12], [Property: Review.UserId (int) Required FK Index, 13] }
                8 -> 7
                9 -> 14
                10 -> 15
                11 -> 16
                12 -> 17
                13 -> 18
                14 -> 19
                15 -> 20
                16 -> 21
                17 -> 22
                18 -> 23
                19 -> 24
                20 -> 25
                21 -> 26
                22 -> 27
                23 -> 28
                24 -> 29
            SELECT m.Id, m.Title, m.Description, m.ReleaseDate, m.Genre, m.Director, CASE
                WHEN (
                    SELECT COUNT(*)
                    FROM Reviews AS r
                    WHERE Not(r.IsDeleted) && ((m.Id != NULL) && (m.Id == r.MovieId))) != 0 THEN (
                    SELECT AVG(CAST(r0.Rating AS float))
                    FROM Reviews AS r0
                    WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId)))
                ELSE 0.0E0
            END, r6.Id, r6.Comment, r6.CreatedAt, r6.IsDeleted, r6.MovieId, r6.Rating, r6.UserId, s.Id, s.MovieId, s.Title, s.UserId, s.Username, s.Rating, s.Comment, s.CreatedAt, s.Id0, s.Id1, s.Id2, s.IsLike, s.ReviewId, s.UserId0, s.c, s.c0
            FROM Movies AS m
            LEFT JOIN 
            (
                SELECT r1.Id, r1.Comment, r1.CreatedAt, r1.IsDeleted, r1.MovieId, r1.Rating, r1.UserId
                FROM Reviews AS r1
                WHERE Not(r1.IsDeleted)
            ) AS r6 ON m.Id == r6.MovieId
            LEFT JOIN 
            (
                SELECT r2.Id, r2.MovieId, m1.Title, r2.UserId, u0.Username, r2.Rating, r2.Comment, r2.CreatedAt, m1.Id AS Id0, u0.Id AS Id1, r7.Id AS Id2, r7.IsLike, r7.ReviewId, r7.UserId AS UserId0, (
                    SELECT COUNT(*)
                    FROM Reactions AS r4
                    WHERE (Not(r4.IsDeleted) && ((r2.Id != NULL) && (r2.Id == r4.ReviewId))) && r4.IsLike) AS c, (
                    SELECT COUNT(*)
                    FROM Reactions AS r5
                    WHERE (Not(r5.IsDeleted) && ((r2.Id != NULL) && (r2.Id == r5.ReviewId))) && Not(r5.IsLike)) AS c0
                FROM Reviews AS r2
                INNER JOIN 
                (
                    SELECT m0.Id, m0.Title
                    FROM Movies AS m0
                    WHERE Not(m0.IsDeleted)
                ) AS m1 ON r2.MovieId == m1.Id
                INNER JOIN 
                (
                    SELECT u.Id, u.Username
                    FROM Users AS u
                    WHERE Not(u.IsDeleted)
                ) AS u0 ON r2.UserId == u0.Id
                LEFT JOIN 
                (
                    SELECT r3.Id, r3.IsLike, r3.ReviewId, r3.UserId
                    FROM Reactions AS r3
                    WHERE Not(r3.IsDeleted)
                ) AS r7 ON r2.Id == r7.ReviewId
                WHERE Not(r2.IsDeleted)
            ) AS s ON m.Id == s.MovieId
            WHERE ((Not(m.IsDeleted) && (((LOWER(m.Title) LIKE @__searchText_0_contains ESCAPE N'\') || ((m.Description != NULL) && (LOWER(m.Description) LIKE @__searchText_0_contains ESCAPE N'\'))) || ((m.Director != NULL) && (LOWER(m.Director) LIKE @__searchText_0_contains ESCAPE N'\')))) && (m.ReleaseDate >= @__request_Data_MinReleaseDate_1)) && (m.ReleaseDate <= @__request_Data_MaxReleaseDate_2)
            ORDER BY m.Id ASC, r6.Id ASC, s.Id ASC, s.Id0 ASC, s.Id1 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> 4
                5 -> 5
                6 -> 6
                7 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Review.Comment (string) MaxLength(512), 8], [Property: Review.CreatedAt (DateTime) Required, 9], [Property: Review.IsDeleted (bool) Required, 10], [Property: Review.MovieId (int) Required FK Index, 11], [Property: Review.Rating (int) Required, 12], [Property: Review.UserId (int) Required FK Index, 13] }
                8 -> 7
                9 -> 14
                10 -> 15
                11 -> 16
                12 -> 17
                13 -> 18
                14 -> 19
                15 -> 20
                16 -> 21
                17 -> 22
                18 -> 23
                19 -> 24
                20 -> 25
                21 -> 26
                22 -> 27
                23 -> 28
                24 -> 29
            SELECT m.Id, m.Title, m.Description, m.ReleaseDate, m.Genre, m.Director, CASE
                WHEN (
                    SELECT COUNT(*)
                    FROM Reviews AS r
                    WHERE Not(r.IsDeleted) && ((m.Id != NULL) && (m.Id == r.MovieId))) != 0 THEN (
                    SELECT AVG(CAST(r0.Rating AS float))
                    FROM Reviews AS r0
                    WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId)))
                ELSE 0.0E0
            END, r6.Id, r6.Comment, r6.CreatedAt, r6.IsDeleted, r6.MovieId, r6.Rating, r6.UserId, s.Id, s.MovieId, s.Title, s.UserId, s.Username, s.Rating, s.Comment, s.CreatedAt, s.Id0, s.Id1, s.Id2, s.IsLike, s.ReviewId, s.UserId0, s.c, s.c0
            FROM Movies AS m
            LEFT JOIN 
            (
                SELECT r1.Id, r1.Comment, r1.CreatedAt, r1.IsDeleted, r1.MovieId, r1.Rating, r1.UserId
                FROM Reviews AS r1
                WHERE Not(r1.IsDeleted)
            ) AS r6 ON m.Id == r6.MovieId
            LEFT JOIN 
            (
                SELECT r2.Id, r2.MovieId, m1.Title, r2.UserId, u0.Username, r2.Rating, r2.Comment, r2.CreatedAt, m1.Id AS Id0, u0.Id AS Id1, r7.Id AS Id2, r7.IsLike, r7.ReviewId, r7.UserId AS UserId0, (
                    SELECT COUNT(*)
                    FROM Reactions AS r4
                    WHERE (Not(r4.IsDeleted) && ((r2.Id != NULL) && (r2.Id == r4.ReviewId))) && r4.IsLike) AS c, (
                    SELECT COUNT(*)
                    FROM Reactions AS r5
                    WHERE (Not(r5.IsDeleted) && ((r2.Id != NULL) && (r2.Id == r5.ReviewId))) && Not(r5.IsLike)) AS c0
                FROM Reviews AS r2
                INNER JOIN 
                (
                    SELECT m0.Id, m0.Title
                    FROM Movies AS m0
                    WHERE Not(m0.IsDeleted)
                ) AS m1 ON r2.MovieId == m1.Id
                INNER JOIN 
                (
                    SELECT u.Id, u.Username
                    FROM Users AS u
                    WHERE Not(u.IsDeleted)
                ) AS u0 ON r2.UserId == u0.Id
                LEFT JOIN 
                (
                    SELECT r3.Id, r3.IsLike, r3.ReviewId, r3.UserId
                    FROM Reactions AS r3
                    WHERE Not(r3.IsDeleted)
                ) AS r7 ON r2.Id == r7.ReviewId
                WHERE Not(r2.IsDeleted)
            ) AS s ON m.Id == s.MovieId
            WHERE ((Not(m.IsDeleted) && (((LOWER(m.Title) LIKE @__searchText_0_contains ESCAPE N'\') || ((m.Description != NULL) && (LOWER(m.Description) LIKE @__searchText_0_contains ESCAPE N'\'))) || ((m.Director != NULL) && (LOWER(m.Director) LIKE @__searchText_0_contains ESCAPE N'\')))) && (m.ReleaseDate >= @__request_Data_MinReleaseDate_1)) && (m.ReleaseDate <= @__request_Data_MaxReleaseDate_2)
            ORDER BY m.Id ASC, r6.Id ASC, s.Id ASC, s.Id0 ASC, s.Id1 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                int? value1;
                string value2;
                string value3;
                DateOnly? value4;
                string value5;
                string value6;
                double? value7;
                ICollection<Review> namelessParameter{0};
                ICollection<Review> namelessParameter{1};
                List<ReviewResponse> namelessParameter{2};
                value1 = (int?)dataReader.GetInt32(0);
                value2 = dataReader.GetString(1);
                value3 = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                value4 = dataReader.IsDBNull(3) ? default(DateOnly?) : (DateOnly?)dataReader.GetFieldValue<DateOnly>(3);
                value5 = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                value6 = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                value7 = dataReader.IsDBNull(6) ? default(double?) : (double?)dataReader.GetDouble(6);
                namelessParameter{0} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Movie, ICollection<Review>, Review> | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie").FindNavigation("Reviews").GetCollectionAccessor()]);
                namelessParameter{1} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 1, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Movie, ICollection<Review>, Review> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie").FindNavigation("Reviews").GetCollectionAccessor()]);
                namelessParameter{2} = ShaperProcessingExpressionVisitor.InitializeCollection<ReviewResponse, List<ReviewResponse>>(
                    collectionId: 2, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(int?)dataReader.GetInt32(0), 
                        (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) 
                    }], 
                    clrCollectionAccessor: default(IClrCollectionAccessor));
                return resultContext.Values = new object[]
                { 
                    (object)value1, 
                    value2, 
                    value3, 
                    (object)value4, 
                    value5, 
                    value6, 
                    (object)value7, 
                    namelessParameter{0}, 
                    namelessParameter{1}, 
                    namelessParameter{2} 
                };
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext1;
                        IEntityType entityType1;
                        Review instance1;
                        materializationContext1 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance1 = default(Review);
                        dataReader.IsDBNull(7) ? default(object) : (object)dataReader.GetInt32(7) != null ? 
                        {
                            ISnapshot shadowSnapshot1;
                            shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType1 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance1 = switch (entityType1)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8), 
                                                dataReader.IsDBNull(12) ? default(int) : dataReader.GetInt32(12), 
                                                dataReader.IsDBNull(11) ? default(int) : dataReader.GetInt32(11), 
                                                dataReader.IsDBNull(13) ? default(int) : dataReader.GetInt32(13)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(7) ? default(int) : dataReader.GetInt32(7);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(9) ? default(DateTime) : dataReader.GetDateTime(9);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(10) ? default(bool) : dataReader.GetBoolean(10);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext1.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance1;
                        } : default(void);
                        return instance1;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 1, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Review instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Review);
                        dataReader.IsDBNull(7) ? default(object) : (object)dataReader.GetInt32(7) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8), 
                                                dataReader.IsDBNull(12) ? default(int) : dataReader.GetInt32(12), 
                                                dataReader.IsDBNull(11) ? default(int) : dataReader.GetInt32(11), 
                                                dataReader.IsDBNull(13) ? default(int) : dataReader.GetInt32(13)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(7) ? default(int) : dataReader.GetInt32(7);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(9) ? default(DateTime) : dataReader.GetDateTime(9);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(10) ? default(bool) : dataReader.GetBoolean(10);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<List<ReviewResponse>, ReviewResponse, ReviewResponse>(
                collectionId: 2, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                    (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                    (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    resultContext.Values == null ? 
                    {
                        int? value1;
                        int? value2;
                        string value3;
                        int? value4;
                        string value5;
                        int? value6;
                        string value7;
                        DateTime? value8;
                        List<ReactionResponse> namelessParameter{11};
                        int? value10;
                        int? value11;
                        value1 = dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14);
                        value2 = dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15);
                        value3 = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                        value4 = dataReader.IsDBNull(17) ? default(int?) : (int?)dataReader.GetInt32(17);
                        value5 = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                        value6 = dataReader.IsDBNull(19) ? default(int?) : (int?)dataReader.GetInt32(19);
                        value7 = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                        value8 = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                        namelessParameter{11} = ShaperProcessingExpressionVisitor.InitializeCollection<ReactionResponse, List<ReactionResponse>>(
                            collectionId: 3, 
                            queryContext: queryContext, 
                            dbDataReader: dataReader, 
                            resultCoordinator: resultCoordinator, 
                            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                            { 
                                (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                                (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                                (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                            }], 
                            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                            { 
                                (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                                (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                                (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                            }], 
                            clrCollectionAccessor: default(IClrCollectionAccessor));
                        value10 = dataReader.IsDBNull(28) ? default(int?) : (int?)dataReader.GetInt32(28);
                        value11 = dataReader.IsDBNull(29) ? default(int?) : (int?)dataReader.GetInt32(29);
                        return resultContext.Values = new object[]
                        { 
                            (object)value1, 
                            (object)value2, 
                            value3, 
                            (object)value4, 
                            value5, 
                            (object)value6, 
                            value7, 
                            (object)value8, 
                            namelessParameter{11}, 
                            (object)value10, 
                            (object)value11 
                        };
                    } : default(void);
                    ShaperProcessingExpressionVisitor.PopulateCollection<List<ReactionResponse>, ReactionResponse, ReactionResponse>(
                        collectionId: 3, 
                        queryContext: queryContext, 
                        dbDataReader: dataReader, 
                        resultCoordinator: resultCoordinator, 
                        parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                        { 
                            (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                            (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                            (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                        }], 
                        outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                        { 
                            (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                            (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                            (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                        }], 
                        selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(24) ? default(int?) : (int?)dataReader.GetInt32(24) }], 
                        parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                        { 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                        }], 
                        outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                        { 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                        }], 
                        selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                        innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                        {
                            int? value1;
                            bool? value2;
                            int? value3;
                            int? value4;
                            value1 = dataReader.IsDBNull(24) ? default(int?) : (int?)dataReader.GetInt32(24);
                            value2 = dataReader.IsDBNull(25) ? default(bool?) : (bool?)dataReader.GetBoolean(25);
                            value3 = dataReader.IsDBNull(26) ? default(int?) : (int?)dataReader.GetInt32(26);
                            value4 = dataReader.IsDBNull(27) ? default(int?) : (int?)dataReader.GetInt32(27);
                            return new ReactionResponse{ 
                                Id = (int)value1, 
                                IsLike = (bool)value2, 
                                ReviewId = (int)value3, 
                                UserId = (int)value4 
                            }
                            ;
                        });
                    return IsTrue(resultCoordinator.ResultReady)
                     ? new ReviewResponse{ 
                        Id = (int)(int?)(resultContext.Values[0]), 
                        MovieId = (int)(int?)(resultContext.Values[1]), 
                        MovieTitle = (string)(resultContext.Values[2]), 
                        UserId = (int)(int?)(resultContext.Values[3]), 
                        Username = (string)(resultContext.Values[4]), 
                        Rating = (int)(int?)(resultContext.Values[5]), 
                        Comment = (string)(resultContext.Values[6]), 
                        CreatedAt = (DateTime)(DateTime?)(resultContext.Values[7]), 
                        Reactions = (List<ReactionResponse>)(resultContext.Values[8]), 
                        Likes = (int)(int?)(resultContext.Values[9]), 
                        Dislikes = (int)(int?)(resultContext.Values[10]) 
                    }
                     : default(ReviewResponse);
                });
            return IsTrue(resultCoordinator.ResultReady)
             ? new MovieResponse{ 
                Id = (int)(int?)(resultContext.Values[0]), 
                Title = (string)(resultContext.Values[1]), 
                Description = (string)(resultContext.Values[2]), 
                ReleaseDate = (DateOnly?)(resultContext.Values[3]), 
                Genre = (string)(resultContext.Values[4]), 
                Director = (string)(resultContext.Values[5]), 
                AverageRating = (double)(double?)(resultContext.Values[6]), 
                ReviewCount = (int)(ICollection<Review>)(resultContext.Values[7]) == default(ICollection<Review>) ? null : (int?)((ICollection<Review>)(resultContext.Values[8])).Count, 
                Reviews = (List<ReviewResponse>)(resultContext.Values[9]) 
            }
             : default(MovieResponse);
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
02.02, 00:59:47 => DBG | Creating DbConnection.
02.02, 00:59:47 => DBG | Created DbConnection. (1ms).
02.02, 00:59:47 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:47 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:47 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:59:47 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:59:47 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:59:47 => DBG | Executing DbCommand [Parameters=[@__searchText_0_contains='%futuristic%' (Size = 64), @__searchText_0_contains_1='%futuristic%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
    WHEN (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
    ELSE 0.0E0
END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r6] ON [m].[Id] = [r6].[MovieId]
LEFT JOIN (
    SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r2].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
        FROM [Reactions] AS [r3]
        WHERE [r3].[IsDeleted] = CAST(0 AS bit)
    ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit)
) AS [s] ON [m].[Id] = [s].[MovieId]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:47 => INF | Executed DbCommand (37ms) [Parameters=[@__searchText_0_contains='%futuristic%' (Size = 64), @__searchText_0_contains_1='%futuristic%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
    WHEN (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
    ELSE 0.0E0
END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r6] ON [m].[Id] = [r6].[MovieId]
LEFT JOIN (
    SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r2].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
        FROM [Reactions] AS [r3]
        WHERE [r3].[IsDeleted] = CAST(0 AS bit)
    ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit)
) AS [s] ON [m].[Id] = [s].[MovieId]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:47 => INF | info: 02.02.2025 00:59:47.285 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (37ms) [Parameters=[@__searchText_0_contains='%futuristic%' (Size = 64), @__searchText_0_contains_1='%futuristic%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='Text', CommandTimeout='30']
      SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
          WHEN (
              SELECT COUNT(*)
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
              SELECT COUNT(*)
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
              SELECT AVG(CAST([r0].[Rating] AS float))
              FROM [Reviews] AS [r0]
              WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
          ELSE 0.0E0
      END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
      FROM [Movies] AS [m]
      LEFT JOIN (
          SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
          FROM [Reviews] AS [r1]
          WHERE [r1].[IsDeleted] = CAST(0 AS bit)
      ) AS [r6] ON [m].[Id] = [r6].[MovieId]
      LEFT JOIN (
          SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r4]
              WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r5]
              WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
          FROM [Reviews] AS [r2]
          INNER JOIN (
              SELECT [m0].[Id], [m0].[Title]
              FROM [Movies] AS [m0]
              WHERE [m0].[IsDeleted] = CAST(0 AS bit)
          ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
          INNER JOIN (
              SELECT [u].[Id], [u].[Username]
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit)
          ) AS [u0] ON [r2].[UserId] = [u0].[Id]
          LEFT JOIN (
              SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
              FROM [Reactions] AS [r3]
              WHERE [r3].[IsDeleted] = CAST(0 AS bit)
          ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
          WHERE [r2].[IsDeleted] = CAST(0 AS bit)
      ) AS [s] ON [m].[Id] = [s].[MovieId]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
      ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:47 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:47 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 9ms reading results.
02.02, 00:59:47 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:47 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 00:59:47 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 239.2326ms.
02.02, 00:59:47 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:59:47 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:59:47 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:59:47 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:59:47 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:59:47 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:59:47 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[CineVault.API.Controllers.Movies.MovieResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:59:47 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API) in 279.2582ms
02.02, 00:59:47 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:47 => INF | Serilog | Handled request: /api/v2/movies/search-movies, for 292 milliseconds
02.02, 00:59:47 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:59:47 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:47 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:59:47 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies/search-movies - 200 null application/json; charset=utf-8 306.6612ms
02.02, 00:59:58 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies/search-movies - application/json 303
02.02, 00:59:58 => DBG | 2 candidate(s) found for the request path '/api/v2/movies/search-movies'
02.02, 00:59:58 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/search-movies' is valid for the request path '/api/v2/movies/search-movies'
02.02, 00:59:58 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieByIdV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/{id}' is valid for the request path '/api/v2/movies/search-movies'
02.02, 00:59:58 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:58 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 00:59:58 => INF | Serilog | Handling request: /api/v2/movies/search-movies for controller Movies with method SearchMoviesV2
02.02, 00:59:58 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:58 => INF | Route matched with {action = "SearchMoviesV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Collections.Generic.ICollection`1[CineVault.API.Controllers.Movies.MovieResponse]]]] SearchMoviesV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 00:59:58 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 00:59:58 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 00:59:58 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:58 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 00:59:58 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 00:59:58 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:58 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 00:59:58 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' ...
02.02, 00:59:58 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' using the name '' in request data ...
02.02, 00:59:58 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 00:59:58 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000039": started reading request body.
02.02, 00:59:58 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000039": done reading request body.
02.02, 00:59:58 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Movies.SearchMoviesRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 00:59:58 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:58 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:58 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]' ...
02.02, 00:59:58 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Movies.SearchMoviesRequest]'.
02.02, 00:59:58 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API) - Validation state: "Valid"
02.02, 00:59:58 => INF | Serilog | Getting movies...
02.02, 00:59:58 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 00:59:58 => DBG | Creating DbConnection.
02.02, 00:59:58 => DBG | Created DbConnection. (0ms).
02.02, 00:59:58 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:58 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:58 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 00:59:58 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 00:59:58 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 00:59:58 => DBG | Executing DbCommand [Parameters=[@__searchText_0_contains='%world%' (Size = 64), @__searchText_0_contains_1='%world%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
    WHEN (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
    ELSE 0.0E0
END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r6] ON [m].[Id] = [r6].[MovieId]
LEFT JOIN (
    SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r2].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
        FROM [Reactions] AS [r3]
        WHERE [r3].[IsDeleted] = CAST(0 AS bit)
    ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit)
) AS [s] ON [m].[Id] = [s].[MovieId]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:58 => INF | Executed DbCommand (2ms) [Parameters=[@__searchText_0_contains='%world%' (Size = 64), @__searchText_0_contains_1='%world%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
    WHEN (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
        SELECT COUNT(*)
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Reviews] AS [r0]
        WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
    ELSE 0.0E0
END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r6] ON [m].[Id] = [r6].[MovieId]
LEFT JOIN (
    SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r2].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
        FROM [Reactions] AS [r3]
        WHERE [r3].[IsDeleted] = CAST(0 AS bit)
    ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit)
) AS [s] ON [m].[Id] = [s].[MovieId]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:58 => INF | info: 02.02.2025 00:59:58.863 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@__searchText_0_contains='%world%' (Size = 64), @__searchText_0_contains_1='%world%' (Size = 512), @__request_Data_MinReleaseDate_1='02/01/1925' (Nullable = true) (DbType = Date), @__request_Data_MaxReleaseDate_2='02/01/2125' (Nullable = true) (DbType = Date)], CommandType='Text', CommandTimeout='30']
      SELECT [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
          WHEN (
              SELECT COUNT(*)
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
              SELECT COUNT(*)
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
              SELECT AVG(CAST([r0].[Rating] AS float))
              FROM [Reviews] AS [r0]
              WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
          ELSE 0.0E0
      END, [r6].[Id], [r6].[Comment], [r6].[CreatedAt], [r6].[IsDeleted], [r6].[MovieId], [r6].[Rating], [r6].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
      FROM [Movies] AS [m]
      LEFT JOIN (
          SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
          FROM [Reviews] AS [r1]
          WHERE [r1].[IsDeleted] = CAST(0 AS bit)
      ) AS [r6] ON [m].[Id] = [r6].[MovieId]
      LEFT JOIN (
          SELECT [r2].[Id], [r2].[MovieId], [m1].[Title], [r2].[UserId], [u0].[Username], [r2].[Rating], [r2].[Comment], [r2].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r7].[Id] AS [Id2], [r7].[IsLike], [r7].[ReviewId], [r7].[UserId] AS [UserId0], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r4]
              WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r4].[ReviewId] AND [r4].[IsLike] = CAST(1 AS bit)) AS [c], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r5]
              WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r2].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(0 AS bit)) AS [c0]
          FROM [Reviews] AS [r2]
          INNER JOIN (
              SELECT [m0].[Id], [m0].[Title]
              FROM [Movies] AS [m0]
              WHERE [m0].[IsDeleted] = CAST(0 AS bit)
          ) AS [m1] ON [r2].[MovieId] = [m1].[Id]
          INNER JOIN (
              SELECT [u].[Id], [u].[Username]
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit)
          ) AS [u0] ON [r2].[UserId] = [u0].[Id]
          LEFT JOIN (
              SELECT [r3].[Id], [r3].[IsLike], [r3].[ReviewId], [r3].[UserId]
              FROM [Reactions] AS [r3]
              WHERE [r3].[IsDeleted] = CAST(0 AS bit)
          ) AS [r7] ON [r2].[Id] = [r7].[ReviewId]
          WHERE [r2].[IsDeleted] = CAST(0 AS bit)
      ) AS [s] ON [m].[Id] = [s].[MovieId]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND (LOWER([m].[Title]) LIKE @__searchText_0_contains ESCAPE N'\' OR ([m].[Description] IS NOT NULL AND LOWER([m].[Description]) LIKE @__searchText_0_contains_1 ESCAPE N'\') OR ([m].[Director] IS NOT NULL AND LOWER([m].[Director]) LIKE @__searchText_0_contains ESCAPE N'\')) AND [m].[ReleaseDate] >= @__request_Data_MinReleaseDate_1 AND [m].[ReleaseDate] <= @__request_Data_MaxReleaseDate_2
      ORDER BY [m].[Id], [r6].[Id], [s].[Id], [s].[Id0], [s].[Id1]
02.02, 00:59:58 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:58 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 00:59:58 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:58 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 00:59:58 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 16.3819ms.
02.02, 00:59:58 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 00:59:58 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 00:59:58 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 00:59:58 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 00:59:58 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 00:59:58 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 00:59:58 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Collections.Generic.List`1[[CineVault.API.Controllers.Movies.MovieResponse, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 00:59:58 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API) in 29.0078ms
02.02, 00:59:58 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.SearchMoviesV2 (CineVault.API)'
02.02, 00:59:58 => INF | Serilog | Handled request: /api/v2/movies/search-movies, for 35 milliseconds
02.02, 00:59:58 => DBG | 'CineVaultDbContext' disposed.
02.02, 00:59:58 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 00:59:58 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 00:59:58 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies/search-movies - 200 null application/json; charset=utf-8 45.2781ms
02.02, 01:00:39 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies/1/movie-details - application/json 143
02.02, 01:00:39 => DBG | 1 candidate(s) found for the request path '/api/v2/movies/1/movie-details'
02.02, 01:00:39 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/{id}/movie-details' is valid for the request path '/api/v2/movies/1/movie-details'
02.02, 01:00:39 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:00:39 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:00:39 => INF | Serilog | Handling request: /api/v2/movies/1/movie-details for controller Movies with method GetMovieDetailsV2
02.02, 01:00:39 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:00:39 => INF | Route matched with {action = "GetMovieDetailsV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Movies.MovieDetails]]] GetMovieDetailsV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 01:00:39 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:00:39 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:00:39 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:00:39 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:00:39 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:00:39 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 01:00:39 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 01:00:39 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:00:39 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 01:00:39 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:00:39 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003B": started reading request body.
02.02, 01:00:39 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003B": done reading request body.
02.02, 01:00:39 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 01:00:39 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:00:39 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:00:39 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:00:39 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:00:39 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 01:00:39 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 01:00:39 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:00:39 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:00:39 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 01:00:39 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 01:00:39 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:00:39 => INF | Serilog | Getting movie with ID 1...
02.02, 01:00:39 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:00:39 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .AsNoTracking()
    .Select(namelessParameter{0} => new MovieDetails{ 
        Id = namelessParameter{0}.Id, 
        Title = namelessParameter{0}.Title, 
        Description = namelessParameter{0}.Description, 
        ReleaseDate = namelessParameter{0}.ReleaseDate, 
        Genre = namelessParameter{0}.Genre, 
        Director = namelessParameter{0}.Director, 
        AverageRating = namelessParameter{0}.Reviews.Count != 0 ? namelessParameter{0}.Reviews
            .Average(r => r.Rating) : 0, 
        ReviewCount = ((ICollection<Review>)namelessParameter{0}.Reviews).Count, 
        LastReviews = namelessParameter{0}.Reviews
            .OrderByDescending(r => r.CreatedAt)
            .Take(5)
            .Select(namelessParameter{1} => new ReviewResponse{ 
                Id = namelessParameter{1}.Id, 
                MovieId = namelessParameter{1}.MovieId, 
                MovieTitle = namelessParameter{1}.Movie.Title, 
                UserId = namelessParameter{1}.UserId, 
                Username = namelessParameter{1}.User.Username, 
                Rating = namelessParameter{1}.Rating, 
                Comment = namelessParameter{1}.Comment, 
                CreatedAt = namelessParameter{1}.CreatedAt, 
                Reactions = namelessParameter{1}.Reactions
                    .Select(namelessParameter{2} => new ReactionResponse{ 
                        Id = namelessParameter{2}.Id, 
                        IsLike = namelessParameter{2}.IsLike, 
                        ReviewId = namelessParameter{2}.ReviewId, 
                        UserId = namelessParameter{2}.UserId 
                    }
                    )
                    .ToList(), 
                Likes = namelessParameter{1}.Reactions
                    .Count(r2 => r2.IsLike), 
                Dislikes = namelessParameter{1}.Reactions
                    .Count(r2 => !(r2.IsLike)) 
            }
            )
            .ToList() 
    }
    )
    .FirstOrDefault(m => m.Id == __id_0)'
02.02, 01:00:39 => WRN | Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 01:00:39 => INF | warn: 02.02.2025 01:00:39.775 RelationalEventId.MultipleCollectionIncludeWarning[20504] (Microsoft.EntityFrameworkCore.Query) 
      Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 01:00:39 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<MovieDetails>(
    asyncEnumerable: SingleQueryingEnumerable.Create<MovieDetails>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> 4
                5 -> 5
                6 -> 6
                7 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Review.Comment (string) MaxLength(512), 8], [Property: Review.CreatedAt (DateTime) Required, 9], [Property: Review.IsDeleted (bool) Required, 10], [Property: Review.MovieId (int) Required FK Index, 11], [Property: Review.Rating (int) Required, 12], [Property: Review.UserId (int) Required FK Index, 13] }
                8 -> 7
                9 -> 14
                10 -> 15
                11 -> 16
                12 -> 17
                13 -> 18
                14 -> 19
                15 -> 20
                16 -> 21
                17 -> 22
                18 -> 23
                19 -> 24
                20 -> 25
                21 -> 26
                22 -> 27
                23 -> 28
                24 -> 29
            SELECT m2.Id, m2.Title, m2.Description, m2.ReleaseDate, m2.Genre, m2.Director, m2.c, r7.Id, r7.Comment, r7.CreatedAt, r7.IsDeleted, r7.MovieId, r7.Rating, r7.UserId, s.Id, s.MovieId, s.Title, s.UserId, s.Username, s.Rating, s.Comment, s.CreatedAt, s.Id0, s.Id1, s.Id2, s.IsLike, s.ReviewId, s.UserId0, s.c, s.c0
            FROM 
            (
                SELECT TOP(1) m.Id, m.Title, m.Description, m.ReleaseDate, m.Genre, m.Director, CASE
                    WHEN (
                        SELECT COUNT(*)
                        FROM Reviews AS r
                        WHERE Not(r.IsDeleted) && ((m.Id != NULL) && (m.Id == r.MovieId))) != 0 THEN (
                        SELECT AVG(CAST(r0.Rating AS float))
                        FROM Reviews AS r0
                        WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId)))
                    ELSE 0.0E0
                END AS c
                FROM Movies AS m
                WHERE Not(m.IsDeleted) && (m.Id == @__id_0)
            ) AS m2
            LEFT JOIN 
            (
                SELECT r1.Id, r1.Comment, r1.CreatedAt, r1.IsDeleted, r1.MovieId, r1.Rating, r1.UserId
                FROM Reviews AS r1
                WHERE Not(r1.IsDeleted)
            ) AS r7 ON m2.Id == r7.MovieId
            OUTER APPLY 
            (
                SELECT r3.Id, r3.MovieId, m1.Title, r3.UserId, u0.Username, r3.Rating, r3.Comment, r3.CreatedAt, m1.Id AS Id0, u0.Id AS Id1, r8.Id AS Id2, r8.IsLike, r8.ReviewId, r8.UserId AS UserId0, (
                    SELECT COUNT(*)
                    FROM Reactions AS r5
                    WHERE (Not(r5.IsDeleted) && ((r3.Id != NULL) && (r3.Id == r5.ReviewId))) && r5.IsLike) AS c, (
                    SELECT COUNT(*)
                    FROM Reactions AS r6
                    WHERE (Not(r6.IsDeleted) && ((r3.Id != NULL) && (r3.Id == r6.ReviewId))) && Not(r6.IsLike)) AS c0
                FROM 
                (
                    SELECT TOP(5) r2.Id, r2.Comment, r2.CreatedAt, r2.MovieId, r2.Rating, r2.UserId
                    FROM Reviews AS r2
                    WHERE Not(r2.IsDeleted) && ((m2.Id != NULL) && (m2.Id == r2.MovieId))
                    ORDER BY r2.CreatedAt DESC
                ) AS r3
                INNER JOIN 
                (
                    SELECT m0.Id, m0.Title
                    FROM Movies AS m0
                    WHERE Not(m0.IsDeleted)
                ) AS m1 ON r3.MovieId == m1.Id
                INNER JOIN 
                (
                    SELECT u.Id, u.Username
                    FROM Users AS u
                    WHERE Not(u.IsDeleted)
                ) AS u0 ON r3.UserId == u0.Id
                LEFT JOIN 
                (
                    SELECT r4.Id, r4.IsLike, r4.ReviewId, r4.UserId
                    FROM Reactions AS r4
                    WHERE Not(r4.IsDeleted)
                ) AS r8 ON r3.Id == r8.ReviewId
            ) AS s
            ORDER BY m2.Id ASC, r7.Id ASC, s.CreatedAt DESC, s.Id ASC, s.Id0 ASC, s.Id1 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> 4
                5 -> 5
                6 -> 6
                7 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Review.Comment (string) MaxLength(512), 8], [Property: Review.CreatedAt (DateTime) Required, 9], [Property: Review.IsDeleted (bool) Required, 10], [Property: Review.MovieId (int) Required FK Index, 11], [Property: Review.Rating (int) Required, 12], [Property: Review.UserId (int) Required FK Index, 13] }
                8 -> 7
                9 -> 14
                10 -> 15
                11 -> 16
                12 -> 17
                13 -> 18
                14 -> 19
                15 -> 20
                16 -> 21
                17 -> 22
                18 -> 23
                19 -> 24
                20 -> 25
                21 -> 26
                22 -> 27
                23 -> 28
                24 -> 29
            SELECT m2.Id, m2.Title, m2.Description, m2.ReleaseDate, m2.Genre, m2.Director, m2.c, r7.Id, r7.Comment, r7.CreatedAt, r7.IsDeleted, r7.MovieId, r7.Rating, r7.UserId, s.Id, s.MovieId, s.Title, s.UserId, s.Username, s.Rating, s.Comment, s.CreatedAt, s.Id0, s.Id1, s.Id2, s.IsLike, s.ReviewId, s.UserId0, s.c, s.c0
            FROM 
            (
                SELECT TOP(1) m.Id, m.Title, m.Description, m.ReleaseDate, m.Genre, m.Director, CASE
                    WHEN (
                        SELECT COUNT(*)
                        FROM Reviews AS r
                        WHERE Not(r.IsDeleted) && ((m.Id != NULL) && (m.Id == r.MovieId))) != 0 THEN (
                        SELECT AVG(CAST(r0.Rating AS float))
                        FROM Reviews AS r0
                        WHERE Not(r0.IsDeleted) && ((m.Id != NULL) && (m.Id == r0.MovieId)))
                    ELSE 0.0E0
                END AS c
                FROM Movies AS m
                WHERE Not(m.IsDeleted) && (m.Id == @__id_0)
            ) AS m2
            LEFT JOIN 
            (
                SELECT r1.Id, r1.Comment, r1.CreatedAt, r1.IsDeleted, r1.MovieId, r1.Rating, r1.UserId
                FROM Reviews AS r1
                WHERE Not(r1.IsDeleted)
            ) AS r7 ON m2.Id == r7.MovieId
            OUTER APPLY 
            (
                SELECT r3.Id, r3.MovieId, m1.Title, r3.UserId, u0.Username, r3.Rating, r3.Comment, r3.CreatedAt, m1.Id AS Id0, u0.Id AS Id1, r8.Id AS Id2, r8.IsLike, r8.ReviewId, r8.UserId AS UserId0, (
                    SELECT COUNT(*)
                    FROM Reactions AS r5
                    WHERE (Not(r5.IsDeleted) && ((r3.Id != NULL) && (r3.Id == r5.ReviewId))) && r5.IsLike) AS c, (
                    SELECT COUNT(*)
                    FROM Reactions AS r6
                    WHERE (Not(r6.IsDeleted) && ((r3.Id != NULL) && (r3.Id == r6.ReviewId))) && Not(r6.IsLike)) AS c0
                FROM 
                (
                    SELECT TOP(5) r2.Id, r2.Comment, r2.CreatedAt, r2.MovieId, r2.Rating, r2.UserId
                    FROM Reviews AS r2
                    WHERE Not(r2.IsDeleted) && ((m2.Id != NULL) && (m2.Id == r2.MovieId))
                    ORDER BY r2.CreatedAt DESC
                ) AS r3
                INNER JOIN 
                (
                    SELECT m0.Id, m0.Title
                    FROM Movies AS m0
                    WHERE Not(m0.IsDeleted)
                ) AS m1 ON r3.MovieId == m1.Id
                INNER JOIN 
                (
                    SELECT u.Id, u.Username
                    FROM Users AS u
                    WHERE Not(u.IsDeleted)
                ) AS u0 ON r3.UserId == u0.Id
                LEFT JOIN 
                (
                    SELECT r4.Id, r4.IsLike, r4.ReviewId, r4.UserId
                    FROM Reactions AS r4
                    WHERE Not(r4.IsDeleted)
                ) AS r8 ON r3.Id == r8.ReviewId
            ) AS s
            ORDER BY m2.Id ASC, r7.Id ASC, s.CreatedAt DESC, s.Id ASC, s.Id0 ASC, s.Id1 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                int? value1;
                string value2;
                string value3;
                DateOnly? value4;
                string value5;
                string value6;
                double? value7;
                ICollection<Review> namelessParameter{0};
                ICollection<Review> namelessParameter{1};
                List<ReviewResponse> namelessParameter{2};
                value1 = (int?)dataReader.GetInt32(0);
                value2 = dataReader.GetString(1);
                value3 = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                value4 = dataReader.IsDBNull(3) ? default(DateOnly?) : (DateOnly?)dataReader.GetFieldValue<DateOnly>(3);
                value5 = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                value6 = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                value7 = dataReader.IsDBNull(6) ? default(double?) : (double?)dataReader.GetDouble(6);
                namelessParameter{0} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Movie, ICollection<Review>, Review> | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie").FindNavigation("Reviews").GetCollectionAccessor()]);
                namelessParameter{1} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 1, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Movie, ICollection<Review>, Review> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Movie").FindNavigation("Reviews").GetCollectionAccessor()]);
                namelessParameter{2} = ShaperProcessingExpressionVisitor.InitializeCollection<ReviewResponse, List<ReviewResponse>>(
                    collectionId: 2, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(int?)dataReader.GetInt32(0), 
                        (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) 
                    }], 
                    clrCollectionAccessor: default(IClrCollectionAccessor));
                return resultContext.Values = new object[]
                { 
                    (object)value1, 
                    value2, 
                    value3, 
                    (object)value4, 
                    value5, 
                    value6, 
                    (object)value7, 
                    namelessParameter{0}, 
                    namelessParameter{1}, 
                    namelessParameter{2} 
                };
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext1;
                        IEntityType entityType1;
                        Review instance1;
                        materializationContext1 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance1 = default(Review);
                        dataReader.IsDBNull(7) ? default(object) : (object)dataReader.GetInt32(7) != null ? 
                        {
                            ISnapshot shadowSnapshot1;
                            shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType1 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance1 = switch (entityType1)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8), 
                                                dataReader.IsDBNull(12) ? default(int) : dataReader.GetInt32(12), 
                                                dataReader.IsDBNull(11) ? default(int) : dataReader.GetInt32(11), 
                                                dataReader.IsDBNull(13) ? default(int) : dataReader.GetInt32(13)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(7) ? default(int) : dataReader.GetInt32(7);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(9) ? default(DateTime) : dataReader.GetDateTime(9);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(10) ? default(bool) : dataReader.GetBoolean(10);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext1.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance1;
                        } : default(void);
                        return instance1;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 1, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Review instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Review);
                        dataReader.IsDBNull(7) ? default(object) : (object)dataReader.GetInt32(7) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8), 
                                                dataReader.IsDBNull(12) ? default(int) : dataReader.GetInt32(12), 
                                                dataReader.IsDBNull(11) ? default(int) : dataReader.GetInt32(11), 
                                                dataReader.IsDBNull(13) ? default(int) : dataReader.GetInt32(13)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(7) ? default(int) : dataReader.GetInt32(7);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(9) ? default(DateTime) : dataReader.GetDateTime(9);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(10) ? default(bool) : dataReader.GetBoolean(10);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<List<ReviewResponse>, ReviewResponse, ReviewResponse>(
                collectionId: 2, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                    (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                    (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    resultContext.Values == null ? 
                    {
                        int? value1;
                        int? value2;
                        string value3;
                        int? value4;
                        string value5;
                        int? value6;
                        string value7;
                        DateTime? value8;
                        List<ReactionResponse> namelessParameter{11};
                        int? value10;
                        int? value11;
                        value1 = dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14);
                        value2 = dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15);
                        value3 = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                        value4 = dataReader.IsDBNull(17) ? default(int?) : (int?)dataReader.GetInt32(17);
                        value5 = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                        value6 = dataReader.IsDBNull(19) ? default(int?) : (int?)dataReader.GetInt32(19);
                        value7 = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                        value8 = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                        namelessParameter{11} = ShaperProcessingExpressionVisitor.InitializeCollection<ReactionResponse, List<ReactionResponse>>(
                            collectionId: 3, 
                            queryContext: queryContext, 
                            dbDataReader: dataReader, 
                            resultCoordinator: resultCoordinator, 
                            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                            { 
                                (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                                (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                                (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                            }], 
                            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                            { 
                                (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                                (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                                (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                            }], 
                            clrCollectionAccessor: default(IClrCollectionAccessor));
                        value10 = dataReader.IsDBNull(28) ? default(int?) : (int?)dataReader.GetInt32(28);
                        value11 = dataReader.IsDBNull(29) ? default(int?) : (int?)dataReader.GetInt32(29);
                        return resultContext.Values = new object[]
                        { 
                            (object)value1, 
                            (object)value2, 
                            value3, 
                            (object)value4, 
                            value5, 
                            (object)value6, 
                            value7, 
                            (object)value8, 
                            namelessParameter{11}, 
                            (object)value10, 
                            (object)value11 
                        };
                    } : default(void);
                    ShaperProcessingExpressionVisitor.PopulateCollection<List<ReactionResponse>, ReactionResponse, ReactionResponse>(
                        collectionId: 3, 
                        queryContext: queryContext, 
                        dbDataReader: dataReader, 
                        resultCoordinator: resultCoordinator, 
                        parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                        { 
                            (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                            (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                            (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                        }], 
                        outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                        { 
                            (object)dataReader.IsDBNull(14) ? default(int?) : (int?)dataReader.GetInt32(14), 
                            (object)dataReader.IsDBNull(22) ? default(int?) : (int?)dataReader.GetInt32(22), 
                            (object)dataReader.IsDBNull(23) ? default(int?) : (int?)dataReader.GetInt32(23) 
                        }], 
                        selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(24) ? default(int?) : (int?)dataReader.GetInt32(24) }], 
                        parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                        { 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                        }], 
                        outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                        { 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                            (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                        }], 
                        selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                        innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                        {
                            int? value1;
                            bool? value2;
                            int? value3;
                            int? value4;
                            value1 = dataReader.IsDBNull(24) ? default(int?) : (int?)dataReader.GetInt32(24);
                            value2 = dataReader.IsDBNull(25) ? default(bool?) : (bool?)dataReader.GetBoolean(25);
                            value3 = dataReader.IsDBNull(26) ? default(int?) : (int?)dataReader.GetInt32(26);
                            value4 = dataReader.IsDBNull(27) ? default(int?) : (int?)dataReader.GetInt32(27);
                            return new ReactionResponse{ 
                                Id = (int)value1, 
                                IsLike = (bool)value2, 
                                ReviewId = (int)value3, 
                                UserId = (int)value4 
                            }
                            ;
                        });
                    return IsTrue(resultCoordinator.ResultReady)
                     ? new ReviewResponse{ 
                        Id = (int)(int?)(resultContext.Values[0]), 
                        MovieId = (int)(int?)(resultContext.Values[1]), 
                        MovieTitle = (string)(resultContext.Values[2]), 
                        UserId = (int)(int?)(resultContext.Values[3]), 
                        Username = (string)(resultContext.Values[4]), 
                        Rating = (int)(int?)(resultContext.Values[5]), 
                        Comment = (string)(resultContext.Values[6]), 
                        CreatedAt = (DateTime)(DateTime?)(resultContext.Values[7]), 
                        Reactions = (List<ReactionResponse>)(resultContext.Values[8]), 
                        Likes = (int)(int?)(resultContext.Values[9]), 
                        Dislikes = (int)(int?)(resultContext.Values[10]) 
                    }
                     : default(ReviewResponse);
                });
            return IsTrue(resultCoordinator.ResultReady)
             ? new MovieDetails{ 
                Id = (int)(int?)(resultContext.Values[0]), 
                Title = (string)(resultContext.Values[1]), 
                Description = (string)(resultContext.Values[2]), 
                ReleaseDate = (DateOnly?)(resultContext.Values[3]), 
                Genre = (string)(resultContext.Values[4]), 
                Director = (string)(resultContext.Values[5]), 
                AverageRating = (double)(double?)(resultContext.Values[6]), 
                ReviewCount = (int)(ICollection<Review>)(resultContext.Values[7]) == default(ICollection<Review>) ? null : (int?)((ICollection<Review>)(resultContext.Values[8])).Count, 
                LastReviews = (List<ReviewResponse>)(resultContext.Values[9]) 
            }
             : default(MovieDetails);
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 01:00:39 => DBG | Creating DbConnection.
02.02, 01:00:39 => DBG | Created DbConnection. (0ms).
02.02, 01:00:39 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:00:39 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:00:39 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:00:39 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:00:39 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:00:39 => DBG | Executing DbCommand [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM (
    SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
            SELECT AVG(CAST([r0].[Rating] AS float))
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
        ELSE 0.0E0
    END AS [c]
    FROM [Movies] AS [m]
    WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
) AS [m2]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r7] ON [m2].[Id] = [r7].[MovieId]
OUTER APPLY (
    SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r6]
        WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM (
        SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
        FROM [Reviews] AS [r2]
        WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
        ORDER BY [r2].[CreatedAt] DESC
    ) AS [r3]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r3].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit)
    ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
) AS [s]
ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:00:39 => INF | Executed DbCommand (18ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM (
    SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
            SELECT AVG(CAST([r0].[Rating] AS float))
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
        ELSE 0.0E0
    END AS [c]
    FROM [Movies] AS [m]
    WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
) AS [m2]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r7] ON [m2].[Id] = [r7].[MovieId]
OUTER APPLY (
    SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r6]
        WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM (
        SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
        FROM [Reviews] AS [r2]
        WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
        ORDER BY [r2].[CreatedAt] DESC
    ) AS [r3]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r3].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit)
    ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
) AS [s]
ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:00:39 => INF | info: 02.02.2025 01:00:39.839 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[@__id_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
      FROM (
          SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
              WHEN (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r]
                  WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r]
                  WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
                  SELECT AVG(CAST([r0].[Rating] AS float))
                  FROM [Reviews] AS [r0]
                  WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
              ELSE 0.0E0
          END AS [c]
          FROM [Movies] AS [m]
          WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
      ) AS [m2]
      LEFT JOIN (
          SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
          FROM [Reviews] AS [r1]
          WHERE [r1].[IsDeleted] = CAST(0 AS bit)
      ) AS [r7] ON [m2].[Id] = [r7].[MovieId]
      OUTER APPLY (
          SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r5]
              WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r6]
              WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
          FROM (
              SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
              FROM [Reviews] AS [r2]
              WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
              ORDER BY [r2].[CreatedAt] DESC
          ) AS [r3]
          INNER JOIN (
              SELECT [m0].[Id], [m0].[Title]
              FROM [Movies] AS [m0]
              WHERE [m0].[IsDeleted] = CAST(0 AS bit)
          ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
          INNER JOIN (
              SELECT [u].[Id], [u].[Username]
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit)
          ) AS [u0] ON [r3].[UserId] = [u0].[Id]
          LEFT JOIN (
              SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
              FROM [Reactions] AS [r4]
              WHERE [r4].[IsDeleted] = CAST(0 AS bit)
          ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
      ) AS [s]
      ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:00:39 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:00:39 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 5ms reading results.
02.02, 01:00:39 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:00:39 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:00:39 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 98.6895ms.
02.02, 01:00:39 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:00:39 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:00:39 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:00:39 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:00:39 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:00:39 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:00:39 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[CineVault.API.Controllers.Movies.MovieDetails, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
02.02, 01:00:39 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API) in 120.3591ms
02.02, 01:00:39 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:00:39 => INF | Serilog | Handled request: /api/v2/movies/1/movie-details, for 130 milliseconds
02.02, 01:00:39 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:00:39 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:00:39 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:00:39 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies/1/movie-details - 200 null application/json; charset=utf-8 151.3046ms
02.02, 01:01:19 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/users - application/json 224
02.02, 01:01:19 => DBG | 2 candidate(s) found for the request path '/api/v2/users'
02.02, 01:01:19 => DBG | Endpoint 'CineVault.API.Controllers.Users.UsersController.CreateUserV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Users' is valid for the request path '/api/v2/users'
02.02, 01:01:19 => DBG | Endpoint 'CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Users' is valid for the request path '/api/v2/users'
02.02, 01:01:19 => DBG | Request matched endpoint 'CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API)'
02.02, 01:01:19 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:01:19 => INF | Serilog | Handling request: /api/v2/users for controller Users with method CreateUserV2
02.02, 01:01:19 => INF | Executing endpoint 'CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API)'
02.02, 01:01:19 => INF | Route matched with {action = "CreateUserV2", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateUserV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]) on controller CineVault.API.Controllers.Users.UsersController (CineVault.API).
02.02, 01:01:19 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:01:19 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:01:19 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:19 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:01:19 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:19 => DBG | Executing controller factory for controller CineVault.API.Controllers.Users.UsersController (CineVault.API)
02.02, 01:01:19 => DBG | Executed controller factory for controller CineVault.API.Controllers.Users.UsersController (CineVault.API)
02.02, 01:01:19 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]' ...
02.02, 01:01:19 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]' using the name '' in request data ...
02.02, 01:01:19 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:01:19 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003D": started reading request body.
02.02, 01:01:19 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003D": done reading request body.
02.02, 01:01:19 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Users.UserRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 01:01:19 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]'.
02.02, 01:01:19 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]'.
02.02, 01:01:19 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]' ...
02.02, 01:01:19 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Users.UserRequest]'.
02.02, 01:01:19 => INF | Executing action method CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:01:19 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:01:19 => DBG | Compiling query expression: 
'DbSet<User>()
    .AsNoTracking()
    .Where(u => u.Username == __request_Data_Username_0 || u.Email == __request_Data_Email_1)
    .Select(u => new { 
        UsernameExists = u.Username == __request_Data_Username_0, 
        EmailExists = u.Email == __request_Data_Email_1
     })
    .FirstOrDefault()'
02.02, 01:01:19 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<<>f__AnonymousType4<bool, bool>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<<>f__AnonymousType4<bool, bool>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                UsernameExists -> 0
                EmailExists -> 1
            SELECT TOP(1) u.Username == @__request_Data_Username_0 AS UsernameExists, u.Email == @__request_Data_Email_1 AS EmailExists
            FROM Users AS u
            WHERE Not(u.IsDeleted) && ((u.Username == @__request_Data_Username_0) || (u.Email == @__request_Data_Email_1))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                UsernameExists -> 0
                EmailExists -> 1
            SELECT TOP(1) u.Username == @__request_Data_Username_0 AS UsernameExists, u.Email == @__request_Data_Email_1 AS EmailExists
            FROM Users AS u
            WHERE Not(u.IsDeleted) && ((u.Username == @__request_Data_Username_0) || (u.Email == @__request_Data_Email_1)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            bool? value2;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            value2 = dataReader.IsDBNull(1) ? default(bool?) : (bool?)dataReader.GetBoolean(1);
            return new { 
                UsernameExists = (bool)value1, 
                EmailExists = (bool)value2
             };
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 01:01:19 => DBG | Creating DbConnection.
02.02, 01:01:19 => DBG | Created DbConnection. (0ms).
02.02, 01:01:19 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:19 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:19 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:19 => DBG | Executing DbCommand [Parameters=[@__request_Data_Username_0='IhorKobzar' (Size = 64), @__request_Data_Email_1='ihor@gmail.com' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN [u].[Username] = @__request_Data_Username_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UsernameExists], CASE
    WHEN [u].[Email] = @__request_Data_Email_1 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [EmailExists]
FROM [Users] AS [u]
WHERE [u].[IsDeleted] = CAST(0 AS bit) AND ([u].[Username] = @__request_Data_Username_0 OR [u].[Email] = @__request_Data_Email_1)
02.02, 01:01:19 => INF | Executed DbCommand (3ms) [Parameters=[@__request_Data_Username_0='IhorKobzar' (Size = 64), @__request_Data_Email_1='ihor@gmail.com' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN [u].[Username] = @__request_Data_Username_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UsernameExists], CASE
    WHEN [u].[Email] = @__request_Data_Email_1 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [EmailExists]
FROM [Users] AS [u]
WHERE [u].[IsDeleted] = CAST(0 AS bit) AND ([u].[Username] = @__request_Data_Username_0 OR [u].[Email] = @__request_Data_Email_1)
02.02, 01:01:19 => INF | info: 02.02.2025 01:01:19.719 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@__request_Data_Username_0='IhorKobzar' (Size = 64), @__request_Data_Email_1='ihor@gmail.com' (Size = 64)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) CASE
          WHEN [u].[Username] = @__request_Data_Username_0 THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [UsernameExists], CASE
          WHEN [u].[Email] = @__request_Data_Email_1 THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [EmailExists]
      FROM [Users] AS [u]
      WHERE [u].[IsDeleted] = CAST(0 AS bit) AND ([u].[Username] = @__request_Data_Username_0 OR [u].[Email] = @__request_Data_Email_1)
02.02, 01:01:19 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 01:01:19 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 01:01:19 => DBG | 'CineVaultDbContext' generated temporary value '-2147482647' for the property 'User.Id'.
02.02, 01:01:19 => DBG | Context 'CineVaultDbContext' started tracking 'User' entity with key '{Id: -2147482647}'.
02.02, 01:01:19 => INF | Serilog | Creating user...
02.02, 01:01:19 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 01:01:19 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 01:01:19 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 01:01:19 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:19 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:19 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:19 => DBG | Executing DbCommand [Parameters=[@p0='2025-02-01T23:01:19.7247648Z', @p1='ihor@gmail.com' (Nullable = false) (Size = 64), @p2='False', @p3='abcdef' (Nullable = false) (Size = 64), @p4='IhorKobzar' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedAt], [Email], [IsDeleted], [Password], [Username])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
02.02, 01:01:19 => INF | Executed DbCommand (4ms) [Parameters=[@p0='2025-02-01T23:01:19.7247648Z', @p1='ihor@gmail.com' (Nullable = false) (Size = 64), @p2='False', @p3='abcdef' (Nullable = false) (Size = 64), @p4='IhorKobzar' (Nullable = false) (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedAt], [Email], [IsDeleted], [Password], [Username])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
02.02, 01:01:19 => INF | info: 02.02.2025 01:01:19.759 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[@p0='2025-02-01T23:01:19.7247648Z', @p1='ihor@gmail.com' (Nullable = false) (Size = 64), @p2='False', @p3='abcdef' (Nullable = false) (Size = 64), @p4='IhorKobzar' (Nullable = false) (Size = 64)], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Users] ([CreatedAt], [Email], [IsDeleted], [Password], [Username])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4);
02.02, 01:01:19 => DBG | The foreign key property 'User.Id' was detected as changed from '-2147482647' to '1' for entity with key '{Id: 1}'.
02.02, 01:01:19 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 01:01:19 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:19 => DBG | The 'User' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 01:01:19 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 01:01:19 => INF | Executed action method CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 67.731ms.
02.02, 01:01:19 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:01:19 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:01:19 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:01:19 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:01:19 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:01:19 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:01:19 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 01:01:19 => INF | Executed action CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API) in 86.3584ms
02.02, 01:01:19 => INF | Executed endpoint 'CineVault.API.Controllers.Users.UsersController.CreateUserV2 (CineVault.API)'
02.02, 01:01:19 => INF | Serilog | Handled request: /api/v2/users, for 96 milliseconds
02.02, 01:01:19 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:01:19 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:19 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:01:19 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/users - 200 null application/json; charset=utf-8 107.2217ms
02.02, 01:01:39 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/reviews - application/json 245
02.02, 01:01:39 => DBG | 2 candidate(s) found for the request path '/api/v2/reviews'
02.02, 01:01:39 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:39 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:39 => DBG | Request matched endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:39 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:01:39 => INF | Serilog | Handling request: /api/v2/reviews for controller Reviews with method CreateReviewV2
02.02, 01:01:39 => INF | Executing endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:39 => INF | Route matched with {action = "CreateReviewV2", controller = "Reviews"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateReviewV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]) on controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API).
02.02, 01:01:39 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:01:39 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:01:39 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:39 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:01:39 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:39 => DBG | Executing controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:39 => DBG | Executed controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:39 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:39 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' using the name '' in request data ...
02.02, 01:01:39 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:01:39 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003F": started reading request body.
02.02, 01:01:39 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:0000003F": done reading request body.
02.02, 01:01:39 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Reviews.ReviewRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 01:01:39 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:39 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:39 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:39 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:39 => INF | Executing action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:01:39 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:01:39 => DBG | Compiling query expression: 
'DbSet<Movie>()
    .AsNoTracking()
    .Where(m => m.Id == __request_Data_MovieId_0)
    .Select(m => new { 
        UserExists = DbSet<User>()
            .Any(u => u.Id == __request_Data_UserId_1), 
        ReviewExists = DbSet<Review>()
            .Any(r => r.MovieId == __request_Data_MovieId_0 && r.UserId == __request_Data_UserId_1)
     })
    .FirstOrDefault()'
02.02, 01:01:40 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<<>f__AnonymousType3<bool, bool>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<<>f__AnonymousType3<bool, bool>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                UserExists -> 0
                ReviewExists -> 1
            SELECT TOP(1) EXISTS (
                SELECT 1
                FROM Users AS u
                WHERE Not(u.IsDeleted) && (u.Id == @__request_Data_UserId_1)) AS UserExists, EXISTS (
                SELECT 1
                FROM Reviews AS r
                WHERE Not(r.IsDeleted) && ((r.MovieId == @__request_Data_MovieId_0) && (r.UserId == @__request_Data_UserId_1))) AS ReviewExists
            FROM Movies AS m
            WHERE Not(m.IsDeleted) && (m.Id == @__request_Data_MovieId_0)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                UserExists -> 0
                ReviewExists -> 1
            SELECT TOP(1) EXISTS (
                SELECT 1
                FROM Users AS u
                WHERE Not(u.IsDeleted) && (u.Id == @__request_Data_UserId_1)) AS UserExists, EXISTS (
                SELECT 1
                FROM Reviews AS r
                WHERE Not(r.IsDeleted) && ((r.MovieId == @__request_Data_MovieId_0) && (r.UserId == @__request_Data_UserId_1))) AS ReviewExists
            FROM Movies AS m
            WHERE Not(m.IsDeleted) && (m.Id == @__request_Data_MovieId_0), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            bool? value2;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            value2 = dataReader.IsDBNull(1) ? default(bool?) : (bool?)dataReader.GetBoolean(1);
            return new { 
                UserExists = (bool)value1, 
                ReviewExists = (bool)value2
             };
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 01:01:40 => DBG | Creating DbConnection.
02.02, 01:01:40 => DBG | Created DbConnection. (0ms).
02.02, 01:01:40 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:40 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:40 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:40 => DBG | Executing DbCommand [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:40 => INF | Executed DbCommand (3ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:40 => INF | info: 02.02.2025 01:01:40.014 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [UserExists], CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [ReviewExists]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:40 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 01:01:40 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:40 => DBG | 'CineVaultDbContext' generated temporary value '-2147482647' for the property 'Review.Id'.
02.02, 01:01:40 => DBG | Context 'CineVaultDbContext' started tracking 'Review' entity with key '{Id: -2147482647}'.
02.02, 01:01:40 => INF | Serilog | Creating review...
02.02, 01:01:40 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 01:01:40 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 01:01:40 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 01:01:40 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:40 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:40 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:40 => DBG | Executing DbCommand [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:40.0195301Z', @p2='False', @p3='1', @p4='5', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:40 => INF | Executed DbCommand (3ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:40.0195301Z', @p2='False', @p3='1', @p4='5', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:40 => INF | info: 02.02.2025 01:01:40.050 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:40.0195301Z', @p2='False', @p3='1', @p4='5', @p5='1'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:40 => DBG | The foreign key property 'Review.Id' was detected as changed from '-2147482647' to '1' for entity with key '{Id: 1}'.
02.02, 01:01:40 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 3ms reading results.
02.02, 01:01:40 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 01:01:40 => DBG | The 'Review' entity with key '{Id: 1}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 01:01:40 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 01:01:40 => INF | Executed action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 66.7479ms.
02.02, 01:01:40 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:01:40 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:01:40 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:01:40 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:01:40 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:01:40 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:01:40 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 01:01:40 => INF | Executed action CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) in 83.4386ms
02.02, 01:01:40 => INF | Executed endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:40 => INF | Serilog | Handled request: /api/v2/reviews, for 93 milliseconds
02.02, 01:01:40 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:01:40 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:40 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 01:01:40 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/reviews - 200 null application/json; charset=utf-8 103.9172ms
02.02, 01:01:49 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/reviews - application/json 245
02.02, 01:01:49 => DBG | 2 candidate(s) found for the request path '/api/v2/reviews'
02.02, 01:01:49 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:49 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:49 => DBG | Request matched endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:49 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:01:49 => INF | Serilog | Handling request: /api/v2/reviews for controller Reviews with method CreateReviewV2
02.02, 01:01:49 => INF | Executing endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:49 => INF | Route matched with {action = "CreateReviewV2", controller = "Reviews"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateReviewV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]) on controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API).
02.02, 01:01:49 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:01:49 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:01:49 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:49 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:01:49 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:49 => DBG | Executing controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:49 => DBG | Executed controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:49 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:49 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' using the name '' in request data ...
02.02, 01:01:49 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:01:49 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000041": started reading request body.
02.02, 01:01:49 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000041": done reading request body.
02.02, 01:01:49 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Reviews.ReviewRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 01:01:49 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:49 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:49 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:49 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:49 => INF | Executing action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:01:49 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:01:49 => DBG | Creating DbConnection.
02.02, 01:01:49 => DBG | Created DbConnection. (0ms).
02.02, 01:01:49 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:49 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:49 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:49 => DBG | Executing DbCommand [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:49 => INF | Executed DbCommand (7ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:49 => INF | info: 02.02.2025 01:01:49.323 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='2'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [UserExists], CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [ReviewExists]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:49 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 01:01:49 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:49 => DBG | 'CineVaultDbContext' generated temporary value '-2147482646' for the property 'Review.Id'.
02.02, 01:01:49 => DBG | Context 'CineVaultDbContext' started tracking 'Review' entity with key '{Id: -2147482646}'.
02.02, 01:01:49 => INF | Serilog | Creating review...
02.02, 01:01:49 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 01:01:49 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 01:01:49 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 01:01:49 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:49 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:49 => DBG | Initialized DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:49 => DBG | Executing DbCommand [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:49.3279998Z', @p2='False', @p3='2', @p4='6', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:49 => INF | Executed DbCommand (2ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:49.3279998Z', @p2='False', @p3='2', @p4='6', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:49 => INF | info: 02.02.2025 01:01:49.338 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:49.3279998Z', @p2='False', @p3='2', @p4='6', @p5='1'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:49 => DBG | The foreign key property 'Review.Id' was detected as changed from '-2147482646' to '2' for entity with key '{Id: 2}'.
02.02, 01:01:49 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 01:01:49 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:49 => DBG | The 'Review' entity with key '{Id: 2}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 01:01:49 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 01:01:49 => INF | Executed action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 37.1211ms.
02.02, 01:01:49 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:01:49 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:01:49 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:01:49 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:01:49 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:01:49 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:01:49 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 01:01:49 => INF | Executed action CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) in 53.7596ms
02.02, 01:01:49 => INF | Executed endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:49 => INF | Serilog | Handled request: /api/v2/reviews, for 65 milliseconds
02.02, 01:01:49 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:01:49 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:49 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:01:49 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/reviews - 200 null application/json; charset=utf-8 75.9596ms
02.02, 01:01:55 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/reviews - application/json 245
02.02, 01:01:55 => DBG | 2 candidate(s) found for the request path '/api/v2/reviews'
02.02, 01:01:55 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:55 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:01:55 => DBG | Request matched endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:55 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:01:55 => INF | Serilog | Handling request: /api/v2/reviews for controller Reviews with method CreateReviewV2
02.02, 01:01:55 => INF | Executing endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:55 => INF | Route matched with {action = "CreateReviewV2", controller = "Reviews"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateReviewV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]) on controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API).
02.02, 01:01:55 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:01:55 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:01:55 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:55 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:01:55 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:01:55 => DBG | Executing controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:55 => DBG | Executed controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:01:55 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:55 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' using the name '' in request data ...
02.02, 01:01:55 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:01:55 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000043": started reading request body.
02.02, 01:01:55 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000043": done reading request body.
02.02, 01:01:55 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Reviews.ReviewRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 01:01:55 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:55 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:55 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:01:55 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:01:55 => INF | Executing action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:01:55 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:01:55 => DBG | Creating DbConnection.
02.02, 01:01:55 => DBG | Created DbConnection. (0ms).
02.02, 01:01:55 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:55 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:55 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:55 => DBG | Executing DbCommand [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='3'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:55 => INF | Executed DbCommand (4ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='3'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:55 => INF | info: 02.02.2025 01:01:55.130 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='3'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [UserExists], CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [ReviewExists]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:01:55 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 0ms reading results.
02.02, 01:01:55 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:55 => DBG | 'CineVaultDbContext' generated temporary value '-2147482645' for the property 'Review.Id'.
02.02, 01:01:55 => DBG | Context 'CineVaultDbContext' started tracking 'Review' entity with key '{Id: -2147482645}'.
02.02, 01:01:55 => INF | Serilog | Creating review...
02.02, 01:01:55 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 01:01:55 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 01:01:55 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 01:01:55 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:01:55 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:01:55 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:01:55 => DBG | Executing DbCommand [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:55.1340236Z', @p2='False', @p3='3', @p4='7', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:55 => INF | Executed DbCommand (3ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:55.1340236Z', @p2='False', @p3='3', @p4='7', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:55 => INF | info: 02.02.2025 01:01:55.146 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:01:55.1340236Z', @p2='False', @p3='3', @p4='7', @p5='1'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:01:55 => DBG | The foreign key property 'Review.Id' was detected as changed from '-2147482645' to '3' for entity with key '{Id: 3}'.
02.02, 01:01:55 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 01:01:55 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:01:55 => DBG | The 'Review' entity with key '{Id: 3}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 01:01:55 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 01:01:55 => INF | Executed action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 33.7044ms.
02.02, 01:01:55 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:01:55 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:01:55 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:01:55 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:01:55 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:01:55 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:01:55 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 01:01:55 => INF | Executed action CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) in 47.6072ms
02.02, 01:01:55 => INF | Executed endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:01:55 => INF | Serilog | Handled request: /api/v2/reviews, for 55 milliseconds
02.02, 01:01:55 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:01:55 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:01:55 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:01:55 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/reviews - 200 null application/json; charset=utf-8 77.6028ms
02.02, 01:02:00 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/reviews - application/json 245
02.02, 01:02:00 => DBG | 2 candidate(s) found for the request path '/api/v2/reviews'
02.02, 01:02:00 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV1 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:02:00 => DBG | Endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Reviews' is valid for the request path '/api/v2/reviews'
02.02, 01:02:00 => DBG | Request matched endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:02:00 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:02:00 => INF | Serilog | Handling request: /api/v2/reviews for controller Reviews with method CreateReviewV2
02.02, 01:02:00 => INF | Executing endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:02:00 => INF | Route matched with {action = "CreateReviewV2", controller = "Reviews"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[System.Int32]]] CreateReviewV2(CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]) on controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API).
02.02, 01:02:00 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:02:00 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:02:00 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:02:00 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:02:00 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:02:00 => DBG | Executing controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:02:00 => DBG | Executed controller factory for controller CineVault.API.Controllers.Reviews.ReviewsController (CineVault.API)
02.02, 01:02:00 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:02:00 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' using the name '' in request data ...
02.02, 01:02:00 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:02:00 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000045": started reading request body.
02.02, 01:02:00 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000045": done reading request body.
02.02, 01:02:00 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[[CineVault.API.Controllers.Reviews.ReviewRequest, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
02.02, 01:02:00 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:02:00 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:02:00 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]' ...
02.02, 01:02:00 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest`1[CineVault.API.Controllers.Reviews.ReviewRequest]'.
02.02, 01:02:00 => INF | Executing action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:02:00 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:02:00 => DBG | Creating DbConnection.
02.02, 01:02:00 => DBG | Created DbConnection. (0ms).
02.02, 01:02:00 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:02:00 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:02:00 => DBG | Initialized DbCommand for 'ExecuteReader' (3ms).
02.02, 01:02:00 => DBG | Executing DbCommand [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='4'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:02:00 => INF | Executed DbCommand (3ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='4'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [UserExists], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Reviews] AS [r]
        WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [ReviewExists]
FROM [Movies] AS [m]
WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:02:00 => INF | info: 02.02.2025 01:02:00.074 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[@__request_Data_UserId_1='1', @__request_Data_MovieId_0='4'], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [UserExists], CASE
          WHEN EXISTS (
              SELECT 1
              FROM [Reviews] AS [r]
              WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [r].[MovieId] = @__request_Data_MovieId_0 AND [r].[UserId] = @__request_Data_UserId_1) THEN CAST(1 AS bit)
          ELSE CAST(0 AS bit)
      END AS [ReviewExists]
      FROM [Movies] AS [m]
      WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__request_Data_MovieId_0
02.02, 01:02:00 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 01:02:00 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:02:00 => DBG | 'CineVaultDbContext' generated temporary value '-2147482644' for the property 'Review.Id'.
02.02, 01:02:00 => DBG | Context 'CineVaultDbContext' started tracking 'Review' entity with key '{Id: -2147482644}'.
02.02, 01:02:00 => INF | Serilog | Creating review...
02.02, 01:02:00 => DBG | SaveChanges starting for 'CineVaultDbContext'.
02.02, 01:02:00 => DBG | DetectChanges starting for 'CineVaultDbContext'.
02.02, 01:02:00 => DBG | DetectChanges completed for 'CineVaultDbContext'.
02.02, 01:02:00 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:02:00 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:02:00 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:02:00 => DBG | Executing DbCommand [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:02:00.0787886Z', @p2='False', @p3='4', @p4='3', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:02:00 => INF | Executed DbCommand (2ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:02:00.0787886Z', @p2='False', @p3='4', @p4='3', @p5='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:02:00 => INF | info: 02.02.2025 01:02:00.087 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[@p0='I didn't like the movie. Very strange' (Size = 512), @p1='2025-02-01T23:02:00.0787886Z', @p2='False', @p3='4', @p4='3', @p5='1'], CommandType='Text', CommandTimeout='30']
      SET IMPLICIT_TRANSACTIONS OFF;
      SET NOCOUNT ON;
      INSERT INTO [Reviews] ([Comment], [CreatedAt], [IsDeleted], [MovieId], [Rating], [UserId])
      OUTPUT INSERTED.[Id]
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
02.02, 01:02:00 => DBG | The foreign key property 'Review.Id' was detected as changed from '-2147482644' to '4' for entity with key '{Id: 4}'.
02.02, 01:02:00 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 01:02:00 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:02:00 => DBG | The 'Review' entity with key '{Id: 4}' tracked by 'CineVaultDbContext' changed state from '"Added"' to '"Unchanged"'.
02.02, 01:02:00 => DBG | SaveChanges completed for 'CineVaultDbContext' with 1 entities written to the database.
02.02, 01:02:00 => INF | Executed action method CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 31.4663ms.
02.02, 01:02:00 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:02:00 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:02:00 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:02:00 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:02:00 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:02:00 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:02:00 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
02.02, 01:02:00 => INF | Executed action CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API) in 41.5703ms
02.02, 01:02:00 => INF | Executed endpoint 'CineVault.API.Controllers.Reviews.ReviewsController.CreateReviewV2 (CineVault.API)'
02.02, 01:02:00 => INF | Serilog | Handled request: /api/v2/reviews, for 47 milliseconds
02.02, 01:02:00 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:02:00 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:00 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:02:00 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/reviews - 200 null application/json; charset=utf-8 57.3486ms
02.02, 01:02:31 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/users/1/user-stats - application/json 143
02.02, 01:02:31 => DBG | 1 candidate(s) found for the request path '/api/v2/users/1/user-stats'
02.02, 01:02:31 => DBG | Endpoint 'CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Users/{id}/user-stats' is valid for the request path '/api/v2/users/1/user-stats'
02.02, 01:02:31 => DBG | Request matched endpoint 'CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API)'
02.02, 01:02:31 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:02:31 => INF | Serilog | Handling request: /api/v2/users/1/user-stats for controller Users with method GetUserStatsV2
02.02, 01:02:31 => INF | Executing endpoint 'CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API)'
02.02, 01:02:31 => INF | Route matched with {action = "GetUserStatsV2", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Users.UserStats]]] GetUserStatsV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Users.UsersController (CineVault.API).
02.02, 01:02:31 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:02:31 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:02:31 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:02:31 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:02:31 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:02:31 => DBG | Executing controller factory for controller CineVault.API.Controllers.Users.UsersController (CineVault.API)
02.02, 01:02:31 => DBG | Executed controller factory for controller CineVault.API.Controllers.Users.UsersController (CineVault.API)
02.02, 01:02:31 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:02:31 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 01:02:31 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:02:31 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000047": started reading request body.
02.02, 01:02:31 => DBG | Connection id "0HNA32C4OUG6B", Request id "0HNA32C4OUG6B:00000047": done reading request body.
02.02, 01:02:31 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 01:02:31 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:02:31 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:02:31 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:02:31 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:02:31 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 01:02:31 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 01:02:31 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:02:31 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:02:31 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 01:02:31 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 01:02:31 => INF | Executing action method CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:02:31 => INF | Serilog | Getting user with ID 1...
02.02, 01:02:31 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:02:31 => DBG | Compiling query expression: 
'DbSet<User>()
    .AsNoTracking()
    .Select(namelessParameter{0} => new UserStats{ 
        Id = namelessParameter{0}.Id, 
        Username = namelessParameter{0}.Username, 
        Email = namelessParameter{0}.Email, 
        CreatedAt = namelessParameter{0}.CreatedAt, 
        ReviewCount = ((ICollection<Review>)namelessParameter{0}.Reviews).Count, 
        AverageRating = namelessParameter{0}.Reviews.Count != 0 ? namelessParameter{0}.Reviews
            .Average(r => r.Rating) : 0, 
        PopularUserGenres = namelessParameter{0}.Reviews
            .Where(r => r.Movie.Genre != null)
            .GroupBy(r => r.Movie.Genre)
            .OrderByDescending(g => g
                .Count())
            .Take(5)
            .Select(g => g.Key)
            .ToList(), 
        LastActivity = namelessParameter{0}.Reviews
            .Any() ? namelessParameter{0}.Reviews
            .Max(r => r.CreatedAt) : namelessParameter{0}.CreatedAt 
    }
    )
    .FirstOrDefault(u => u.Id == __id_0)'
02.02, 01:02:31 => WRN | Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 01:02:31 => INF | warn: 02.02.2025 01:02:31.197 RelationalEventId.MultipleCollectionIncludeWarning[20504] (Microsoft.EntityFrameworkCore.Query) 
      Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
02.02, 01:02:31 => DBG | Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserStats>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserStats>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Review.Comment (string) MaxLength(512), 5], [Property: Review.CreatedAt (DateTime) Required, 6], [Property: Review.IsDeleted (bool) Required, 7], [Property: Review.MovieId (int) Required FK Index, 8], [Property: Review.Rating (int) Required, 9], [Property: Review.UserId (int) Required FK Index, 10] }
                5 -> 4
                6 -> 11
                7 -> 12
                8 -> 13
            SELECT u0.Id, u0.Username, u0.Email, u0.CreatedAt, r5.Id, r5.Comment, r5.CreatedAt, r5.IsDeleted, r5.MovieId, r5.Rating, r5.UserId, u0.c, s.Genre, u0.c0
            FROM 
            (
                SELECT TOP(1) u.Id, u.Username, u.Email, u.CreatedAt, CASE
                    WHEN (
                        SELECT COUNT(*)
                        FROM Reviews AS r0
                        WHERE Not(r0.IsDeleted) && ((u.Id != NULL) && (u.Id == r0.UserId))) != 0 THEN (
                        SELECT AVG(CAST(r1.Rating AS float))
                        FROM Reviews AS r1
                        WHERE Not(r1.IsDeleted) && ((u.Id != NULL) && (u.Id == r1.UserId)))
                    ELSE 0.0E0
                END AS c, CASE
                    WHEN EXISTS (
                        SELECT 1
                        FROM Reviews AS r3
                        WHERE Not(r3.IsDeleted) && ((u.Id != NULL) && (u.Id == r3.UserId))) THEN (
                        SELECT MAX(r4.CreatedAt)
                        FROM Reviews AS r4
                        WHERE Not(r4.IsDeleted) && ((u.Id != NULL) && (u.Id == r4.UserId)))
                    ELSE u.CreatedAt
                END AS c0
                FROM Users AS u
                WHERE Not(u.IsDeleted) && (u.Id == @__id_0)
            ) AS u0
            LEFT JOIN 
            (
                SELECT r.Id, r.Comment, r.CreatedAt, r.IsDeleted, r.MovieId, r.Rating, r.UserId
                FROM Reviews AS r
                WHERE Not(r.IsDeleted)
            ) AS r5 ON u0.Id == r5.UserId
            OUTER APPLY 
            (
                SELECT TOP(5) m0.Genre, COUNT(*) AS c
                FROM Reviews AS r2
                INNER JOIN 
                (
                    SELECT m.Id, m.Genre
                    FROM Movies AS m
                    WHERE Not(m.IsDeleted)
                ) AS m0 ON r2.MovieId == m0.Id
                WHERE (Not(r2.IsDeleted) && ((u0.Id != NULL) && (u0.Id == r2.UserId))) && (m0.Genre != NULL)
                GROUP BY m0.Genre
                ORDER BY COUNT(*) DESC
            ) AS s
            ORDER BY u0.Id ASC, r5.Id ASC, s.c DESC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> 0
                1 -> 1
                2 -> 2
                3 -> 3
                4 -> Dictionary<IProperty, int> { [Property: Review.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Review.Comment (string) MaxLength(512), 5], [Property: Review.CreatedAt (DateTime) Required, 6], [Property: Review.IsDeleted (bool) Required, 7], [Property: Review.MovieId (int) Required FK Index, 8], [Property: Review.Rating (int) Required, 9], [Property: Review.UserId (int) Required FK Index, 10] }
                5 -> 4
                6 -> 11
                7 -> 12
                8 -> 13
            SELECT u0.Id, u0.Username, u0.Email, u0.CreatedAt, r5.Id, r5.Comment, r5.CreatedAt, r5.IsDeleted, r5.MovieId, r5.Rating, r5.UserId, u0.c, s.Genre, u0.c0
            FROM 
            (
                SELECT TOP(1) u.Id, u.Username, u.Email, u.CreatedAt, CASE
                    WHEN (
                        SELECT COUNT(*)
                        FROM Reviews AS r0
                        WHERE Not(r0.IsDeleted) && ((u.Id != NULL) && (u.Id == r0.UserId))) != 0 THEN (
                        SELECT AVG(CAST(r1.Rating AS float))
                        FROM Reviews AS r1
                        WHERE Not(r1.IsDeleted) && ((u.Id != NULL) && (u.Id == r1.UserId)))
                    ELSE 0.0E0
                END AS c, CASE
                    WHEN EXISTS (
                        SELECT 1
                        FROM Reviews AS r3
                        WHERE Not(r3.IsDeleted) && ((u.Id != NULL) && (u.Id == r3.UserId))) THEN (
                        SELECT MAX(r4.CreatedAt)
                        FROM Reviews AS r4
                        WHERE Not(r4.IsDeleted) && ((u.Id != NULL) && (u.Id == r4.UserId)))
                    ELSE u.CreatedAt
                END AS c0
                FROM Users AS u
                WHERE Not(u.IsDeleted) && (u.Id == @__id_0)
            ) AS u0
            LEFT JOIN 
            (
                SELECT r.Id, r.Comment, r.CreatedAt, r.IsDeleted, r.MovieId, r.Rating, r.UserId
                FROM Reviews AS r
                WHERE Not(r.IsDeleted)
            ) AS r5 ON u0.Id == r5.UserId
            OUTER APPLY 
            (
                SELECT TOP(5) m0.Genre, COUNT(*) AS c
                FROM Reviews AS r2
                INNER JOIN 
                (
                    SELECT m.Id, m.Genre
                    FROM Movies AS m
                    WHERE Not(m.IsDeleted)
                ) AS m0 ON r2.MovieId == m0.Id
                WHERE (Not(r2.IsDeleted) && ((u0.Id != NULL) && (u0.Id == r2.UserId))) && (m0.Genre != NULL)
                GROUP BY m0.Genre
                ORDER BY COUNT(*) DESC
            ) AS s
            ORDER BY u0.Id ASC, r5.Id ASC, s.c DESC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                int? value1;
                string value2;
                string value3;
                DateTime? value4;
                ICollection<Review> namelessParameter{0};
                ICollection<Review> namelessParameter{1};
                double? value7;
                List<string> namelessParameter{2};
                DateTime? value9;
                value1 = (int?)dataReader.GetInt32(0);
                value2 = dataReader.GetString(1);
                value3 = dataReader.GetString(2);
                value4 = (DateTime?)dataReader.GetDateTime(3);
                namelessParameter{0} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Review>, Review> | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("CineVault.API.Entities.User").FindNavigation("Reviews").GetCollectionAccessor()]);
                namelessParameter{1} = ShaperProcessingExpressionVisitor.InitializeCollection<Review, ICollection<Review>>(
                    collectionId: 1, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Review>, Review> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("CineVault.API.Entities.User").FindNavigation("Reviews").GetCollectionAccessor()]);
                value7 = dataReader.IsDBNull(11) ? default(double?) : (double?)dataReader.GetDouble(11);
                namelessParameter{2} = ShaperProcessingExpressionVisitor.InitializeCollection<string, List<string>>(
                    collectionId: 2, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(int?)dataReader.GetInt32(0), 
                        (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) 
                    }], 
                    clrCollectionAccessor: default(IClrCollectionAccessor));
                value9 = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                return resultContext.Values = new object[]
                { 
                    (object)value1, 
                    value2, 
                    value3, 
                    (object)value4, 
                    namelessParameter{0}, 
                    namelessParameter{1}, 
                    (object)value7, 
                    namelessParameter{2}, 
                    (object)value9 
                };
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext1;
                        IEntityType entityType1;
                        Review instance1;
                        materializationContext1 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance1 = default(Review);
                        dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) != null ? 
                        {
                            ISnapshot shadowSnapshot1;
                            shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType1 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance1 = switch (entityType1)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5), 
                                                dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9), 
                                                dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8), 
                                                dataReader.IsDBNull(10) ? default(int) : dataReader.GetInt32(10)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime) : dataReader.GetDateTime(6);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(7) ? default(bool) : dataReader.GetBoolean(7);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext1.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance1;
                        } : default(void);
                        return instance1;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<ICollection<Review>, Review, Review>(
                collectionId: 1, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Review entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Review instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Review);
                        dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]: 
                                    {
                                        return 
                                        {
                                            Review instance;
                                            instance = new Review(
                                                dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5), 
                                                dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9), 
                                                dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8), 
                                                dataReader.IsDBNull(10) ? default(int) : dataReader.GetInt32(10)
                                            );
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime) : dataReader.GetDateTime(6);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(7) ? default(bool) : dataReader.GetBoolean(7);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("CineVault.API.Entities.Review")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Review)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                });
            ShaperProcessingExpressionVisitor.PopulateCollection<List<string>, string, string>(
                collectionId: 2, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    string value1;
                    value1 = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                    return value1;
                });
            return IsTrue(resultCoordinator.ResultReady)
             ? new UserStats{ 
                Id = (int)(int?)(resultContext.Values[0]), 
                Username = (string)(resultContext.Values[1]), 
                Email = (string)(resultContext.Values[2]), 
                CreatedAt = (DateTime)(DateTime?)(resultContext.Values[3]), 
                ReviewCount = (int)(ICollection<Review>)(resultContext.Values[4]) == default(ICollection<Review>) ? null : (int?)((ICollection<Review>)(resultContext.Values[5])).Count, 
                AverageRating = (double)(double?)(resultContext.Values[6]), 
                PopularUserGenres = (List<string>)(resultContext.Values[7]), 
                LastActivity = (DateTime)(DateTime?)(resultContext.Values[8]) 
            }
             : default(UserStats);
        }, 
        contextType: CineVault.API.Entities.CineVaultDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
02.02, 01:02:31 => DBG | Creating DbConnection.
02.02, 01:02:31 => DBG | Created DbConnection. (1ms).
02.02, 01:02:31 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:31 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:31 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:02:31 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:02:31 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:02:31 => DBG | Executing DbCommand [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [u0].[Id], [u0].[Username], [u0].[Email], [u0].[CreatedAt], [r5].[Id], [r5].[Comment], [r5].[CreatedAt], [r5].[IsDeleted], [r5].[MovieId], [r5].[Rating], [r5].[UserId], [u0].[c], [s].[Genre], [u0].[c0]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Username], [u].[Email], [u].[CreatedAt], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) IS NULL THEN (
            SELECT AVG(CAST([r1].[Rating] AS float))
            FROM [Reviews] AS [r1]
            WHERE [r1].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r1].[UserId])
        ELSE 0.0E0
    END AS [c], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Reviews] AS [r3]
            WHERE [r3].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r3].[UserId]) THEN (
            SELECT MAX([r4].[CreatedAt])
            FROM [Reviews] AS [r4]
            WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r4].[UserId])
        ELSE [u].[CreatedAt]
    END AS [c0]
    FROM [Users] AS [u]
    WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__id_0
) AS [u0]
LEFT JOIN (
    SELECT [r].[Id], [r].[Comment], [r].[CreatedAt], [r].[IsDeleted], [r].[MovieId], [r].[Rating], [r].[UserId]
    FROM [Reviews] AS [r]
    WHERE [r].[IsDeleted] = CAST(0 AS bit)
) AS [r5] ON [u0].[Id] = [r5].[UserId]
OUTER APPLY (
    SELECT TOP(5) [m0].[Genre], COUNT(*) AS [c]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m].[Id], [m].[Genre]
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit)
    ) AS [m0] ON [r2].[MovieId] = [m0].[Id]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [u0].[Id] = [r2].[UserId] AND [m0].[Genre] IS NOT NULL
    GROUP BY [m0].[Genre]
    ORDER BY COUNT(*) DESC
) AS [s]
ORDER BY [u0].[Id], [r5].[Id], [s].[c] DESC
02.02, 01:02:31 => INF | Executed DbCommand (15ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [u0].[Id], [u0].[Username], [u0].[Email], [u0].[CreatedAt], [r5].[Id], [r5].[Comment], [r5].[CreatedAt], [r5].[IsDeleted], [r5].[MovieId], [r5].[Rating], [r5].[UserId], [u0].[c], [s].[Genre], [u0].[c0]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Username], [u].[Email], [u].[CreatedAt], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) IS NULL THEN (
            SELECT AVG(CAST([r1].[Rating] AS float))
            FROM [Reviews] AS [r1]
            WHERE [r1].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r1].[UserId])
        ELSE 0.0E0
    END AS [c], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Reviews] AS [r3]
            WHERE [r3].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r3].[UserId]) THEN (
            SELECT MAX([r4].[CreatedAt])
            FROM [Reviews] AS [r4]
            WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r4].[UserId])
        ELSE [u].[CreatedAt]
    END AS [c0]
    FROM [Users] AS [u]
    WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__id_0
) AS [u0]
LEFT JOIN (
    SELECT [r].[Id], [r].[Comment], [r].[CreatedAt], [r].[IsDeleted], [r].[MovieId], [r].[Rating], [r].[UserId]
    FROM [Reviews] AS [r]
    WHERE [r].[IsDeleted] = CAST(0 AS bit)
) AS [r5] ON [u0].[Id] = [r5].[UserId]
OUTER APPLY (
    SELECT TOP(5) [m0].[Genre], COUNT(*) AS [c]
    FROM [Reviews] AS [r2]
    INNER JOIN (
        SELECT [m].[Id], [m].[Genre]
        FROM [Movies] AS [m]
        WHERE [m].[IsDeleted] = CAST(0 AS bit)
    ) AS [m0] ON [r2].[MovieId] = [m0].[Id]
    WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [u0].[Id] = [r2].[UserId] AND [m0].[Genre] IS NOT NULL
    GROUP BY [m0].[Genre]
    ORDER BY COUNT(*) DESC
) AS [s]
ORDER BY [u0].[Id], [r5].[Id], [s].[c] DESC
02.02, 01:02:31 => INF | info: 02.02.2025 01:02:31.249 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (15ms) [Parameters=[@__id_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT [u0].[Id], [u0].[Username], [u0].[Email], [u0].[CreatedAt], [r5].[Id], [r5].[Comment], [r5].[CreatedAt], [r5].[IsDeleted], [r5].[MovieId], [r5].[Rating], [r5].[UserId], [u0].[c], [s].[Genre], [u0].[c0]
      FROM (
          SELECT TOP(1) [u].[Id], [u].[Username], [u].[Email], [u].[CreatedAt], CASE
              WHEN (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r0]
                  WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) <> 0 OR (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r0]
                  WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r0].[UserId]) IS NULL THEN (
                  SELECT AVG(CAST([r1].[Rating] AS float))
                  FROM [Reviews] AS [r1]
                  WHERE [r1].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r1].[UserId])
              ELSE 0.0E0
          END AS [c], CASE
              WHEN EXISTS (
                  SELECT 1
                  FROM [Reviews] AS [r3]
                  WHERE [r3].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r3].[UserId]) THEN (
                  SELECT MAX([r4].[CreatedAt])
                  FROM [Reviews] AS [r4]
                  WHERE [r4].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = [r4].[UserId])
              ELSE [u].[CreatedAt]
          END AS [c0]
          FROM [Users] AS [u]
          WHERE [u].[IsDeleted] = CAST(0 AS bit) AND [u].[Id] = @__id_0
      ) AS [u0]
      LEFT JOIN (
          SELECT [r].[Id], [r].[Comment], [r].[CreatedAt], [r].[IsDeleted], [r].[MovieId], [r].[Rating], [r].[UserId]
          FROM [Reviews] AS [r]
          WHERE [r].[IsDeleted] = CAST(0 AS bit)
      ) AS [r5] ON [u0].[Id] = [r5].[UserId]
      OUTER APPLY (
          SELECT TOP(5) [m0].[Genre], COUNT(*) AS [c]
          FROM [Reviews] AS [r2]
          INNER JOIN (
              SELECT [m].[Id], [m].[Genre]
              FROM [Movies] AS [m]
              WHERE [m].[IsDeleted] = CAST(0 AS bit)
          ) AS [m0] ON [r2].[MovieId] = [m0].[Id]
          WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [u0].[Id] = [r2].[UserId] AND [m0].[Genre] IS NOT NULL
          GROUP BY [m0].[Genre]
          ORDER BY COUNT(*) DESC
      ) AS [s]
      ORDER BY [u0].[Id], [r5].[Id], [s].[c] DESC
02.02, 01:02:31 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:31 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 5ms reading results.
02.02, 01:02:31 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:31 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:02:31 => INF | Executed action method CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 103.8131ms.
02.02, 01:02:31 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:02:31 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:02:31 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:02:31 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:02:31 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:02:31 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:02:31 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[CineVault.API.Controllers.Users.UserStats, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
02.02, 01:02:31 => INF | Executed action CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API) in 127.2256ms
02.02, 01:02:31 => INF | Executed endpoint 'CineVault.API.Controllers.Users.UsersController.GetUserStatsV2 (CineVault.API)'
02.02, 01:02:31 => INF | Serilog | Handled request: /api/v2/users/1/user-stats, for 141 milliseconds
02.02, 01:02:31 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:02:31 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:02:31 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:02:31 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/users/1/user-stats - 200 null application/json; charset=utf-8 152.3361ms
02.02, 01:04:41 => DBG | Connection id "0HNA32C4OUG6B" is closing.
02.02, 01:04:41 => DBG | Connection id "0HNA32C4OUG6B" is closed. The last processed stream ID was 71.
02.02, 01:04:41 => DBG | Connection id "0HNA32C4OUG6B" received FIN.
02.02, 01:04:41 => DBG | Connection id "0HNA32C4OUG6B" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 01:04:41 => DBG | The connection queue processing loop for 0HNA32C4OUG6B completed.
02.02, 01:04:41 => DBG | Connection id "0HNA32C4OUG6B" stopped.
02.02, 01:07:37 => DBG | Connection id "0HNA32C4OUG6C" accepted.
02.02, 01:07:37 => DBG | Connection id "0HNA32C4OUG6C" started.
02.02, 01:07:37 => DBG | Connection 0HNA32C4OUG6C established using the following protocol: "Tls12"
02.02, 01:07:37 => INF | Request starting HTTP/2 POST https://localhost:7171/api/v2/movies/1/movie-details - application/json 143
02.02, 01:07:37 => DBG | 1 candidate(s) found for the request path '/api/v2/movies/1/movie-details'
02.02, 01:07:37 => DBG | Endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)' with route pattern 'api/v{v:apiVersion}/Movies/{id}/movie-details' is valid for the request path '/api/v2/movies/1/movie-details'
02.02, 01:07:37 => DBG | Request matched endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:07:37 => DBG | Static files was skipped as the request already matched an endpoint.
02.02, 01:07:37 => INF | Serilog | Handling request: /api/v2/movies/1/movie-details for controller Movies with method GetMovieDetailsV2
02.02, 01:07:37 => INF | Executing endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:07:37 => INF | Route matched with {action = "GetMovieDetailsV2", controller = "Movies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CineVault.API.Abstractions.Controllers.BaseResponse`1[CineVault.API.Controllers.Movies.MovieDetails]]] GetMovieDetailsV2(CineVault.API.Abstractions.Controllers.BaseRequest, Int32) on controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API).
02.02, 01:07:37 => DBG | Execution plan of authorization filters (in the following order): ["None"]
02.02, 01:07:37 => DBG | Execution plan of resource filters (in the following order): ["None"]
02.02, 01:07:37 => DBG | Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:07:37 => DBG | Execution plan of exception filters (in the following order): ["None"]
02.02, 01:07:37 => DBG | Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)","Asp.Versioning.ReportApiVersionsAttribute (Order: 0)"]
02.02, 01:07:37 => DBG | Executing controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 01:07:37 => DBG | Executed controller factory for controller CineVault.API.Controllers.Movies.MoviesController (CineVault.API)
02.02, 01:07:37 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:07:37 => DBG | Attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' using the name '' in request data ...
02.02, 01:07:37 => DBG | Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
02.02, 01:07:37 => DBG | Connection id "0HNA32C4OUG6C", Request id "0HNA32C4OUG6C:00000001": started reading request body.
02.02, 01:07:37 => DBG | Connection id "0HNA32C4OUG6C", Request id "0HNA32C4OUG6C:00000001": done reading request body.
02.02, 01:07:37 => DBG | JSON input formatter succeeded, deserializing to type 'CineVault.API.Abstractions.Controllers.BaseRequest'
02.02, 01:07:37 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:07:37 => DBG | Done attempting to bind parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:07:37 => DBG | Attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest' ...
02.02, 01:07:37 => DBG | Done attempting to validate the bound parameter 'request' of type 'CineVault.API.Abstractions.Controllers.BaseRequest'.
02.02, 01:07:37 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' ...
02.02, 01:07:37 => DBG | Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
02.02, 01:07:37 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:07:37 => DBG | Done attempting to bind parameter 'id' of type 'System.Int32'.
02.02, 01:07:37 => DBG | Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
02.02, 01:07:37 => DBG | Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
02.02, 01:07:37 => INF | Executing action method CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API) - Validation state: "Valid"
02.02, 01:07:37 => INF | Serilog | Getting movie with ID 1...
02.02, 01:07:37 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 01:07:37 => DBG | Creating DbConnection.
02.02, 01:07:37 => DBG | Created DbConnection. (0ms).
02.02, 01:07:37 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:07:37 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:07:37 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 01:07:37 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 01:07:37 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 01:07:37 => DBG | Executing DbCommand [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM (
    SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
            SELECT AVG(CAST([r0].[Rating] AS float))
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
        ELSE 0.0E0
    END AS [c]
    FROM [Movies] AS [m]
    WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
) AS [m2]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r7] ON [m2].[Id] = [r7].[MovieId]
OUTER APPLY (
    SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r6]
        WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM (
        SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
        FROM [Reviews] AS [r2]
        WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
        ORDER BY [r2].[CreatedAt] DESC
    ) AS [r3]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r3].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit)
    ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
) AS [s]
ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:07:37 => INF | Executed DbCommand (23ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
FROM (
    SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
        WHEN (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
            SELECT COUNT(*)
            FROM [Reviews] AS [r]
            WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
            SELECT AVG(CAST([r0].[Rating] AS float))
            FROM [Reviews] AS [r0]
            WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
        ELSE 0.0E0
    END AS [c]
    FROM [Movies] AS [m]
    WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
) AS [m2]
LEFT JOIN (
    SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
    FROM [Reviews] AS [r1]
    WHERE [r1].[IsDeleted] = CAST(0 AS bit)
) AS [r7] ON [m2].[Id] = [r7].[MovieId]
OUTER APPLY (
    SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r5]
        WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
        SELECT COUNT(*)
        FROM [Reactions] AS [r6]
        WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
    FROM (
        SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
        FROM [Reviews] AS [r2]
        WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
        ORDER BY [r2].[CreatedAt] DESC
    ) AS [r3]
    INNER JOIN (
        SELECT [m0].[Id], [m0].[Title]
        FROM [Movies] AS [m0]
        WHERE [m0].[IsDeleted] = CAST(0 AS bit)
    ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
    INNER JOIN (
        SELECT [u].[Id], [u].[Username]
        FROM [Users] AS [u]
        WHERE [u].[IsDeleted] = CAST(0 AS bit)
    ) AS [u0] ON [r3].[UserId] = [u0].[Id]
    LEFT JOIN (
        SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
        FROM [Reactions] AS [r4]
        WHERE [r4].[IsDeleted] = CAST(0 AS bit)
    ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
) AS [s]
ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:07:37 => INF | info: 02.02.2025 01:07:37.126 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (23ms) [Parameters=[@__id_0='1'], CommandType='Text', CommandTimeout='30']
      SELECT [m2].[Id], [m2].[Title], [m2].[Description], [m2].[ReleaseDate], [m2].[Genre], [m2].[Director], [m2].[c], [r7].[Id], [r7].[Comment], [r7].[CreatedAt], [r7].[IsDeleted], [r7].[MovieId], [r7].[Rating], [r7].[UserId], [s].[Id], [s].[MovieId], [s].[Title], [s].[UserId], [s].[Username], [s].[Rating], [s].[Comment], [s].[CreatedAt], [s].[Id0], [s].[Id1], [s].[Id2], [s].[IsLike], [s].[ReviewId], [s].[UserId0], [s].[c], [s].[c0]
      FROM (
          SELECT TOP(1) [m].[Id], [m].[Title], [m].[Description], [m].[ReleaseDate], [m].[Genre], [m].[Director], CASE
              WHEN (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r]
                  WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) <> 0 OR (
                  SELECT COUNT(*)
                  FROM [Reviews] AS [r]
                  WHERE [r].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r].[MovieId]) IS NULL THEN (
                  SELECT AVG(CAST([r0].[Rating] AS float))
                  FROM [Reviews] AS [r0]
                  WHERE [r0].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = [r0].[MovieId])
              ELSE 0.0E0
          END AS [c]
          FROM [Movies] AS [m]
          WHERE [m].[IsDeleted] = CAST(0 AS bit) AND [m].[Id] = @__id_0
      ) AS [m2]
      LEFT JOIN (
          SELECT [r1].[Id], [r1].[Comment], [r1].[CreatedAt], [r1].[IsDeleted], [r1].[MovieId], [r1].[Rating], [r1].[UserId]
          FROM [Reviews] AS [r1]
          WHERE [r1].[IsDeleted] = CAST(0 AS bit)
      ) AS [r7] ON [m2].[Id] = [r7].[MovieId]
      OUTER APPLY (
          SELECT [r3].[Id], [r3].[MovieId], [m1].[Title], [r3].[UserId], [u0].[Username], [r3].[Rating], [r3].[Comment], [r3].[CreatedAt], [m1].[Id] AS [Id0], [u0].[Id] AS [Id1], [r8].[Id] AS [Id2], [r8].[IsLike], [r8].[ReviewId], [r8].[UserId] AS [UserId0], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r5]
              WHERE [r5].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r5].[ReviewId] AND [r5].[IsLike] = CAST(1 AS bit)) AS [c], (
              SELECT COUNT(*)
              FROM [Reactions] AS [r6]
              WHERE [r6].[IsDeleted] = CAST(0 AS bit) AND [r3].[Id] = [r6].[ReviewId] AND [r6].[IsLike] = CAST(0 AS bit)) AS [c0]
          FROM (
              SELECT TOP(5) [r2].[Id], [r2].[Comment], [r2].[CreatedAt], [r2].[MovieId], [r2].[Rating], [r2].[UserId]
              FROM [Reviews] AS [r2]
              WHERE [r2].[IsDeleted] = CAST(0 AS bit) AND [m2].[Id] = [r2].[MovieId]
              ORDER BY [r2].[CreatedAt] DESC
          ) AS [r3]
          INNER JOIN (
              SELECT [m0].[Id], [m0].[Title]
              FROM [Movies] AS [m0]
              WHERE [m0].[IsDeleted] = CAST(0 AS bit)
          ) AS [m1] ON [r3].[MovieId] = [m1].[Id]
          INNER JOIN (
              SELECT [u].[Id], [u].[Username]
              FROM [Users] AS [u]
              WHERE [u].[IsDeleted] = CAST(0 AS bit)
          ) AS [u0] ON [r3].[UserId] = [u0].[Id]
          LEFT JOIN (
              SELECT [r4].[Id], [r4].[IsLike], [r4].[ReviewId], [r4].[UserId]
              FROM [Reactions] AS [r4]
              WHERE [r4].[IsDeleted] = CAST(0 AS bit)
          ) AS [r8] ON [r3].[Id] = [r8].[ReviewId]
      ) AS [s]
      ORDER BY [m2].[Id], [r7].[Id], [s].[CreatedAt] DESC, [s].[Id], [s].[Id0], [s].[Id1]
02.02, 01:07:37 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:07:37 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 01:07:37 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:07:37 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 01:07:37 => INF | Executed action method CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 38.6071ms.
02.02, 01:07:37 => DBG | List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
02.02, 01:07:37 => DBG | Attempting to select an output formatter based on Accept header '["text/plain"]'.
02.02, 01:07:37 => DBG | Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
02.02, 01:07:37 => DBG | Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
02.02, 01:07:37 => DBG | Attempting to select the first formatter in the output formatters list which can write the result.
02.02, 01:07:37 => DBG | Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
02.02, 01:07:37 => INF | Executing OkObjectResult, writing value of type 'CineVault.API.Abstractions.Controllers.BaseResponse`1[[CineVault.API.Controllers.Movies.MovieDetails, CineVault.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
02.02, 01:07:37 => INF | Executed action CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API) in 59.7847ms
02.02, 01:07:37 => INF | Executed endpoint 'CineVault.API.Controllers.Movies.MoviesController.GetMovieDetailsV2 (CineVault.API)'
02.02, 01:07:37 => INF | Serilog | Handled request: /api/v2/movies/1/movie-details, for 66 milliseconds
02.02, 01:07:37 => DBG | 'CineVaultDbContext' disposed.
02.02, 01:07:37 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 01:07:37 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 01:07:37 => INF | Request finished HTTP/2 POST https://localhost:7171/api/v2/movies/1/movie-details - 200 null application/json; charset=utf-8 73.6607ms
02.02, 01:08:18 => INF | Application is shutting down...
02.02, 01:08:18 => DBG | Hosting stopping
02.02, 01:08:18 => DBG | Connection id "0HNA32C4OUG6C" is closing.
02.02, 01:08:18 => DBG | Connection id "0HNA32C4OUG6C" is closed. The last processed stream ID was 1.
02.02, 01:08:18 => DBG | The connection queue processing loop for 0HNA32C4OUG6C completed.
02.02, 01:08:18 => DBG | Connection id "0HNA32C4OUG6C" received FIN.
02.02, 01:08:18 => DBG | Connection id "0HNA32C4OUG6C" stopped.
02.02, 01:08:18 => DBG | Connection id "0HNA32C4OUG6C" sending FIN because: "The Socket transport's send loop completed gracefully."
02.02, 01:08:18 => DBG | Hosting stopped
02.02, 02:15:10 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:15:10 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:15:10 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 02:15:10 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 02:15:11 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:15:11 => INF | warn: 02.02.2025 02:15:11.016 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:15:11 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:15:11 => DBG | Creating DbConnection.
02.02, 02:15:11 => DBG | Created DbConnection. (25ms).
02.02, 02:15:11 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Creating DbConnection.
02.02, 02:15:11 => DBG | Created DbConnection. (1ms).
02.02, 02:15:11 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:11 => DBG | Created DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:15:11 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (8ms).
02.02, 02:15:11 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:15:11 => INF | Executed DbCommand (368ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:15:11 => INF | info: 02.02.2025 02:15:11.777 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (368ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:15:11 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:11 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:11 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:11 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:15:11 => INF | Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:15:11 => INF | info: 02.02.2025 02:15:11.860 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:15:11 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (4ms).
02.02, 02:15:11 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 02:15:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:11 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:11 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:11 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:15:11 => INF | Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:15:11 => INF | info: 02.02.2025 02:15:11.971 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:15:11 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:15:11 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:11 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:15:11 => INF | info: 02.02.2025 02:15:11.977 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:15:11 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:15:11 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:15:11 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:15:11 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:15:11 => INF | Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.000 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:15:12 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:15:12 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:15:12 => INF | Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.057 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:15:12 => DBG | Committing transaction.
02.02, 02:15:12 => DBG | Committed transaction.
02.02, 02:15:12 => DBG | Disposing transaction.
02.02, 02:15:12 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:15:12 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:15:12 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.072 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteScalar' (3ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:15:12 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.080 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:15:12 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.090 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:15:12 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:12 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:15:12 => INF | Applying migration '20250201213618_InitialDb'.
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.102 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250201213618_InitialDb'.
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:15:12 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.129 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:15:12 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.138 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:15:12 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.146 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:15:12 => ERR | Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:15:12 => INF | fail: 02.02.2025 02:15:12.159 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:15:12 => DBG | Disposing transaction.
02.02, 02:15:12 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:15:12 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:15:12 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:15:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:15:12 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:15:12 => INF | info: 02.02.2025 02:15:12.171 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:15:12 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:12 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:15:12 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:15:12 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:15:12 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:20:34 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:20:34 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:20:35 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:20:35 => INF | warn: 02.02.2025 02:20:35.098 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:20:35 => DBG | The property 'Movie.ActorId' was created in shadow state because there are no eligible CLR members with a matching name.
02.02, 02:20:35 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:20:35 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:20:46 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:20:46 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:20:47 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:20:47 => INF | warn: 02.02.2025 02:20:47.005 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:20:47 => DBG | The property 'Movie.ActorId' was created in shadow state because there are no eligible CLR members with a matching name.
02.02, 02:20:47 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:20:47 => DBG | Creating DbConnection.
02.02, 02:20:47 => DBG | Created DbConnection. (24ms).
02.02, 02:20:47 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:20:47 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.453 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:20:47 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (4ms).
02.02, 02:20:47 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.467 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteScalar' (3ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:20:47 => INF | Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.490 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:20:47 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:20:47 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:20:47 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.550 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:20:47 => DBG | Committing transaction.
02.02, 02:20:47 => DBG | Committed transaction.
02.02, 02:20:47 => DBG | Disposing transaction.
02.02, 02:20:47 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:20:47 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.568 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.576 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.584 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:20:47 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:20:47 => INF | Applying migration '20250202002035_InitialDb'.
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.595 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202002035_InitialDb'.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actor] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(max) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(max) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Actor] PRIMARY KEY ([Id])
);
02.02, 02:20:47 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actor] (
    [Id] int NOT NULL IDENTITY,
    [FullName] nvarchar(max) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(max) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Actor] PRIMARY KEY ([Id])
);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.621 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Actor] (
          [Id] int NOT NULL IDENTITY,
          [FullName] nvarchar(max) NOT NULL,
          [BirthDate] date NOT NULL,
          [Biography] nvarchar(max) NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Actor] PRIMARY KEY ([Id])
      );
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.628 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [ActorId] int NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Movies_Actor_ActorId] FOREIGN KEY ([ActorId]) REFERENCES [Actor] ([Id])
);
02.02, 02:20:47 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [ActorId] int NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Movies_Actor_ActorId] FOREIGN KEY ([ActorId]) REFERENCES [Actor] ([Id])
);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.639 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [ActorId] int NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Movies_Actor_ActorId] FOREIGN KEY ([ActorId]) REFERENCES [Actor] ([Id])
      );
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:20:47 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.647 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:20:47 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.654 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Movies_ActorId] ON [Movies] ([ActorId]);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Movies_ActorId] ON [Movies] ([ActorId]);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.661 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Movies_ActorId] ON [Movies] ([ActorId]);
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.670 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.677 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.684 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.690 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002035_InitialDb', N'9.0.1');
02.02, 02:20:47 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002035_InitialDb', N'9.0.1');
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.698 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202002035_InitialDb', N'9.0.1');
02.02, 02:20:47 => DBG | Committing transaction.
02.02, 02:20:47 => DBG | Committed transaction.
02.02, 02:20:47 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:20:47 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:20:47 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:20:47 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:20:47 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:20:47 => INF | info: 02.02.2025 02:20:47.705 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:20:47 => DBG | Disposing transaction.
02.02, 02:20:47 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:20:47 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:20:47 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:20:47 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:22:07 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:22:07 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:22:07 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:22:07 => INF | warn: 02.02.2025 02:22:07.824 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:22:07 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:22:08 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:23:03 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:23:04 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:23:04 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:23:04 => INF | warn: 02.02.2025 02:23:04.319 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:23:04 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:23:04 => DBG | Creating DbConnection.
02.02, 02:23:04 => DBG | Created DbConnection. (26ms).
02.02, 02:23:04 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:04 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:04 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:04 => DBG | Creating DbConnection.
02.02, 02:23:04 => DBG | Created DbConnection. (1ms).
02.02, 02:23:04 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:04 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:04 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:04 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:23:04 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:23:04 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:23:07 => INF | Executed DbCommand (2,571ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.288 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2,571ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:23:07 => INF | Executed DbCommand (244ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.538 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (244ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:23:07 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:23:07 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:23:07 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:23:07 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.566 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:23:07 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:23:07 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.572 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:23:07 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.592 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:23:07 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:23:07 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:23:07 => INF | Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.661 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:23:07 => DBG | Committing transaction.
02.02, 02:23:07 => DBG | Committed transaction.
02.02, 02:23:07 => DBG | Disposing transaction.
02.02, 02:23:07 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:23:07 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:23:07 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.675 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:23:07 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.683 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:23:07 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.690 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:23:07 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:23:07 => INF | Applying migration '20250202002208_InitialDb'.
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.702 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202002208_InitialDb'.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:23:07 => INF | Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.740 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:23:07 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.749 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:23:07 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.757 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:23:07 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.764 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:23:07 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.770 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:23:07 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.779 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:23:07 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.786 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:23:07 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.793 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:23:07 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.800 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:23:07 => DBG | Committing transaction.
02.02, 02:23:07 => DBG | Committed transaction.
02.02, 02:23:07 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:23:07 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:23:07 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:23:07 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:23:07 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:23:07 => INF | info: 02.02.2025 02:23:07.810 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:23:07 => DBG | Disposing transaction.
02.02, 02:23:07 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:23:07 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:23:07 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:23:07 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:33:26 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:33:26 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:33:26 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:33:26 => INF | warn: 02.02.2025 02:33:26.594 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:33:26 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:33:27 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:34:09 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:34:09 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:34:09 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:34:09 => INF | warn: 02.02.2025 02:34:09.715 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:34:09 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:34:09 => DBG | Creating DbConnection.
02.02, 02:34:09 => DBG | Created DbConnection. (25ms).
02.02, 02:34:09 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:09 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:34:10 => INF | Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.082 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:34:10 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:34:10 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.093 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:34:10 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.111 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:34:10 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:34:10 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:34:10 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.172 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:34:10 => DBG | Committing transaction.
02.02, 02:34:10 => DBG | Committed transaction.
02.02, 02:34:10 => DBG | Disposing transaction.
02.02, 02:34:10 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:34:10 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:34:10 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.188 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:34:10 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.193 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:34:10 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.205 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:34:10 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 02:34:10 => INF | Applying migration '20250202003327_AdjustIdEntitiesNames'.
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.217 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202003327_AdjustIdEntitiesNames'.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:34:10 => ERR | Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:34:10 => INF | fail: 02.02.2025 02:34:10.237 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:34:10 => DBG | Disposing transaction.
02.02, 02:34:10 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:34:10 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:34:10 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:34:10 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:34:10 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:34:10 => INF | info: 02.02.2025 02:34:10.247 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:34:10 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:34:10 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:34:10 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:34:10 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:35:43 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:35:43 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:35:43 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:35:43 => INF | warn: 02.02.2025 02:35:43.541 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:35:43 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:35:43 => DBG | Creating DbConnection.
02.02, 02:35:43 => DBG | Created DbConnection. (24ms).
02.02, 02:35:43 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:43 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:43 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:43 => DBG | Creating DbConnection.
02.02, 02:35:43 => DBG | Created DbConnection. (2ms).
02.02, 02:35:43 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:43 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:43 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:43 => DBG | Created DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:35:43 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (8ms).
02.02, 02:35:43 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:35:44 => INF | Executed DbCommand (400ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.303 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (400ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:35:44 => INF | Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.386 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:35:44 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:35:44 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 02:35:44 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:35:44 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.481 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:35:44 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:35:44 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.487 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:35:44 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.506 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:35:44 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:35:44 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:35:44 => INF | Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.560 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:35:44 => DBG | Committing transaction.
02.02, 02:35:44 => DBG | Committed transaction.
02.02, 02:35:44 => DBG | Disposing transaction.
02.02, 02:35:44 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:35:44 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:35:44 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.575 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:35:44 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.581 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:35:44 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.591 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:35:44 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 02:35:44 => INF | Applying migration '20250202002208_InitialDb'.
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.605 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202002208_InitialDb'.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:35:44 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.632 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:35:44 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.639 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:35:44 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.647 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:35:44 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.660 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:35:44 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.666 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:35:44 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.672 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:35:44 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.677 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:35:44 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.684 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:35:44 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.693 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202002208_InitialDb', N'9.0.1');
02.02, 02:35:44 => INF | Applying migration '20250202003327_AdjustIdEntitiesNames'.
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.694 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202003327_AdjustIdEntitiesNames'.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:35:44 => ERR | Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:35:44 => INF | fail: 02.02.2025 02:35:44.712 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:35:44 => DBG | Disposing transaction.
02.02, 02:35:44 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:35:44 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:35:44 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:35:44 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:35:44 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:35:44 => INF | info: 02.02.2025 02:35:44.723 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:35:44 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:35:44 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:35:44 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:35:44 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:38:56 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:38:56 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:38:56 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:38:56 => INF | warn: 02.02.2025 02:38:56.393 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:38:56 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:38:56 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:40:43 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:40:43 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:40:44 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:40:44 => INF | warn: 02.02.2025 02:40:44.053 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:40:44 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:40:44 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:41:35 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:41:35 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:41:35 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:41:35 => INF | warn: 02.02.2025 02:41:35.580 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:41:35 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:41:36 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:42:01 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:42:01 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:42:02 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:42:02 => INF | warn: 02.02.2025 02:42:02.149 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:42:02 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:42:02 => DBG | Creating DbConnection.
02.02, 02:42:02 => DBG | Created DbConnection. (24ms).
02.02, 02:42:02 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:02 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:42:02 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:42:02 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:02 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:02 => INF | info: 02.02.2025 02:42:02.486 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:42:02 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:42:02 => DBG | Creating DbConnection.
02.02, 02:42:02 => DBG | Created DbConnection. (1ms).
02.02, 02:42:02 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:02 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:02 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:42:02 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:42:02 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:42:02 => INF | info: 02.02.2025 02:42:02.526 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 02:42:02 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:02 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:02 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:02 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:42:02 => INF | Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:42:02 => INF | info: 02.02.2025 02:42:02.547 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 02:42:02 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:42:02 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:42:02 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:42:02 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:02 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:42:28 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:42:28 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:42:28 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:42:28 => INF | warn: 02.02.2025 02:42:28.371 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:42:28 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:42:28 => DBG | Creating DbConnection.
02.02, 02:42:28 => DBG | Created DbConnection. (24ms).
02.02, 02:42:28 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:28 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:28 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:28 => DBG | Creating DbConnection.
02.02, 02:42:28 => DBG | Created DbConnection. (1ms).
02.02, 02:42:28 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:28 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:28 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:28 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:42:28 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:42:28 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:42:29 => INF | Executed DbCommand (478ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.205 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (478ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:42:29 => INF | Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.288 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (77ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:42:29 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:42:29 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:42:29 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:29 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.393 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:42:29 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:42:29 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.398 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:42:29 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.418 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:42:29 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:42:29 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:42:29 => INF | Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.473 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:42:29 => DBG | Committing transaction.
02.02, 02:42:29 => DBG | Committed transaction.
02.02, 02:42:29 => DBG | Disposing transaction.
02.02, 02:42:29 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:42:29 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.488 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:42:29 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.494 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:42:29 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.502 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:42:29 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:42:29 => INF | Applying migration '20250202004044_InitialDb'.
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.514 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202004044_InitialDb'.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:42:29 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.544 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.551 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:42:29 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.559 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:42:29 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.569 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.575 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.582 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.588 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.594 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202004044_InitialDb', N'9.0.1');
02.02, 02:42:29 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202004044_InitialDb', N'9.0.1');
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.603 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202004044_InitialDb', N'9.0.1');
02.02, 02:42:29 => INF | Applying migration '20250202004136_AdjustIdEntitiesNames'.
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.605 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202004136_AdjustIdEntitiesNames'.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:42:29 => ERR | Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:42:29 => INF | fail: 02.02.2025 02:42:29.622 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      ALTER TABLE [Users] DROP CONSTRAINT [PK_Users];
02.02, 02:42:29 => DBG | Disposing transaction.
02.02, 02:42:29 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:42:29 => DBG | Created DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:42:29 => DBG | Initialized DbCommand for 'ExecuteScalar' (3ms).
02.02, 02:42:29 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:42:29 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:42:29 => INF | info: 02.02.2025 02:42:29.633 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:42:29 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:42:29 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:42:29 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:42:29 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:45:29 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:45:29 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:45:29 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:45:29 => INF | warn: 02.02.2025 02:45:29.579 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:45:29 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:45:30 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:46:58 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:46:58 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:46:59 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:46:59 => INF | warn: 02.02.2025 02:46:59.137 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:46:59 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:46:59 => DBG | Creating DbConnection.
02.02, 02:46:59 => DBG | Created DbConnection. (24ms).
02.02, 02:46:59 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:46:59 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.489 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:46:59 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:46:59 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.502 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:46:59 => INF | Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.524 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:46:59 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:46:59 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:46:59 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.578 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:46:59 => DBG | Committing transaction.
02.02, 02:46:59 => DBG | Committed transaction.
02.02, 02:46:59 => DBG | Disposing transaction.
02.02, 02:46:59 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:46:59 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:46:59 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.594 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:46:59 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.600 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteReader' (3ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:46:59 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.610 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:46:59 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:46:59 => INF | Applying migration '20250202004044_InitialDb'.
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.622 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202004044_InitialDb'.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:46:59 => INF | Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.652 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:46:59 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.659 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:46:59 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.670 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:46:59 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.678 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewIdxId]);
02.02, 02:46:59 => ERR | Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewIdxId]);
02.02, 02:46:59 => INF | fail: 02.02.2025 02:46:59.690 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewIdxId]);
02.02, 02:46:59 => DBG | Disposing transaction.
02.02, 02:46:59 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:46:59 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:46:59 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:46:59 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:46:59 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:46:59 => INF | info: 02.02.2025 02:46:59.699 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:46:59 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:46:59 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:46:59 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:46:59 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:48:13 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:48:13 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:48:13 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:48:13 => INF | warn: 02.02.2025 02:48:13.843 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:48:13 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:48:14 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:48:35 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:48:35 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:48:35 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:48:35 => INF | warn: 02.02.2025 02:48:35.782 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:48:35 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:48:36 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:49:16 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:49:16 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:49:16 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:16 => INF | warn: 02.02.2025 02:49:16.351 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:16 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:49:16 => DBG | Creating DbConnection.
02.02, 02:49:16 => DBG | Created DbConnection. (24ms).
02.02, 02:49:16 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:16 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:16 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:16 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:16 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:49:16 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:16 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:16 => INF | info: 02.02.2025 02:49:16.614 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:49:16 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:16 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:49:16 => DBG | Creating DbConnection.
02.02, 02:49:16 => DBG | Created DbConnection. (1ms).
02.02, 02:49:16 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:16 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:16 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:16 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:16 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:16 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:49:19 => INF | Executed DbCommand (3,017ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:49:19 => INF | info: 02.02.2025 02:49:19.668 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3,017ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 02:49:19 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:19 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:19 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:19 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:49:19 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:49:19 => INF | info: 02.02.2025 02:49:19.690 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 02:49:19 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:19 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:49:19 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:19 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:49:19 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:49:19 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:19 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:49:26 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:49:26 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:49:26 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:26 => INF | warn: 02.02.2025 02:49:26.464 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:26 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:49:26 => DBG | Creating DbConnection.
02.02, 02:49:26 => DBG | Created DbConnection. (24ms).
02.02, 02:49:26 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:26 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:26 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:26 => DBG | Creating DbConnection.
02.02, 02:49:26 => DBG | Created DbConnection. (1ms).
02.02, 02:49:26 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:26 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:26 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:26 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:26 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (8ms).
02.02, 02:49:26 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:49:27 => INF | Executed DbCommand (536ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.358 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (536ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:49:27 => INF | Executed DbCommand (95ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.458 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (95ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:49:27 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (4ms).
02.02, 02:49:27 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Disposed connection to database '' on server '' (2ms).
02.02, 02:49:27 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:27 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.489 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:49:27 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:49:27 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.496 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:49:27 => INF | Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.520 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:49:27 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:49:27 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:49:27 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.585 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:49:27 => DBG | Committing transaction.
02.02, 02:49:27 => DBG | Committed transaction.
02.02, 02:49:27 => DBG | Disposing transaction.
02.02, 02:49:27 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:49:27 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:27 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.603 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:27 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.609 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:49:27 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.617 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:49:27 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:49:27 => INF | Applying migration '20250202004814_InitialDb'.
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.632 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202004814_InitialDb'.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:27 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.660 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [Id] PRIMARY KEY ([Id])
      );
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:27 => ERR | Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:27 => INF | fail: 02.02.2025 02:49:27.671 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [Id] PRIMARY KEY ([Id])
      );
02.02, 02:49:27 => DBG | Disposing transaction.
02.02, 02:49:27 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:27 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:27 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:49:27 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:49:27 => INF | info: 02.02.2025 02:49:27.682 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:49:27 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:49:27 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:49:27 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:27 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:49:55 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:49:55 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:49:55 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:55 => INF | warn: 02.02.2025 02:49:55.806 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:49:55 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:49:55 => DBG | Creating DbConnection.
02.02, 02:49:55 => DBG | Created DbConnection. (23ms).
02.02, 02:49:55 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:56 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.215 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:49:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:49:56 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.227 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:49:56 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.247 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:49:56 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:49:56 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:49:56 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.301 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:49:56 => DBG | Committing transaction.
02.02, 02:49:56 => DBG | Committed transaction.
02.02, 02:49:56 => DBG | Disposing transaction.
02.02, 02:49:56 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:49:56 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:56 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.317 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:56 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.323 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:49:56 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.331 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:49:56 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:49:56 => INF | Applying migration '20250202004814_InitialDb'.
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.343 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202004814_InitialDb'.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:56 => INF | Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.376 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [Id] PRIMARY KEY ([Id])
      );
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:56 => ERR | Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [Id] PRIMARY KEY ([Id])
);
02.02, 02:49:56 => INF | fail: 02.02.2025 02:49:56.387 RelationalEventId.CommandError[20102] (Microsoft.EntityFrameworkCore.Database.Command) 
      Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [Id] PRIMARY KEY ([Id])
      );
02.02, 02:49:56 => DBG | Disposing transaction.
02.02, 02:49:56 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:49:56 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:49:56 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:49:56 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:49:56 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:49:56 => INF | info: 02.02.2025 02:49:56.396 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:49:56 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:49:56 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:49:56 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:49:56 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:53:10 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:53:10 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:53:10 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:10 => INF | warn: 02.02.2025 02:53:10.557 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:10 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:53:11 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:53:38 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:53:38 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:53:38 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:38 => INF | warn: 02.02.2025 02:53:38.863 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:38 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:53:39 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:53:53 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:53:53 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:53:53 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:53 => INF | warn: 02.02.2025 02:53:53.405 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:53:53 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:53:53 => DBG | Creating DbConnection.
02.02, 02:53:53 => DBG | Created DbConnection. (24ms).
02.02, 02:53:53 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:53:53 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:53:53 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:53:53 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:53:53 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:53:53 => INF | info: 02.02.2025 02:53:53.736 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:53:53 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (4ms).
02.02, 02:53:53 => DBG | Creating DbConnection.
02.02, 02:53:53 => DBG | Created DbConnection. (1ms).
02.02, 02:53:53 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:53:53 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:53:53 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:53:53 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:53:53 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 02:53:53 => INF | info: 02.02.2025 02:53:53.777 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 02:53:53 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:53:53 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:53:53 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:53:53 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:53:53 => INF | Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 02:53:53 => INF | info: 02.02.2025 02:53:53.797 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 02:53:53 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:53:53 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:53:53 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:53:53 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:53:53 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:54:01 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:54:01 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:54:02 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:54:02 => INF | warn: 02.02.2025 02:54:02.169 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:54:02 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:54:02 => DBG | Creating DbConnection.
02.02, 02:54:02 => DBG | Created DbConnection. (24ms).
02.02, 02:54:02 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:02 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:02 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:02 => DBG | Creating DbConnection.
02.02, 02:54:02 => DBG | Created DbConnection. (2ms).
02.02, 02:54:02 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:02 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:02 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:02 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:54:02 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:54:02 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:54:03 => INF | Executed DbCommand (544ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.074 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (544ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:54:03 => INF | Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.168 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (85ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 02:54:03 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:54:03 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:54:03 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:03 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.194 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:54:03 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:54:03 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.202 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:54:03 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.222 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:54:03 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:54:03 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:54:03 => INF | Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.283 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:54:03 => DBG | Committing transaction.
02.02, 02:54:03 => DBG | Committed transaction.
02.02, 02:54:03 => DBG | Disposing transaction.
02.02, 02:54:03 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:54:03 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:03 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.298 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:03 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.304 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.312 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:54:03 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 1ms reading results.
02.02, 02:54:03 => INF | Applying migration '20250202005310_InitialDb'.
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.325 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005310_InitialDb'.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:54:03 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.353 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:54:03 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.362 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:54:03 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.370 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:54:03 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.377 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.383 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.392 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.398 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.404 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005310_InitialDb', N'9.0.1');
02.02, 02:54:03 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005310_InitialDb', N'9.0.1');
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.411 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005310_InitialDb', N'9.0.1');
02.02, 02:54:03 => DBG | Committing transaction.
02.02, 02:54:03 => DBG | Committed transaction.
02.02, 02:54:03 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:03 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:54:03 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:54:03 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:54:03 => INF | info: 02.02.2025 02:54:03.419 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:54:03 => DBG | Disposing transaction.
02.02, 02:54:03 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:54:03 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:54:03 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:03 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 02:54:32 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:54:32 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:54:32 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:54:32 => INF | warn: 02.02.2025 02:54:32.616 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:54:32 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:54:32 => DBG | Creating DbConnection.
02.02, 02:54:32 => DBG | Created DbConnection. (23ms).
02.02, 02:54:32 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:32 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 02:54:32 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:54:32 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:32 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:32 => INF | info: 02.02.2025 02:54:32.967 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:54:32 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:54:32 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:32 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:54:32 => INF | info: 02.02.2025 02:54:32.980 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 02:54:32 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:32 => DBG | Created DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:32 => DBG | Initialized DbCommand for 'ExecuteScalar' (2ms).
02.02, 02:54:32 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:54:32 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.001 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 02:54:33 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:54:33 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:54:33 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.056 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 02:54:33 => DBG | Committing transaction.
02.02, 02:54:33 => DBG | Committed transaction.
02.02, 02:54:33 => DBG | Disposing transaction.
02.02, 02:54:33 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 02:54:33 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:33 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.070 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:33 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.075 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteReader' (2ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteReader' (3ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:54:33 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.086 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:54:33 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:33 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 02:54:33 => INF | Applying migration '20250202005339_da'.
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.098 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005339_da'.
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 02:54:33 => INF | Executed DbCommand (121ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.237 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (121ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005339_da', N'9.0.1');
02.02, 02:54:33 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005339_da', N'9.0.1');
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.243 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005339_da', N'9.0.1');
02.02, 02:54:33 => DBG | Committing transaction.
02.02, 02:54:33 => DBG | Committed transaction.
02.02, 02:54:33 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:54:33 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:54:33 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:54:33 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:54:33 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 02:54:33 => INF | info: 02.02.2025 02:54:33.251 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 02:54:33 => DBG | Disposing transaction.
02.02, 02:54:33 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:33 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:54:33 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:54:33 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:54:33 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:56:27 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:56:27 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:56:27 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:56:27 => INF | warn: 02.02.2025 02:56:27.738 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:56:27 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:56:28 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:57:09 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:57:09 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:57:10 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:57:10 => INF | warn: 02.02.2025 02:57:10.061 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:57:10 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:57:10 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:57:57 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:57:58 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:57:58 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:57:58 => INF | warn: 02.02.2025 02:57:58.336 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:57:58 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:57:58 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:58:26 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:58:26 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:58:26 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:58:26 => INF | warn: 02.02.2025 02:58:26.443 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:58:26 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:58:26 => DBG | Creating DbConnection.
02.02, 02:58:26 => DBG | Created DbConnection. (24ms).
02.02, 02:58:26 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:26 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 02:58:27 => DBG | Created DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 02:58:27 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 02:58:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:58:27 => INF | Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 02:58:27 => INF | info: 02.02.2025 02:58:27.043 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 02:58:27 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 02:58:27 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 02:58:27 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 02:58:27 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 02:58:27 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:58:27 => INF | Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:58:27 => INF | info: 02.02.2025 02:58:27.073 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 02:58:27 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (1ms).
02.02, 02:58:27 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 02:58:27 => DBG | Created DbCommand for 'ExecuteReader' (1ms).
02.02, 02:58:27 => DBG | Initialized DbCommand for 'ExecuteReader' (2ms).
02.02, 02:58:27 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:58:27 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 02:58:27 => INF | info: 02.02.2025 02:58:27.101 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 02:58:27 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 02:58:27 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 02:58:27 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:58:27 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 02:58:27 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 02:59:22 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:59:22 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:59:22 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:59:22 => INF | warn: 02.02.2025 02:59:22.940 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:59:23 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:59:23 => DBG | 'CineVaultDbContext' disposed.
02.02, 02:59:50 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 02:59:50 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 02:59:51 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 02:59:51 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:59:51 => INF | warn: 02.02.2025 02:59:51.157 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 02:59:51 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 02:59:51 => DBG | 'CineVaultDbContext' disposed.
02.02, 03:00:43 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 03:00:43 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 03:00:43 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 03:00:43 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 03:00:43 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:00:43 => INF | warn: 02.02.2025 03:00:43.551 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:00:43 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 03:00:44 => DBG | 'CineVaultDbContext' disposed.
02.02, 03:01:02 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 03:01:02 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 03:01:03 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 03:01:03 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 03:01:03 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:01:03 => INF | warn: 02.02.2025 03:01:03.205 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:01:03 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 03:01:03 => DBG | Creating DbConnection.
02.02, 03:01:03 => DBG | Created DbConnection. (25ms).
02.02, 03:01:03 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:03 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (6ms).
02.02, 03:01:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:03 => INF | Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:03 => INF | info: 02.02.2025 03:01:03.486 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 03:01:03 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:03 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 03:01:03 => DBG | Creating DbConnection.
02.02, 03:01:03 => DBG | Created DbConnection. (1ms).
02.02, 03:01:03 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:03 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:03 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:03 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:03 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:03 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 03:01:06 => INF | Executed DbCommand (3,013ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
02.02, 03:01:06 => INF | info: 02.02.2025 03:01:06.538 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3,013ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
      END;
02.02, 03:01:06 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:06 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:06 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:06 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 03:01:06 => INF | Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
DROP DATABASE [CineVaultDb_Development];
02.02, 03:01:06 => INF | info: 02.02.2025 03:01:06.562 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      DROP DATABASE [CineVaultDb_Development];
02.02, 03:01:06 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:06 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 03:01:06 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:06 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 03:01:06 => DBG | 'CineVaultDbContext' disposed.
02.02, 03:01:06 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:06 => DBG | Disposed connection to database '' on server '' (0ms).
02.02, 03:01:12 => DBG | An 'IServiceProvider' was created for internal use by Entity Framework.
02.02, 03:01:12 => DBG | An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:EnableSensitiveDataLogging'.
02.02, 03:01:12 => DBG | The index {'ActorsId'} was not created on entity type 'ActorMovie (Dictionary<string, object>)' as the properties are already covered by the index {'ActorsId', 'MoviesId'}.
02.02, 03:01:12 => DBG | The index {'UserId'} was not created on entity type 'Reaction' as the properties are already covered by the index {'UserId', 'ReviewId'}.
02.02, 03:01:12 => WRN | Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:01:12 => INF | warn: 02.02.2025 03:01:12.443 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
02.02, 03:01:12 => DBG | Entity Framework Core 9.0.1 initialized 'CineVaultDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
02.02, 03:01:12 => DBG | Creating DbConnection.
02.02, 03:01:12 => DBG | Created DbConnection. (24ms).
02.02, 03:01:12 => DBG | Migrating using database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:12 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:12 => DBG | An error occurred using the connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:12 => DBG | Creating DbConnection.
02.02, 03:01:12 => DBG | Created DbConnection. (1ms).
02.02, 03:01:12 => DBG | Opening connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:12 => DBG | Opened connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:12 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:12 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:12 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (7ms).
02.02, 03:01:12 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 03:01:13 => INF | Executed DbCommand (562ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [CineVaultDb_Development];
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.372 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (562ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      CREATE DATABASE [CineVaultDb_Development];
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 03:01:13 => INF | Executed DbCommand (87ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
END;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.466 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (87ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
      IF SERVERPROPERTY('EngineEdition') <> 5
      BEGIN
          ALTER DATABASE [CineVaultDb_Development] SET READ_COMMITTED_SNAPSHOT ON;
      END;
02.02, 03:01:13 => DBG | Closing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Closed connection to database 'master' on server '(localdb)\mssqllocaldb' (3ms).
02.02, 03:01:13 => DBG | Disposing connection to database 'master' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Disposed connection to database '' on server '' (1ms).
02.02, 03:01:13 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:13 => INF | Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.491 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 03:01:13 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 03:01:13 => DBG | Opening connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | Opened connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => INF | Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.496 RelationalEventId.AcquiringMigrationLock[20411] (Microsoft.EntityFrameworkCore.Migrations) 
      Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 03:01:13 => INF | Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.518 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
      SELECT @result
02.02, 03:01:13 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 03:01:13 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 03:01:13 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.581 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
      BEGIN
          CREATE TABLE [__EFMigrationsHistory] (
              [MigrationId] nvarchar(150) NOT NULL,
              [ProductVersion] nvarchar(32) NOT NULL,
              CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
          );
      END;
02.02, 03:01:13 => DBG | Committing transaction.
02.02, 03:01:13 => DBG | Committed transaction.
02.02, 03:01:13 => DBG | Disposing transaction.
02.02, 03:01:13 => DBG | Beginning transaction with isolation level 'Unspecified'.
02.02, 03:01:13 => DBG | Began transaction with isolation level 'ReadCommitted'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:13 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.596 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 03:01:13 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.603 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteReader'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteReader' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteReader' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.612 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [MigrationId], [ProductVersion]
      FROM [__EFMigrationsHistory]
      ORDER BY [MigrationId];
02.02, 03:01:13 => DBG | Closing data reader to 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:13 => DBG | A data reader for 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' is being disposed after spending 2ms reading results.
02.02, 03:01:13 => INF | Applying migration '20250202005628_InitialDb'.
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.624 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005628_InitialDb'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 03:01:13 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Movies] (
    [Id] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Genre] nvarchar(max) NULL,
    [Director] nvarchar(max) NULL,
    [ReleaseDate] date NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.650 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Movies] (
          [Id] int NOT NULL IDENTITY,
          [Title] nvarchar(max) NOT NULL,
          [Description] nvarchar(max) NULL,
          [Genre] nvarchar(max) NULL,
          [Director] nvarchar(max) NULL,
          [ReleaseDate] date NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Movies] PRIMARY KEY ([Id])
      );
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 03:01:13 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.657 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Users] (
          [Id] int NOT NULL IDENTITY,
          [Username] nvarchar(max) NOT NULL,
          [Email] nvarchar(max) NOT NULL,
          [Password] nvarchar(max) NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
      );
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 03:01:13 => INF | Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reviews] (
    [Id] int NOT NULL IDENTITY,
    [Comment] nvarchar(max) NULL,
    [Rating] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [MovieId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.668 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reviews] (
          [Id] int NOT NULL IDENTITY,
          [Comment] nvarchar(max) NULL,
          [Rating] int NOT NULL,
          [CreatedAt] datetime2 NOT NULL,
          [MovieId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reviews_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [Movies] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
      );
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 03:01:13 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Reactions] (
    [Id] int NOT NULL IDENTITY,
    [IsLike] bit NOT NULL,
    [ReviewId] int NOT NULL,
    [UserId] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.675 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Reactions] (
          [Id] int NOT NULL IDENTITY,
          [IsLike] bit NOT NULL,
          [ReviewId] int NOT NULL,
          [UserId] int NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Reactions] PRIMARY KEY ([Id]),
          CONSTRAINT [FK_Reactions_Reviews_ReviewId] FOREIGN KEY ([ReviewId]) REFERENCES [Reviews] ([Id]) ON DELETE CASCADE,
          CONSTRAINT [FK_Reactions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION
      );
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.681 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_ReviewId] ON [Reactions] ([ReviewId]);
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.687 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reactions_UserId] ON [Reactions] ([UserId]);
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.695 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_MovieId] ON [Reviews] ([MovieId]);
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.701 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005628_InitialDb', N'9.0.1');
02.02, 03:01:13 => INF | Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005628_InitialDb', N'9.0.1');
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.708 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005628_InitialDb', N'9.0.1');
02.02, 03:01:13 => INF | Applying migration '20250202005710_AdjustIdEntitiesNames'.
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.709 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005710_AdjustIdEntitiesNames'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[Id]', N'UserId', 'COLUMN';
02.02, 03:01:13 => INF | Executed DbCommand (125ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[Id]', N'UserId', 'COLUMN';
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.847 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (125ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      EXEC sp_rename N'[Users].[Id]', N'UserId', 'COLUMN';
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Reviews].[Id]', N'ReviewId', 'COLUMN';
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Reviews].[Id]', N'ReviewId', 'COLUMN';
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.854 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      EXEC sp_rename N'[Reviews].[Id]', N'ReviewId', 'COLUMN';
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Reactions].[Id]', N'ReactionId', 'COLUMN';
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Reactions].[Id]', N'ReactionId', 'COLUMN';
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.860 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      EXEC sp_rename N'[Reactions].[Id]', N'ReactionId', 'COLUMN';
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 03:01:13 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.866 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      EXEC sp_rename N'[Movies].[Id]', N'MovieId', 'COLUMN';
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005710_AdjustIdEntitiesNames', N'9.0.1');
02.02, 03:01:13 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005710_AdjustIdEntitiesNames', N'9.0.1');
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.872 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005710_AdjustIdEntitiesNames', N'9.0.1');
02.02, 03:01:13 => INF | Applying migration '20250202005923_AdjustNvarcharLength'.
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.873 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005923_AdjustNvarcharLength'.
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var sysname;
SELECT @var = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Username');
IF @var IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var + '];');
ALTER TABLE [Users] ALTER COLUMN [Username] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var sysname;
SELECT @var = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Username');
IF @var IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var + '];');
ALTER TABLE [Users] ALTER COLUMN [Username] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.909 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var sysname;
      SELECT @var = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Username');
      IF @var IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var + '];');
      ALTER TABLE [Users] ALTER COLUMN [Username] nvarchar(64) NOT NULL;
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Password');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Users] ALTER COLUMN [Password] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Password');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Users] ALTER COLUMN [Password] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.928 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var1 sysname;
      SELECT @var1 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Password');
      IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var1 + '];');
      ALTER TABLE [Users] ALTER COLUMN [Password] nvarchar(64) NOT NULL;
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Email');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [Users] ALTER COLUMN [Email] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Email');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [Users] ALTER COLUMN [Email] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.947 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var2 sysname;
      SELECT @var2 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Users]') AND [c].[name] = N'Email');
      IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [Users] DROP CONSTRAINT [' + @var2 + '];');
      ALTER TABLE [Users] ALTER COLUMN [Email] nvarchar(64) NOT NULL;
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Reviews]') AND [c].[name] = N'Comment');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [Reviews] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [Reviews] ALTER COLUMN [Comment] nvarchar(512) NULL;
02.02, 03:01:13 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Reviews]') AND [c].[name] = N'Comment');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [Reviews] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [Reviews] ALTER COLUMN [Comment] nvarchar(512) NULL;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.967 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var3 sysname;
      SELECT @var3 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Reviews]') AND [c].[name] = N'Comment');
      IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [Reviews] DROP CONSTRAINT [' + @var3 + '];');
      ALTER TABLE [Reviews] ALTER COLUMN [Comment] nvarchar(512) NULL;
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var4 sysname;
SELECT @var4 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Title');
IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var4 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Title] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var4 sysname;
SELECT @var4 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Title');
IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var4 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Title] nvarchar(64) NOT NULL;
02.02, 03:01:13 => INF | info: 02.02.2025 03:01:13.986 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var4 sysname;
      SELECT @var4 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Title');
      IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var4 + '];');
      ALTER TABLE [Movies] ALTER COLUMN [Title] nvarchar(64) NOT NULL;
02.02, 03:01:13 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:13 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:13 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:13 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var5 sysname;
SELECT @var5 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Genre');
IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var5 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Genre] nvarchar(64) NULL;
02.02, 03:01:14 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var5 sysname;
SELECT @var5 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Genre');
IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var5 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Genre] nvarchar(64) NULL;
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.003 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var5 sysname;
      SELECT @var5 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Genre');
      IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var5 + '];');
      ALTER TABLE [Movies] ALTER COLUMN [Genre] nvarchar(64) NULL;
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var6 sysname;
SELECT @var6 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Director');
IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var6 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Director] nvarchar(64) NULL;
02.02, 03:01:14 => INF | Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var6 sysname;
SELECT @var6 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Director');
IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var6 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Director] nvarchar(64) NULL;
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.025 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var6 sysname;
      SELECT @var6 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Director');
      IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var6 + '];');
      ALTER TABLE [Movies] ALTER COLUMN [Director] nvarchar(64) NULL;
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (3ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var7 sysname;
SELECT @var7 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Description');
IF @var7 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var7 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Description] nvarchar(512) NULL;
02.02, 03:01:14 => INF | Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var7 sysname;
SELECT @var7 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Description');
IF @var7 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var7 + '];');
ALTER TABLE [Movies] ALTER COLUMN [Description] nvarchar(512) NULL;
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.051 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @var7 sysname;
      SELECT @var7 = [d].[name]
      FROM [sys].[default_constraints] [d]
      INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
      WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Movies]') AND [c].[name] = N'Description');
      IF @var7 IS NOT NULL EXEC(N'ALTER TABLE [Movies] DROP CONSTRAINT [' + @var7 + '];');
      ALTER TABLE [Movies] ALTER COLUMN [Description] nvarchar(512) NULL;
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005923_AdjustNvarcharLength', N'9.0.1');
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005923_AdjustNvarcharLength', N'9.0.1');
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.057 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005923_AdjustNvarcharLength', N'9.0.1');
02.02, 03:01:14 => INF | Applying migration '20250202005951_AdjustUniqueColumns'.
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.059 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202005951_AdjustUniqueColumns'.
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX [IX_Reactions_UserId] ON [Reactions];
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX [IX_Reactions_UserId] ON [Reactions];
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.072 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DROP INDEX [IX_Reactions_UserId] ON [Reactions];
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.079 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.086 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Users_Username] ON [Users] ([Username]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.093 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Reactions_UserId_ReviewId] ON [Reactions] ([UserId], [ReviewId]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.099 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Movies_Title] ON [Movies] ([Title]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005951_AdjustUniqueColumns', N'9.0.1');
02.02, 03:01:14 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202005951_AdjustUniqueColumns', N'9.0.1');
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.107 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202005951_AdjustUniqueColumns', N'9.0.1');
02.02, 03:01:14 => INF | Applying migration '20250202010044_AddActorEntity'.
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.108 RelationalEventId.MigrationApplying[20402] (Microsoft.EntityFrameworkCore.Migrations) 
      Applying migration '20250202010044_AddActorEntity'.
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (2ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [ActorId] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Actors] PRIMARY KEY ([ActorId])
);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Actors] (
    [ActorId] int NOT NULL IDENTITY,
    [FullName] nvarchar(64) NOT NULL,
    [BirthDate] date NOT NULL,
    [Biography] nvarchar(512) NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Actors] PRIMARY KEY ([ActorId])
);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.123 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [Actors] (
          [ActorId] int NOT NULL IDENTITY,
          [FullName] nvarchar(64) NOT NULL,
          [BirthDate] date NOT NULL,
          [Biography] nvarchar(512) NOT NULL,
          [IsDeleted] bit NOT NULL,
          CONSTRAINT [PK_Actors] PRIMARY KEY ([ActorId])
      );
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([ActorId]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([MovieId]) ON DELETE CASCADE
);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ActorMovie] (
    [ActorsId] int NOT NULL,
    [MoviesId] int NOT NULL,
    CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
    CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([ActorId]) ON DELETE CASCADE,
    CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([MovieId]) ON DELETE CASCADE
);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.130 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE [ActorMovie] (
          [ActorsId] int NOT NULL,
          [MoviesId] int NOT NULL,
          CONSTRAINT [PK_ActorMovie] PRIMARY KEY ([ActorsId], [MoviesId]),
          CONSTRAINT [FK_ActorMovie_Actors_ActorsId] FOREIGN KEY ([ActorsId]) REFERENCES [Actors] ([ActorId]) ON DELETE CASCADE,
          CONSTRAINT [FK_ActorMovie_Movies_MoviesId] FOREIGN KEY ([MoviesId]) REFERENCES [Movies] ([MovieId]) ON DELETE CASCADE
      );
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (4ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.139 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE INDEX [IX_ActorMovie_MoviesId] ON [ActorMovie] ([MoviesId]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.144 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE UNIQUE INDEX [IX_Actors_FullName] ON [Actors] ([FullName]);
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteNonQuery'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteNonQuery' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteNonQuery' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202010044_AddActorEntity', N'9.0.1');
02.02, 03:01:14 => INF | Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250202010044_AddActorEntity', N'9.0.1');
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.150 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
      VALUES (N'20250202010044_AddActorEntity', N'9.0.1');
02.02, 03:01:14 => DBG | Committing transaction.
02.02, 03:01:14 => DBG | Committed transaction.
02.02, 03:01:14 => DBG | Creating DbCommand for 'ExecuteScalar'.
02.02, 03:01:14 => DBG | Created DbCommand for 'ExecuteScalar' (0ms).
02.02, 03:01:14 => DBG | Initialized DbCommand for 'ExecuteScalar' (1ms).
02.02, 03:01:14 => DBG | Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 03:01:14 => INF | Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
02.02, 03:01:14 => INF | info: 02.02.2025 03:01:14.157 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      DECLARE @result int;
      EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
      SELECT @result
02.02, 03:01:14 => DBG | Disposing transaction.
02.02, 03:01:14 => DBG | Closing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:14 => DBG | Closed connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb' (0ms).
02.02, 03:01:14 => DBG | 'CineVaultDbContext' disposed.
02.02, 03:01:14 => DBG | Disposing connection to database 'CineVaultDb_Development' on server '(localdb)\mssqllocaldb'.
02.02, 03:01:14 => DBG | Disposed connection to database '' on server '' (1ms).
